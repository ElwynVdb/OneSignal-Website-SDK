{"version":3,"file":"OneSignalSDK.js","sources":["webpack:///webpack/bootstrap fca157e79d2e0891d9b9","../../node_modules/tslib/tslib.es6.js","../../src/utils.ts","../../node_modules/loglevel/lib/loglevel.js","../../src/Environment.ts","../../src/Event.ts","../../src/helpers/SubscriptionHelper.ts","../../src/services/Database.ts","../../node_modules/object-assign/index.js","../../src/vars.ts","../../node_modules/bowser/src/bowser.js","../../src/helpers/MainHelper.ts","../../src/errors/OneSignalError.js","../../src/errors/InvalidStateError.ts","../../src/helpers/EventHelper.ts","../../src/LimitStore.ts","../../src/OneSignalApi.ts","../../src/bell/Bell.ts","../../src/helpers/ServiceWorkerHelper.ts","webpack:///(webpack)/buildin/global.js","../../src/bell/ActiveAnimatedElement.ts","../../src/bell/AnimatedElement.ts","../../src/helpers/TestHelper.ts","../../node_modules/atoa/atoa.js","../../node_modules/whatwg-fetch/fetch.js","../../node_modules/js-cookie/src/js.cookie.js","../../node_modules/swivel/swivel.js","../../src/Postmam.ts","../../src/bell/Message.ts","../../src/errors/AlreadySubscribedError.ts","../../src/errors/PermissionMessageDismissedError.ts","../../src/errors/PushPermissionNotGrantedError.ts","../../src/helpers/InitHelper.ts","../../src/libraries/Emitter.ts","../../src/models/PermissionPromptType.ts","../../src/services/IndexedDb.ts","../../node_modules/contra/emitter.js","../../node_modules/heir/heir.js","../../node_modules/swivel/serialization.js","../../node_modules/wolfy87-eventemitter/EventEmitter.js","../../src/OneSignal.ts","../../src/OneSignalStub.ts","../../src/service-worker/ServiceWorker.ts","../../src/bell/Badge.ts","../../src/bell/Button.ts","../../src/bell/Dialog.ts","../../src/bell/Launcher.ts","../../src/entry.ts","../../src/errors/InvalidArgumentError.ts","../../src/errors/NotSubscribedError.ts","../../src/helpers/HttpHelper.ts","../../src/http-modal/HttpModal.ts","../../src/models/AppConfig.ts","../../src/models/AppState.ts","../../src/models/Context.ts","../../src/models/NotificationPermission.ts","../../src/models/ServiceWorkerConfig.ts","../../src/models/ServiceWorkerState.ts","../../src/models/Subscription.ts","../../src/popover/Popover.ts","../../src/services/DynamicResourceLoader.ts","../../src/utils/ValidatorUtils.ts","../../node_modules/contra/debounce.js","../../node_modules/es6-error/lib/index.js","../../node_modules/process/browser.js","../../node_modules/setimmediate/setImmediate.js","../../node_modules/swivel/page.js","../../node_modules/swivel/worker.js","../../node_modules/ticky/ticky-browser.js","../../node_modules/timers-browserify/main.js","webpack:///(webpack)/buildin/amd-define.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fca157e79d2e0891d9b9","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n};\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), q = [], c, i;\r\n    return i = { next: verb(\"next\"), \"throw\": verb(\"throw\"), \"return\": verb(\"return\") }, i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { return function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]), next(); }); }; }\r\n    function next() { if (!c && q.length) resume((c = q.shift())[0], c[1]); }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(c[3], e); } }\r\n    function step(r) { r.done ? settle(c[2], r) : r.value[0] === \"yield\" ? settle(c[2], { value: r.value[1], done: false }) : Promise.resolve(r.value[1]).then(r.value[0] === \"delegate\" ? delegate : fulfill, reject); }\r\n    function delegate(r) { step(r.done ? r : { value: [\"yield\", r.value], done: false }); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { c = void 0, f(v), next(); }\r\n};\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i = { next: verb(\"next\"), \"throw\": verb(\"throw\", function (e) { throw e; }), \"return\": verb(\"return\", function (v) { return { value: v, done: true }; }) };\r\n    return o = __asyncValues(o), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { return function (v) { return { value: [\"delegate\", (o[n] || f).call(o, v)], done: false }; }; }\r\n};\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tslib/tslib.es6.js\n// module id = 0\n// module chunks = 0","///<reference path=\"models/Action.ts\"/>\nimport * as log from \"loglevel\";\nimport * as Browser from \"bowser\";\nimport Environment from \"./Environment\";\nimport Database from \"./services/Database\";\nimport PushNotSupportedError from \"./errors/PushNotSupportedError\";\nimport SubscriptionHelper from \"./helpers/SubscriptionHelper\";\n\n\nexport function isArray(variable) {\n  return Object.prototype.toString.call( variable ) === '[object Array]';\n}\n\nvar decodeTextArea = null;\nexport function decodeHtmlEntities(text) {\n  if (Environment.isBrowser()) {\n    if (!decodeTextArea) {\n      decodeTextArea = document.createElement(\"textarea\");\n    }\n  }\n  if (decodeTextArea) {\n    decodeTextArea.innerHTML = text;\n    return decodeTextArea.value;\n  } else {\n    // Not running in a browser environment, text cannot be decoded\n    return text;\n  }\n}\n\nexport function isPushNotificationsSupported() {\n  /**\n   * It's possible a browser's user agent is modified, so we do some basic feature detection to make sure initializing\n   * the SDK won't fail. Promises are required to initialize the SDK.\n   */\n  if (typeof (window as any).Promise === \"undefined\") {\n    return false;\n  }\n\n  /*\n   TODO: Make this a little neater\n   During testing, the browser object may be initialized before the userAgent is injected\n  */\n  if (Browser.name === '' && Browser.version === '') {\n    var browser = (Browser as any)._detect(navigator.userAgent);\n  } else {\n    var browser: any =  Browser;\n  }\n  let userAgent = navigator.userAgent || '';\n\n  if (!browser.safari && typeof navigator.serviceWorker === \"undefined\") {\n    /**\n     * Browsers like Firefox Extended Support Release don't support service workers\n     */\n    return false;\n  }\n\n  if (browser.ios || (<any>browser).ipod || (<any>browser).iphone || (<any>browser).ipad)\n    return false;\n\n  if (browser.msedge || browser.msie)\n    return false;\n\n  // Facebook in-app browser\n  if ((userAgent.indexOf(\"FBAN\") > -1) || (userAgent.indexOf(\"FBAV\") > -1)) {\n    return false;\n  }\n\n  // Android Chrome WebView\n  if (navigator.appVersion.match(/ wv/))\n    return false;\n\n  /* Firefox on Android push notifications not supported until at least 48: https://bugzilla.mozilla.org/show_bug.cgi?id=1206207#c6 */\n  if (browser.firefox && Number(browser.version) < 48 && (browser.mobile || browser.tablet)) {\n    return false;\n  }\n\n  if (browser.firefox && Number(browser.version) >= 44)\n    return true;\n\n  if (browser.safari && Number(browser.version) >= 7.1)\n    return true;\n\n  if ((browser.chrome || (<any>browser).chromium) && Number(browser.version) >= 42)\n    return true;\n\n  if ((<any>browser).yandexbrowser && Number(browser.version) >= 15.12)\n    return true;\n\n  // https://www.chromestatus.com/feature/5416033485586432\n  if (browser.opera && (browser.mobile || browser.tablet) && Number(browser.version) >= 37 ||\n    browser.opera && Number(browser.version) >= 42)\n    return true;\n\n  // The earliest version of Vivaldi uses around Chrome 50\n  if ((browser as any).vivaldi)\n    return true;\n\n  return false;\n}\n\nexport function removeDomElement(selector) {\n  var els = document.querySelectorAll(selector);\n  if (els.length > 0) {\n    for (let i = 0; i < els.length; i++)\n      els[i].parentNode.removeChild(els[i]);\n  }\n}\n\n/**\n * Helper method for public APIs that waits until OneSignal is initialized, rejects if push notifications are\n * not supported, and wraps these tasks in a Promise.\n */\nexport function awaitOneSignalInitAndSupported() {\n  return new Promise((resolve, reject) => {\n    if (!OneSignal.initialized) {\n      OneSignal.once(OneSignal.EVENTS.SDK_INITIALIZED, resolve);\n    } else {\n      resolve();\n    }\n  });\n}\n\n/**\n * JSON.stringify() but converts functions to \"[Function]\" so they aren't lost.\n * Helps when logging method calls.\n */\nexport function stringify(obj) {\n  return JSON.stringify(obj, (key, value) => {\n    if (typeof value === 'function') {\n      return \"[Function]\";\n    }\n    else {\n      return value;\n    }\n  }, 4);\n}\n\nexport function executeCallback<T>(callback: Action<T>, ...args: any[]) {\n  if (callback) {\n    return callback.apply(null, args);\n  }\n}\n\nexport function logMethodCall(methodName: string, ...args) {\n  return log.debug(`Called %c${methodName}(${args.map(stringify).join(', ')})`, getConsoleStyle('code'), '.');\n}\n\nexport function isValidEmail(email) {\n  return !!email &&\n         !!email.match(/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/)\n}\n\nexport function addDomElement(targetSelectorOrElement, addOrder, elementHtml) {\n  if (typeof targetSelectorOrElement === 'string')\n    document.querySelector(targetSelectorOrElement).insertAdjacentHTML(addOrder, elementHtml);\n  else if (typeof targetSelectorOrElement === 'object')\n    targetSelectorOrElement.insertAdjacentHTML(addOrder, elementHtml);\n  else\n    throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n}\n\nexport function clearDomElementChildren(targetSelectorOrElement) {\n  if (typeof targetSelectorOrElement === 'string') {\n    var element = document.querySelector(targetSelectorOrElement);\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n  else if (typeof targetSelectorOrElement === 'object') {\n    while (targetSelectorOrElement.firstChild) {\n      targetSelectorOrElement.removeChild(targetSelectorOrElement.firstChild);\n    }\n  }\n  else\n    throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n}\n\nexport function addCssClass(targetSelectorOrElement, cssClass) {\n  if (typeof targetSelectorOrElement === 'string')\n    document.querySelector(targetSelectorOrElement).classList.add(cssClass);\n  else if (typeof targetSelectorOrElement === 'object')\n    targetSelectorOrElement.classList.add(cssClass);\n  else\n    throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n}\n\nexport function removeCssClass(targetSelectorOrElement, cssClass) {\n  if (typeof targetSelectorOrElement === 'string')\n    document.querySelector(targetSelectorOrElement).classList.remove(cssClass);\n  else if (typeof targetSelectorOrElement === 'object')\n    targetSelectorOrElement.classList.remove(cssClass);\n  else\n    throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n}\n\nexport function hasCssClass(targetSelectorOrElement, cssClass) {\n  if (typeof targetSelectorOrElement === 'string')\n    return document.querySelector(targetSelectorOrElement).classList.contains(cssClass);\n  else if (typeof targetSelectorOrElement === 'object')\n    return targetSelectorOrElement.classList.contains(cssClass);\n  else\n    throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n}\n\nvar DEVICE_TYPES = {\n  CHROME: 5,\n      SAFARI: 7,\n      FIREFOX: 8,\n};\n\nexport function getDeviceTypeForBrowser() {\n  if (Browser.chrome ||\n    (<any>Browser).yandexbrowser ||\n    Browser.opera ||\n    (Browser as any).vivaldi ||\n    (<any>Browser).chromium) {\n    return DEVICE_TYPES.CHROME;\n  } else if (Browser.firefox) {\n    return DEVICE_TYPES.FIREFOX;\n  } else if (Browser.safari) {\n    return DEVICE_TYPES.SAFARI;\n  }\n}\n\nexport function getConsoleStyle(style) {\n  if (style == 'code') {\n    return `padding: 0 1px 1px 5px;border: 1px solid #ddd;border-radius: 3px;font-family: Monaco,\"DejaVu Sans Mono\",\"Courier New\",monospace;color: #444;`;\n  } else if (style == 'bold') {\n    return `font-weight: 600;color: rgb(51, 51, 51);`;\n  } else if (style == 'alert') {\n    return `font-weight: 600;color: red;`;\n  } else if (style == 'event') {\n    return `color: green;`;\n  } else if (style == 'postmessage') {\n    return `color: orange;`;\n  } else if (style == 'serviceworkermessage') {\n    return `color: purple;`;\n  }\n}\n\n/**\n * Returns a promise for the setTimeout() method.\n * @param durationMs\n * @returns {Promise} Returns a promise that resolves when the timeout is complete.\n */\nexport function delay(durationMs) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, durationMs)\n  });\n}\n\nexport function nothing(): Promise<any> {\n  return Promise.resolve();\n}\n\nexport function executeAndTimeoutPromiseAfter(promise, milliseconds, displayError?) {\n  let timeoutPromise = new Promise(resolve => setTimeout(() => resolve('promise-timed-out'), milliseconds));\n  return Promise.race([promise, timeoutPromise]).then(value => {\n    if (value === 'promise-timed-out') {\n      log.info(displayError || `Promise ${promise} timed out after ${milliseconds} ms.`);\n      return Promise.reject(displayError || `Promise ${promise} timed out after ${milliseconds} ms.`);\n    }\n    else return value;\n  });\n}\n\nexport function when(condition, promiseIfTrue, promiseIfFalse) {\n  if (promiseIfTrue === undefined)\n    promiseIfTrue = nothing();\n  if (promiseIfFalse === undefined)\n    promiseIfFalse = nothing();\n  return (condition ? promiseIfTrue : promiseIfFalse);\n}\n\nexport function guid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var crypto = typeof window === \"undefined\" ? (global as any).crypto : (window.crypto || (<any>window).msCrypto);\n    if (crypto) {\n      var r = crypto.getRandomValues(new Uint8Array(1))[0] % 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    } else {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n      });\n    }\n  });\n}\n\n/**\n * Returns true if match is in string; otherwise, returns false.\n */\nexport function contains(indexOfAble, match) {\n  if (!indexOfAble)\n    return false;\n  return indexOfAble.indexOf(match) !== -1;\n}\n\n/**\n * Returns the current object without keys that have undefined values.\n * Regardless of whether the return result is used, the passed-in object is destructively modified.\n * Only affects keys that the object directly contains (i.e. not those inherited via the object's prototype).\n * @param object\n */\nexport function trimUndefined(object) {\n  for (var property in object) {\n    if (object.hasOwnProperty(property)) {\n      if (object[property] === undefined) {\n        delete object[property];\n      }\n    }\n  }\n  return object;\n}\n\n/**\n * Returns true if the UUID is a string of 36 characters;\n * @param uuid\n * @returns {*|boolean}\n */\nexport function isValidUuid(uuid) {\n  return /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/.test(uuid);\n}\n\n/**\n * Returns the correct subdomain if 'https://subdomain.onesignal.com' or something similar is passed.\n */\nexport function normalizeSubdomain(subdomain) {\n  subdomain = subdomain.trim();\n  let removeSubstrings = [\n    'http://www.',\n    'https://www.',\n    'http://',\n    'https://',\n    '.onesignal.com/',\n    '.onesignal.com'\n  ];\n  for (let removeSubstring of removeSubstrings) {\n    subdomain = subdomain.replace(removeSubstring, '');\n  }\n  return subdomain.toLowerCase();\n}\n\nexport function getUrlQueryParam(name) {\n  let url = window.location.href;\n  url = url.toLowerCase(); // This is just to avoid case sensitiveness\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\").toLowerCase();// This is just to avoid case sensitiveness for query parameter name\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n/**\n * Wipe OneSignal-related IndexedDB data on the \"correct\" computed origin, but OneSignal must be initialized first to use.\n */\nexport function wipeIndexedDb() {\n  log.warn('OneSignal: Wiping IndexedDB data.');\n  return Promise.all([\n    Database.remove('Ids'),\n    Database.remove('NotificationOpened'),\n    Database.remove('Options')\n  ]);\n}\n\n/**\n * Capitalizes the first letter of the string.\n * @returns {string} The string with the first letter capitalized.\n */\nexport function capitalize(text): string {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\n/**\n * Unsubscribe from push notifications without removing the active service worker.\n */\nexport function unsubscribeFromPush() {\n  log.warn('OneSignal: Unsubscribing from push.');\n  if (Environment.isServiceWorker()) {\n    return (<any>self).registration.pushManager.getSubscription()\n                       .then(subscription => {\n                         if (subscription) {\n                           return subscription.unsubscribe();\n                         } else throw new Error('Cannot unsubscribe because not subscribed.');\n                       });\n  } else {\n    if (SubscriptionHelper.isUsingSubscriptionWorkaround()) {\n      return new Promise((resolve, reject) => {\n        log.debug(\"Unsubscribe from push got called, and we're going to remotely execute it in HTTPS iFrame.\");\n        OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.UNSUBSCRIBE_FROM_PUSH, null, reply => {\n          log.debug(\"Unsubscribe from push succesfully remotely executed.\");\n          if (reply.data === OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE) {\n            resolve();\n          } else {\n            reject('Failed to remotely unsubscribe from push.');\n          }\n        });\n      });\n    } else {\n      if (!navigator.serviceWorker || !navigator.serviceWorker.controller)\n        return Promise.resolve();\n\n      return navigator.serviceWorker.ready\n                      .then(registration => registration.pushManager)\n                      .then(pushManager => pushManager.getSubscription())\n                      .then(subscription => {\n                        if (subscription) {\n                          return subscription.unsubscribe();\n                        }\n                      });\n    }\n  }\n}\n\n\n/**\n * Unregisters the active service worker.\n */\nexport function wipeServiceWorker() {\n  log.warn('OneSignal: Unregistering service worker.');\n  if (Environment.isIframe()) {\n    return;\n  }\n  if (!navigator.serviceWorker || !navigator.serviceWorker.controller)\n    return Promise.resolve();\n\n  return navigator.serviceWorker.ready\n      .then(registration => registration.unregister());\n}\n\n\n/**\n * Unsubscribe from push notifications and remove any active service worker.\n */\nexport function wipeServiceWorkerAndUnsubscribe() {\n  return Promise.all([\n    unsubscribeFromPush(),\n    wipeServiceWorker()\n  ]);\n}\n\nexport function wait(milliseconds) {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n}\n\n/**\n * Returns the part of the string after the first occurence of the specified search.\n * @param string The entire string.\n * @param search The text returned will be everything *after* search.\n * e.g. substringAfter('A white fox', 'white') => ' fox'\n */\nexport function substringAfter(string, search) {\n  return string.substr(string.indexOf(search) + search.length);\n}\n\nexport function once(targetSelectorOrElement, event, task, manualDestroy=false) {\n  if (!event) {\n    log.error('Cannot call on() with no event: ', event);\n  }\n  if (!task) {\n    log.error('Cannot call on() with no task: ', task)\n  }\n  if (typeof targetSelectorOrElement === 'string') {\n    let els = document.querySelectorAll(targetSelectorOrElement);\n    if (els.length > 0) {\n      for (let i = 0; i < els.length; i++)\n        once(els[i], event, task);\n    }\n  }\n  else if (isArray(targetSelectorOrElement)) {\n    for (let i = 0; i < targetSelectorOrElement.length; i++)\n      once(targetSelectorOrElement[i], event, task);\n  }\n  else if (typeof targetSelectorOrElement === 'object') {\n    var taskWrapper = (function () {\n      var internalTaskFunction = function (e) {\n        var destroyEventListener = function() {\n          targetSelectorOrElement.removeEventListener(e.type, taskWrapper);\n        };\n        if (!manualDestroy) {\n          destroyEventListener();\n        }\n        task(e, destroyEventListener);\n      };\n      return internalTaskFunction;\n    })();\n    targetSelectorOrElement.addEventListener(event, taskWrapper);\n  }\n  else\n    throw new Error(`${targetSelectorOrElement} must be a CSS selector string or DOM Element object.`);\n}\n\n/**\n * Returns the number of times the SDK has been loaded into the browser.\n * Expects a browser environment, otherwise this call will fail.\n */\nexport function getSdkLoadCount() {\n  return (<any>window).__oneSignalSdkLoadCount || 0;\n}\n\nexport async function awaitSdkEvent(eventName: string, predicate?: Action<any>) {\n  return await new Promise((resolve, reject) => {\n    OneSignal.once(eventName, event => {\n      if (predicate) {\n        const predicateResult = predicate(event);\n        if (predicateResult)\n          resolve(event);\n      } else resolve(event);\n    });\n  });\n}\n\n/**\n * Increments the counter describing the number of times the SDK has been loaded into the browser.\n * Expects a browser environment, otherwise this call will fail.\n */\nexport function incrementSdkLoadCount() {\n  (<any>window).__oneSignalSdkLoadCount = getSdkLoadCount() + 1;\n}\n\n/**\n * Returns the email with all whitespace removed and converted to lower case.\n */\nexport function prepareEmailForHashing(email: string): string {\n  return email.replace(/\\s/g, '').toLowerCase();\n}\n\n/**\n * Taken from: http://lig-membres.imag.fr/donsez/cours/exemplescourstechnoweb/js_securehash/\n */\nexport function md5(str: string) {\n  /*\n   * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n   * Digest Algorithm, as defined in RFC 1321.\n   * Copyright (C) Paul Johnston 1999 - 2000.\n   * Updated by Greg Holt 2000 - 2001.\n   * See http://pajhome.org.uk/site/legal.html for details.\n   */\n\n  /*\n   * Convert a 32-bit number to a hex string with ls-byte first\n   */\n  var hex_chr = \"0123456789abcdef\";\n\n  function rhex(num) {\n    var str = \"\";\n    for (var j = 0; j <= 3; j++)\n      str += hex_chr.charAt((num >> (j * 8 + 4)) & 0x0F) +\n        hex_chr.charAt((num >> (j * 8)) & 0x0F);\n    return str;\n  }\n\n  /*\n   * Convert a string to a sequence of 16-word blocks, stored as an array.\n   * Append padding bits and the length, as described in the MD5 standard.\n   */\n  function str2blks_MD5(str) {\n    var nblk = ((str.length + 8) >> 6) + 1;\n    var blks = new Array(nblk * 16);\n    for (var i = 0; i < nblk * 16; i++) blks[i] = 0;\n    for (var i = 0; i < str.length; i++)\n      blks[i >> 2] |= str.charCodeAt(i) << ((i % 4) * 8);\n    blks[i >> 2] |= 0x80 << ((i % 4) * 8);\n    blks[nblk * 16 - 2] = str.length * 8;\n    return blks;\n  }\n\n  /*\n   * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n   * to work around bugs in some JS interpreters.\n   */\n  function add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n  }\n\n  /*\n   * Bitwise rotate a 32-bit number to the left\n   */\n  function rol(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n  }\n\n  /*\n   * These functions implement the basic operation for each round of the\n   * algorithm.\n   */\n  function cmn(q, a, b, x, s, t) {\n    return add(rol(add(add(a, q), add(x, t)), s), b);\n  }\n\n  function ff(a, b, c, d, x, s, t) {\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n  }\n\n  function gg(a, b, c, d, x, s, t) {\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n  }\n\n  function hh(a, b, c, d, x, s, t) {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n  }\n\n  function ii(a, b, c, d, x, s, t) {\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\n  }\n\n  /*\n   * Take a string and return the hex representation of its MD5.\n   */\n  function calcMD5(str) {\n    var x = str2blks_MD5(str);\n    var a = 1732584193;\n    var b = -271733879;\n    var c = -1732584194;\n    var d = 271733878;\n\n    for (var i = 0; i < x.length; i += 16) {\n      var olda = a;\n      var oldb = b;\n      var oldc = c;\n      var oldd = d;\n\n      a = ff(a, b, c, d, x[i + 0], 7, -680876936);\n      d = ff(d, a, b, c, x[i + 1], 12, -389564586);\n      c = ff(c, d, a, b, x[i + 2], 17, 606105819);\n      b = ff(b, c, d, a, x[i + 3], 22, -1044525330);\n      a = ff(a, b, c, d, x[i + 4], 7, -176418897);\n      d = ff(d, a, b, c, x[i + 5], 12, 1200080426);\n      c = ff(c, d, a, b, x[i + 6], 17, -1473231341);\n      b = ff(b, c, d, a, x[i + 7], 22, -45705983);\n      a = ff(a, b, c, d, x[i + 8], 7, 1770035416);\n      d = ff(d, a, b, c, x[i + 9], 12, -1958414417);\n      c = ff(c, d, a, b, x[i + 10], 17, -42063);\n      b = ff(b, c, d, a, x[i + 11], 22, -1990404162);\n      a = ff(a, b, c, d, x[i + 12], 7, 1804603682);\n      d = ff(d, a, b, c, x[i + 13], 12, -40341101);\n      c = ff(c, d, a, b, x[i + 14], 17, -1502002290);\n      b = ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n      a = gg(a, b, c, d, x[i + 1], 5, -165796510);\n      d = gg(d, a, b, c, x[i + 6], 9, -1069501632);\n      c = gg(c, d, a, b, x[i + 11], 14, 643717713);\n      b = gg(b, c, d, a, x[i + 0], 20, -373897302);\n      a = gg(a, b, c, d, x[i + 5], 5, -701558691);\n      d = gg(d, a, b, c, x[i + 10], 9, 38016083);\n      c = gg(c, d, a, b, x[i + 15], 14, -660478335);\n      b = gg(b, c, d, a, x[i + 4], 20, -405537848);\n      a = gg(a, b, c, d, x[i + 9], 5, 568446438);\n      d = gg(d, a, b, c, x[i + 14], 9, -1019803690);\n      c = gg(c, d, a, b, x[i + 3], 14, -187363961);\n      b = gg(b, c, d, a, x[i + 8], 20, 1163531501);\n      a = gg(a, b, c, d, x[i + 13], 5, -1444681467);\n      d = gg(d, a, b, c, x[i + 2], 9, -51403784);\n      c = gg(c, d, a, b, x[i + 7], 14, 1735328473);\n      b = gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n      a = hh(a, b, c, d, x[i + 5], 4, -378558);\n      d = hh(d, a, b, c, x[i + 8], 11, -2022574463);\n      c = hh(c, d, a, b, x[i + 11], 16, 1839030562);\n      b = hh(b, c, d, a, x[i + 14], 23, -35309556);\n      a = hh(a, b, c, d, x[i + 1], 4, -1530992060);\n      d = hh(d, a, b, c, x[i + 4], 11, 1272893353);\n      c = hh(c, d, a, b, x[i + 7], 16, -155497632);\n      b = hh(b, c, d, a, x[i + 10], 23, -1094730640);\n      a = hh(a, b, c, d, x[i + 13], 4, 681279174);\n      d = hh(d, a, b, c, x[i + 0], 11, -358537222);\n      c = hh(c, d, a, b, x[i + 3], 16, -722521979);\n      b = hh(b, c, d, a, x[i + 6], 23, 76029189);\n      a = hh(a, b, c, d, x[i + 9], 4, -640364487);\n      d = hh(d, a, b, c, x[i + 12], 11, -421815835);\n      c = hh(c, d, a, b, x[i + 15], 16, 530742520);\n      b = hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n      a = ii(a, b, c, d, x[i + 0], 6, -198630844);\n      d = ii(d, a, b, c, x[i + 7], 10, 1126891415);\n      c = ii(c, d, a, b, x[i + 14], 15, -1416354905);\n      b = ii(b, c, d, a, x[i + 5], 21, -57434055);\n      a = ii(a, b, c, d, x[i + 12], 6, 1700485571);\n      d = ii(d, a, b, c, x[i + 3], 10, -1894986606);\n      c = ii(c, d, a, b, x[i + 10], 15, -1051523);\n      b = ii(b, c, d, a, x[i + 1], 21, -2054922799);\n      a = ii(a, b, c, d, x[i + 8], 6, 1873313359);\n      d = ii(d, a, b, c, x[i + 15], 10, -30611744);\n      c = ii(c, d, a, b, x[i + 6], 15, -1560198380);\n      b = ii(b, c, d, a, x[i + 13], 21, 1309151649);\n      a = ii(a, b, c, d, x[i + 4], 6, -145523070);\n      d = ii(d, a, b, c, x[i + 11], 10, -1120210379);\n      c = ii(c, d, a, b, x[i + 2], 15, 718787259);\n      b = ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n      a = add(a, olda);\n      b = add(b, oldb);\n      c = add(c, oldc);\n      d = add(d, oldd);\n    }\n    return rhex(a) + rhex(b) + rhex(c) + rhex(d);\n  }\n\n  return calcMD5(str);\n}\n\n/**\n * Taken from: http://lig-membres.imag.fr/donsez/cours/exemplescourstechnoweb/js_securehash/sha1src.html\n */\nexport function sha1(str: string) {\n  /*\n   * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n   * in FIPS PUB 180-1\n   * Copyright (C) Paul Johnston 2000.\n   * See http://pajhome.org.uk/site/legal.html for details.\n   */\n\n  /*\n   * Convert a 32-bit number to a hex string with ms-byte first\n   */\n  var hex_chr = \"0123456789abcdef\";\n\n  function hex(num) {\n    var str = \"\";\n    for (var j = 7; j >= 0; j--)\n      str += hex_chr.charAt((num >> (j * 4)) & 0x0F);\n    return str;\n  }\n\n  /*\n   * Convert a string to a sequence of 16-word blocks, stored as an array.\n   * Append padding bits and the length, as described in the SHA1 standard.\n   */\n  function str2blks_SHA1(str) {\n    var nblk = ((str.length + 8) >> 6) + 1;\n    var blks = new Array(nblk * 16);\n    for (var i = 0; i < nblk * 16; i++) blks[i] = 0;\n    for (i = 0; i < str.length; i++)\n      blks[i >> 2] |= str.charCodeAt(i) << (24 - (i % 4) * 8);\n    blks[i >> 2] |= 0x80 << (24 - (i % 4) * 8);\n    blks[nblk * 16 - 1] = str.length * 8;\n    return blks;\n  }\n\n  /*\n   * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n   * to work around bugs in some JS interpreters.\n   */\n  function add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n  }\n\n  /*\n   * Bitwise rotate a 32-bit number to the left\n   */\n  function rol(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n  }\n\n  /*\n   * Perform the appropriate triplet combination function for the current\n   * iteration\n   */\n  function ft(t, b, c, d) {\n    if (t < 20) return (b & c) | ((~b) & d);\n    if (t < 40) return b ^ c ^ d;\n    if (t < 60) return (b & c) | (b & d) | (c & d);\n    return b ^ c ^ d;\n  }\n\n  /*\n   * Determine the appropriate additive constant for the current iteration\n   */\n  function kt(t) {\n    return (t < 20) ? 1518500249 : (t < 40) ? 1859775393 :\n      (t < 60) ? -1894007588 : -899497514;\n  }\n\n  /*\n   * Take a string and return the hex representation of its SHA-1.\n   */\n  function calcSHA1(str) {\n    var x = str2blks_SHA1(str);\n    var w = new Array(80);\n\n    var a = 1732584193;\n    var b = -271733879;\n    var c = -1732584194;\n    var d = 271733878;\n    var e = -1009589776;\n\n    for (var i = 0; i < x.length; i += 16) {\n      var olda = a;\n      var oldb = b;\n      var oldc = c;\n      var oldd = d;\n      var olde = e;\n\n      for (var j = 0; j < 80; j++) {\n        if (j < 16) w[j] = x[i + j];\n        else w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n        var t = add(add(rol(a, 5), ft(j, b, c, d)), add(add(e, w[j]), kt(j)));\n        e = d;\n        d = c;\n        c = rol(b, 30);\n        b = a;\n        a = t;\n      }\n\n      a = add(a, olda);\n      b = add(b, oldb);\n      c = add(c, oldc);\n      d = add(d, oldd);\n      e = add(e, olde);\n    }\n    return hex(a) + hex(b) + hex(c) + hex(d) + hex(e);\n  }\n\n  return calcSHA1(str);\n}\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    function realMethod(methodName) {\n        if (typeof console === undefinedType) {\n            return false; // We can't build a real method without a console to log to\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // these private functions always need `this` to be set properly\n\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n    }\n\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public API\n       *\n       */\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Package-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    return defaultLogger;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/loglevel/lib/loglevel.js\n// module id = 2\n// module chunks = 0","export default class Environment {\n  static get SERVICE_WORKER() {\n    return 'ServiceWorker';\n  }\n\n  static get HOST() {\n    return \"host\";\n  }\n\n  static get POPUP() {\n    return \"popup\";\n  }\n\n  static get IFRAME() {\n    return \"iFrame\";\n  }\n\n  static get TEST() {\n    return \"test\";\n  }\n\n  static getEnv() {\n    if (typeof window === \"undefined\") {\n      if (typeof self !== \"undefined\" && typeof self.registration !== \"undefined\")\n        return Environment.SERVICE_WORKER;\n    }\n    else {\n      // If the window is the root top-most level\n      if (window === window.top) {\n        if (location.href.indexOf(\"initOneSignal\") !== -1 ||\n          (location.pathname === '/subscribe' &&\n          location.search === '') &&\n          (\n            location.hostname.endsWith('.onesignal.com') ||\n            (location.hostname.indexOf('.localhost') !== -1 && Environment.isDev())\n          )\n        )\n          return Environment.POPUP;\n        else\n          return Environment.HOST;\n      }\n      else if (location.pathname === '/webPushIframe' ||\n        location.pathname === '/webPushModal') {\n        return Environment.IFRAME;\n      }\n      else return Environment.CUSTOM_SUBDOMAIN;\n    }\n  }\n\n  static isServiceWorker() {\n    return Environment.getEnv() === Environment.SERVICE_WORKER;\n  }\n\n  /**\n   * The main site page.\n   */\n  static isHost() {\n    return Environment.getEnv() === Environment.HOST;\n  }\n\n  /**\n   * The HTTP popup asking users using our subdomain workaround to subscribe,\n   */\n  static isPopup() {\n    return Environment.getEnv() === Environment.POPUP;\n  }\n\n  static get CUSTOM_SUBDOMAIN() {\n    return \"custom_subdomain\";\n  }\n\n  /**\n   * The HTTPS iFrame we put on HTTP sites to communicate with the service worker and IndexedDB.\n   * @returns {boolean}\n   */\n  static isIframe() {\n    return Environment.getEnv() === Environment.IFRAME;\n  }\n\n  /**\n   * True if not in a service worker environment.\n   */\n  static isBrowser() {\n    return typeof window !== 'undefined';\n  }\n\n  static isStaging() {\n    return (typeof __STAGING__ === \"undefined\" ? false : __STAGING__);\n  }\n\n  static isDev() {\n    return (typeof __DEV__ === \"undefined\" ? true : __DEV__);\n  }\n\n  static isTest() {\n    return (typeof __TEST__ === \"undefined\" ? true : __TEST__);\n  }\n\n  static version() {\n    return (typeof __VERSION__ === \"undefined\" ? 1 : __VERSION__);\n  }\n\n  static isCustomSubdomain() {\n    return Environment.getEnv() === Environment.CUSTOM_SUBDOMAIN;\n  }\n\n  static get TRADITIONAL_CHINESE_LANGUAGE_TAG() {\n    return ['tw', 'hant']\n  }\n\n  static get SIMPLIFIED_CHINESE_LANGUAGE_TAG() {\n    return ['cn', 'hans']\n  }\n\n  /* Specifications: https://tools.ietf.org/html/bcp47 */\n  static getLanguage(testLanguage?) {\n    let languageTag = testLanguage || navigator.language;\n    if (languageTag) {\n      languageTag = languageTag.toLowerCase();\n      let languageSubtags = languageTag.split('-');\n      if (languageSubtags[0] == 'zh') {\n        // The language is zh-?\n        // We must categorize the language as either zh-Hans (simplified) or zh-Hant (traditional); OneSignal only supports these two Chinese variants\n        for (let traditionalSubtag of Environment.TRADITIONAL_CHINESE_LANGUAGE_TAG) {\n          if (languageSubtags.indexOf(traditionalSubtag) !== -1) {\n            return 'zh-Hant';\n          }\n        }\n        for (let simpleSubtag of Environment.SIMPLIFIED_CHINESE_LANGUAGE_TAG) {\n          if (languageSubtags.indexOf(simpleSubtag) !== -1) {\n            return 'zh-Hans';\n          }\n        }\n        return 'zh-Hant'; // Return Chinese traditional by default\n      } else {\n        // Return the language subtag (it can be three characters, so truncate it down to 2 just to be sure)\n        return languageSubtags[0].substring(0, 2);\n      }\n    } else {\n      return 'en';\n    }\n  }\n\n  static supportsServiceWorkers() {\n    return typeof navigator !== \"undefined\" &&\n           'serviceWorker' in navigator;\n  }\n}","import * as log from 'loglevel';\nimport Environment from './Environment';\nimport { getConsoleStyle, contains, capitalize } from './utils';\n\n\n\nconst SILENT_EVENTS = [\n  'notifyButtonHovering',\n  'notifyButtonHover',\n  'notifyButtonButtonClick',\n  'notifyButtonLauncherClick',\n  'animatedElementHiding',\n  'animatedElementHidden',\n  'animatedElementShowing',\n  'animatedElementShown',\n  'activeAnimatedElementActivating',\n  'activeAnimatedElementActive',\n  'activeAnimatedElementInactivating',\n  'activeAnimatedElementInactive',\n  'dbRetrieved',\n  'dbSet',\n  'testEvent'\n  ];\n\nconst RETRIGGER_REMOTE_EVENTS = [\n  'onesignal.prompt.custom.clicked',\n  'onesignal.prompt.native.permissionchanged',\n  'onesignal.subscription.changed',\n  'onesignal.internal.subscriptionset',\n  'dbRebuilt',\n  'initialize',\n  'subscriptionSet',\n  'sendWelcomeNotification',\n  'subscriptionChange',\n  'notificationPermissionChange',\n  'dbSet',\n  'register',\n  'notificationDisplay',\n  'notificationDismiss',\n  'notificationClick',\n  'permissionPromptDisplay',\n  'testWouldDisplay',\n  'testInitOptionDisabled',\n  'popupWindowTimeout'\n];\n\nconst LEGACY_EVENT_MAP = {\n  'notificationPermissionChange': 'onesignal.prompt.native.permissionchanged',\n  'subscriptionChange': 'onesignal.subscription.changed',\n  'customPromptClick': 'onesignal.prompt.custom.clicked',\n};\n\nexport default class Event {\n\n  /**\n   * Triggers the specified event with optional custom data.\n   * @param eventName The string event name to be emitted.\n   * @param data Any JavaScript variable to be passed with the event.\n   * @param remoteTriggerEnv If this method is being called in a different environment (e.g. was triggered in iFrame but now retriggered on main host), this is the string of the original environment for logging purposes.\n   */\n  static trigger(eventName, data?, remoteTriggerEnv=null) {\n    if (!contains(SILENT_EVENTS, eventName)) {\n      let displayData = data;\n      if (remoteTriggerEnv) {\n        var env = `${capitalize(Environment.getEnv())} ⬸ ${capitalize(remoteTriggerEnv)}`;\n      } else {\n        var env = capitalize(Environment.getEnv());\n      }\n\n      if (displayData || displayData === false) {\n        log.debug(`(${env}) » %c${eventName}:`, getConsoleStyle('event'), displayData);\n      } else {\n        log.debug(`(${env}) » %c${eventName}`, getConsoleStyle('event'));\n      }\n    }\n\n    // Actually fire the event that can be listened to via OneSignal.on()\n    if (Environment.isBrowser()) {\n      if (eventName === OneSignal.EVENTS.SDK_INITIALIZED) {\n        if (OneSignal.initialized)\n          return;\n        else\n          OneSignal.initialized = true;\n      }\n      (OneSignal as any).emit(eventName, data);\n    }\n    if (LEGACY_EVENT_MAP.hasOwnProperty(eventName)) {\n      let legacyEventName = LEGACY_EVENT_MAP[eventName];\n      Event._triggerLegacy(legacyEventName, data);\n    }\n\n    // If this event was triggered in an iFrame or Popup environment, also trigger it on the host page\n    if (Environment.isBrowser() &&\n        (Environment.isPopup() || Environment.isIframe())) {\n      var creator = opener || parent;\n      if (!creator) {\n        log.error(`Could not send event '${eventName}' back to host page because no creator (opener or parent) found!`);\n      } else {\n        // But only if the event matches certain events\n        if (contains(RETRIGGER_REMOTE_EVENTS, eventName)) {\n          if (Environment.isPopup()) {\n            OneSignal.popupPostmam.message(OneSignal.POSTMAM_COMMANDS.REMOTE_RETRIGGER_EVENT, {eventName: eventName, eventData: data});\n          } else {\n            OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.REMOTE_RETRIGGER_EVENT, {eventName: eventName, eventData: data});\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Fires the event to be listened to via window.addEventListener().\n   * @param eventName The string event name.\n   * @param data Any JavaScript variable to be passed with the event.\n   * @private\n   */\n  static _triggerLegacy(eventName, data) {\n    var event = new CustomEvent(eventName, {\n      bubbles: true, cancelable: true, detail: data\n    });\n    // Fire the event that listeners can listen to via 'window.addEventListener()'\n    window.dispatchEvent(event);\n  }\n}","import Environment from \"../Environment\";\r\nimport * as log from \"loglevel\";\r\nimport Event from \"../Event\";\r\nimport Database from \"../services/Database\";\r\nimport * as Browser from \"bowser\";\r\nimport {getConsoleStyle, contains, executeAndTimeoutPromiseAfter} from \"../utils\";\r\nimport MainHelper from \"./MainHelper\";\r\nimport ServiceWorkerHelper from \"./ServiceWorkerHelper\";\r\nimport EventHelper from \"./EventHelper\";\r\nimport PushPermissionNotGrantedError from \"../errors/PushPermissionNotGrantedError\";\r\nimport TestHelper from \"./TestHelper\";\r\n\r\n\r\nexport default class SubscriptionHelper {\r\n  static registerForW3CPush(options) {\r\n    log.debug(`Called %cregisterForW3CPush(${JSON.stringify(options)})`, getConsoleStyle('code'));\r\n    return Database.get('Ids', 'registrationId')\r\n                   .then(function _registerForW3CPush_GotRegistrationId(registrationIdResult) {\r\n                     if (!registrationIdResult || !options.fromRegisterFor || window.Notification.permission != \"granted\" || navigator.serviceWorker.controller == null) {\r\n                       navigator.serviceWorker.getRegistration().then(function (serviceWorkerRegistration) {\r\n                         var sw_path = \"\";\r\n\r\n                         if (OneSignal.config.path)\r\n                           sw_path = OneSignal.config.path;\r\n\r\n                         if (typeof serviceWorkerRegistration === \"undefined\") // Nothing registered, very first run\r\n                           ServiceWorkerHelper.registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\r\n                         else {\r\n                           if (serviceWorkerRegistration.active) {\r\n                             let previousWorkerUrl = serviceWorkerRegistration.active.scriptURL;\r\n                             if (contains(previousWorkerUrl, sw_path + OneSignal.SERVICE_WORKER_PATH)) {\r\n                               // OneSignalSDKWorker.js was installed\r\n                               Database.get('Ids', 'WORKER1_ONE_SIGNAL_SW_VERSION')\r\n                                       .then(function (version) {\r\n                                         if (version) {\r\n                                           if (version != OneSignal._VERSION) {\r\n                                             log.info(`Installing new service worker (${version} -> ${OneSignal._VERSION})`);\r\n                                             ServiceWorkerHelper.registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH);\r\n                                           }\r\n                                           else\r\n                                             ServiceWorkerHelper.registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\r\n                                         }\r\n                                         else\r\n                                           ServiceWorkerHelper.registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH);\r\n                                       });\r\n                             }\r\n                             else if (contains(previousWorkerUrl, sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH)) {\r\n                               // OneSignalSDKUpdaterWorker.js was installed\r\n                               Database.get('Ids', 'WORKER2_ONE_SIGNAL_SW_VERSION')\r\n                                       .then(function (version) {\r\n                                         if (version) {\r\n                                           if (version != OneSignal._VERSION) {\r\n                                             log.info(`Installing new service worker (${version} -> ${OneSignal._VERSION})`);\r\n                                             ServiceWorkerHelper.registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\r\n                                           }\r\n                                           else\r\n                                             ServiceWorkerHelper.registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH);\r\n                                         }\r\n                                         else\r\n                                           ServiceWorkerHelper.registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\r\n                                       });\r\n                             } else {\r\n                               // Some other service worker not belonging to us was installed\r\n                               // Install ours over it after unregistering theirs to get a different registration token and avoid mismatchsenderid error\r\n                               log.info('Unregistering previous service worker:', serviceWorkerRegistration);\r\n                               serviceWorkerRegistration.unregister().then(unregistrationSuccessful => {\r\n                                 log.info('Result of unregistering:', unregistrationSuccessful);\r\n                                 ServiceWorkerHelper.registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\r\n                               });\r\n                             }\r\n                           }\r\n                           else if (serviceWorkerRegistration.installing == null)\r\n                             ServiceWorkerHelper.registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\r\n                         }\r\n                       });\r\n                     }\r\n                   });\r\n  }\r\n\r\n  static enableNotifications(existingServiceWorkerRegistration) { // is ServiceWorkerRegistration type\r\n    log.debug(`Called %cenableNotifications()`, getConsoleStyle('code'));\r\n    if (!('PushManager' in window)) {\r\n      log.info(\"Push messaging is not supported. No PushManager.\");\r\n      MainHelper.beginTemporaryBrowserSession();\r\n      return;\r\n    }\r\n\r\n    if (window.Notification.permission === 'denied') {\r\n      log.warn(\"The user has blocked notifications.\");\r\n      return;\r\n    }\r\n\r\n    log.debug(`Calling %cnavigator.serviceWorker.ready() ...`, getConsoleStyle('code'));\r\n    navigator.serviceWorker.ready.then(function (serviceWorkerRegistration) {\r\n      log.debug('Finished calling %cnavigator.serviceWorker.ready', getConsoleStyle('code'));\r\n      MainHelper.establishServiceWorkerChannel(serviceWorkerRegistration);\r\n      SubscriptionHelper.subscribeForPush(serviceWorkerRegistration);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if web push subscription occurs on a subdomain of OneSignal.\r\n   * If true, our main IndexedDB is stored on the subdomain of onesignal.com, and not the user's site.\r\n   * @remarks\r\n   *   This method returns true if:\r\n   *     - The browser is not Safari\r\n   *         - Safari uses a different method of subscription and does not require our workaround\r\n   *     - The init parameters contain a subdomain (even if the protocol is HTTPS)\r\n   *         - HTTPS users using our subdomain workaround still have the main IndexedDB stored on our subdomain\r\n   *        - The protocol of the current webpage is http:\r\n   *   Exceptions are:\r\n   *     - Safe hostnames like localhost and 127.0.0.1\r\n   *          - Because we don't want users to get the wrong idea when testing on localhost that direct permission is supported on HTTP, we'll ignore these exceptions. HTTPS will always be required for direct permission\r\n   *        - We are already in popup or iFrame mode, or this is called from the service worker\r\n   */\r\n  static isUsingSubscriptionWorkaround() {\r\n    if (!OneSignal.config) {\r\n      throw new Error(`(${Environment.getEnv()}) isUsingSubscriptionWorkaround() cannot be called until OneSignal.config exists.`);\r\n    }\r\n    if (Browser.safari) {\r\n      return false;\r\n    }\r\n\r\n    if (SubscriptionHelper.isLocalhostAllowedAsSecureOrigin() &&\r\n      location.hostname === 'localhost' ||\r\n      (location.hostname as any) === '127.0.0.1') {\r\n      return false;\r\n    }\r\n\r\n    return (Environment.isHost() &&\r\n    (!!OneSignal.config.subdomainName || location.protocol === 'http:'));\r\n  }\r\n\r\n  /**\r\n   * Returns true if the current frame context is a child iFrame, and the parent is not HTTPS.\r\n   *\r\n   * This is used to check if isPushNotificationsEnabled() should grab the service worker registration. In an HTTPS iframe of an HTTP page,\r\n   * getting the service worker registration would throw an error.\r\n   */\r\n  static async hasInsecureParentOrigin() {\r\n    // If we are the top frame, or service workers aren't available, don't run this check\r\n    if (window === window.top ||\r\n      !('serviceWorker' in navigator) ||\r\n      typeof navigator.serviceWorker.getRegistration === \"undefined\") {\r\n      return false;\r\n    }\r\n    try {\r\n      await navigator.serviceWorker.getRegistration();\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static isLocalhostAllowedAsSecureOrigin() {\r\n    return OneSignal.config && OneSignal.config.allowLocalhostAsSecureOrigin === true;\r\n  }\r\n\r\n  static subscribeForPush(serviceWorkerRegistration) {\r\n    log.debug(`Called %c_subscribeForPush()`, getConsoleStyle('code'));\r\n    var notificationPermissionBeforeRequest = '';\r\n\r\n    OneSignal.getNotificationPermission().then((permission) => {\r\n      notificationPermissionBeforeRequest = permission as any;\r\n    })\r\n             .then(() => {\r\n               log.debug(`Calling %cServiceWorkerRegistration.pushManager.subscribe()`, getConsoleStyle('code'));\r\n               Event.trigger(OneSignal.EVENTS.PERMISSION_PROMPT_DISPLAYED);\r\n               /*\r\n                7/29/16: If the user dismisses the prompt, the prompt cannot be shown again via pushManager.subscribe()\r\n                See: https://bugs.chromium.org/p/chromium/issues/detail?id=621461\r\n                Our solution is to call Notification.requestPermission(), and then call\r\n                pushManager.subscribe(). Because notification and push permissions are shared, the subesequent call to\r\n                pushManager.subscribe() will go through successfully.\r\n                */\r\n               return MainHelper.requestNotificationPermissionPromise();\r\n             })\r\n             .then(permission => {\r\n               if (permission !== \"granted\") {\r\n                 throw new PushPermissionNotGrantedError();\r\n               } else {\r\n                 return executeAndTimeoutPromiseAfter(\r\n                   serviceWorkerRegistration.pushManager.subscribe({userVisibleOnly: true}),\r\n                   15000,\r\n                   \"A possible Chrome bug (https://bugs.chromium.org/p/chromium/issues/detail?id=623062) is preventing this subscription from completing.\"\r\n                 );\r\n               }\r\n             })\r\n             .then(function (subscription: any) {\r\n               /*\r\n                7/29/16: New bug, even if the user dismisses the prompt, they'll be given a subscription\r\n                See: https://bugs.chromium.org/p/chromium/issues/detail?id=621461\r\n                Our solution is simply to check the permission before actually subscribing the user.\r\n                */\r\n               log.debug(`Finished calling %cServiceWorkerRegistration.pushManager.subscribe()`,\r\n                         getConsoleStyle('code'));\r\n               log.debug('Subscription details:', subscription);\r\n               // The user allowed the notification permission prompt, or it was already allowed; set sessionInit flag to false\r\n               OneSignal._sessionInitAlreadyRunning = false;\r\n               sessionStorage.setItem(\"ONE_SIGNAL_NOTIFICATION_PERMISSION\", window.Notification.permission);\r\n\r\n               MainHelper.getAppId()\r\n                         .then(appId => {\r\n                           log.debug(\"Finished subscribing for push via pushManager.subscribe().\");\r\n\r\n                           var subscriptionInfo: any = {};\r\n                           if (subscription) {\r\n                             if (typeof (subscription).subscriptionId != \"undefined\") {\r\n                               // Chrome 43 & 42\r\n                               subscriptionInfo.endpointOrToken = subscription.subscriptionId;\r\n                             }\r\n                             else {\r\n                               // Chrome 44+ and FireFox\r\n                               // 4/13/16: We now store the full endpoint instead of just the registration token\r\n                               subscriptionInfo.endpointOrToken = subscription.endpoint;\r\n                             }\r\n\r\n                             // 4/13/16: Retrieve p256dh and auth for new encrypted web push protocol in Chrome 50\r\n                             if (subscription.getKey) {\r\n                               // p256dh and auth are both ArrayBuffer\r\n                               let p256dh = null;\r\n                               try {\r\n                                 p256dh = subscription.getKey('p256dh');\r\n                               } catch (e) {\r\n                                 // User is most likely running < Chrome < 50\r\n                               }\r\n                               let auth = null;\r\n                               try {\r\n                                 auth = subscription.getKey('auth');\r\n                               } catch (e) {\r\n                                 // User is most likely running < Firefox 45\r\n                               }\r\n\r\n                               if (p256dh) {\r\n                                 // Base64 encode the ArrayBuffer (not URL-Safe, using standard Base64)\r\n                                 let p256dh_base64encoded = btoa(\r\n                                   String.fromCharCode.apply(null, new Uint8Array(p256dh)));\r\n                                 subscriptionInfo.p256dh = p256dh_base64encoded;\r\n                               }\r\n                               if (auth) {\r\n                                 // Base64 encode the ArrayBuffer (not URL-Safe, using standard Base64)\r\n                                 let auth_base64encoded = btoa(\r\n                                   String.fromCharCode.apply(null, new Uint8Array(auth)));\r\n                                 subscriptionInfo.auth = auth_base64encoded;\r\n                               }\r\n                             }\r\n                           }\r\n                           else\r\n                             log.warn('Could not subscribe your browser for push notifications.');\r\n\r\n                           if (OneSignal._thisIsThePopup) {\r\n                             // 12/16/2015 -- At this point, the user has just clicked Allow on the HTTP popup!!\r\n                             // 11/22/2016 - HTTP popup should move non-essential subscription parts to the iframe\r\n                             OneSignal.popupPostmam.message(OneSignal.POSTMAM_COMMANDS.FINISH_REMOTE_REGISTRATION, {\r\n                               subscriptionInfo: subscriptionInfo\r\n                             }, message => {\r\n                               if (message.data.progress === true) {\r\n                                 log.debug('Got message from host page that remote reg. is in progress, closing popup.');\r\n                                 var creator = opener || parent;\r\n                                 if (opener) {\r\n                                   /* Note: This is hard to find, but this is actually the code that closes the HTTP popup window */\r\n                                   window.close();\r\n                                 }\r\n                               } else {\r\n                                 log.debug('Got message from host page that remote reg. could not be finished.');\r\n                               }\r\n                             });\r\n                           } else {\r\n                             // If we are not doing HTTP subscription, continue finish subscribing by registering with OneSignal\r\n                             MainHelper.registerWithOneSignal(appId, subscriptionInfo);\r\n                           }\r\n                         });\r\n             })\r\n             .catch(function (e) {\r\n               OneSignal._sessionInitAlreadyRunning = false;\r\n               if (e.message === 'Registration failed - no sender id provided' || e.message === 'Registration failed - manifest empty or missing') {\r\n                 let manifestDom = document.querySelector('link[rel=manifest]');\r\n                 if (manifestDom) {\r\n                   let manifestParentTagname = (document as any).querySelector('link[rel=manifest]').parentNode.tagName.toLowerCase();\r\n                   let manifestHtml = (document as any).querySelector('link[rel=manifest]').outerHTML;\r\n                   let manifestLocation = (document as any).querySelector('link[rel=manifest]').href;\r\n                   if (manifestParentTagname !== 'head') {\r\n                     log.warn(`OneSignal: Your manifest %c${manifestHtml}`,\r\n                              getConsoleStyle('code'),\r\n                              'must be referenced in the <head> tag to be detected properly. It is currently referenced ' +\r\n                              'in <${manifestParentTagname}>. Please see step 3.1 at ' +\r\n                              'https://documentation.onesignal.com/docs/web-push-sdk-setup-https.');\r\n                   } else {\r\n                     let manifestLocationOrigin = new URL(manifestLocation).origin;\r\n                     let currentOrigin = location.origin;\r\n                     if (currentOrigin !== manifestLocationOrigin) {\r\n                       log.warn(`OneSignal: Your manifest is being served from ${manifestLocationOrigin}, which is ` +\r\n                                `different from the current page's origin of ${currentOrigin}. Please serve your ` +\r\n                                `manifest from the same origin as your page's. If you are using a content delivery ` +\r\n                                `network (CDN), please add an exception so that the manifest is not served by your CDN. ` +\r\n                                `WordPress users, please see ` +\r\n                                `https://documentation.onesignal.com/docs/troubleshooting-web-push#section-wordpress-cdn-support.`);\r\n                     } else {\r\n                       log.warn(`OneSignal: Please check your manifest at ${manifestLocation}. The %cgcm_sender_id`,\r\n                                getConsoleStyle('code'),\r\n                                \"field is missing or invalid, and a valid value is required. Please see step 2 at \" +\r\n                                \"https://documentation.onesignal.com/docs/web-push-sdk-setup-https.\");\r\n                     }\r\n                   }\r\n                 } else if (location.protocol === 'https:') {\r\n                   log.warn(`OneSignal: You must reference a %cmanifest.json`,\r\n                            getConsoleStyle('code'),\r\n                            \"in the <head> of your page. Please see step 2 at \" +\r\n                            \"https://documentation.onesignal.com/docs/web-push-sdk-setup-https.\");\r\n                 }\r\n               } else if (e instanceof PushPermissionNotGrantedError)  {\r\n               } else {\r\n                 log.error('Error while subscribing for push:', e);\r\n               }\r\n\r\n               // In Chrome, closing a tab while the prompt is displayed is the same as dismissing the prompt by clicking X\r\n               // Our SDK receives the same event as if the user clicked X, when in fact the user just closed the tab. If\r\n               // we had some code that prevented showing the prompt for 8 hours, the user would accidentally not be able\r\n               // to subscribe.\r\n\r\n               // New addition (12/22/2015), adding support for detecting the cancel 'X'\r\n               // Chrome doesn't show when the user clicked 'X' for cancel\r\n               // We get the same error as if the user had clicked denied, but we can check Notification.permission to see if it is still 'default'\r\n               OneSignal.getNotificationPermission().then((permission) => {\r\n                 if (permission as any === 'default') {\r\n                   // The user clicked 'X'\r\n                   EventHelper.triggerNotificationPermissionChanged(true);\r\n                   TestHelper.markHttpsNativePromptDismissed();\r\n                 }\r\n\r\n                 if (!OneSignal._usingNativePermissionHook)\r\n                   EventHelper.triggerNotificationPermissionChanged();\r\n\r\n                 if (opener && OneSignal._thisIsThePopup)\r\n                   window.close();\r\n               });\r\n\r\n               // If there was an error subscribing like the timeout bug, close the popup anyways\r\n               if (opener && OneSignal._thisIsThePopup)\r\n                 window.close();\r\n             });\r\n  }\r\n}","import IndexedDb from \"./IndexedDb\";\nimport Environment from \"../Environment\";\nimport {AppState} from \"../models/AppState\";\nimport {Subscription} from \"../models/Subscription\";\nimport {AppConfig} from \"../models/AppConfig\";\nimport {Uuid} from \"../models/Uuid\";\nimport {ServiceWorkerConfig} from \"../models/ServiceWorkerConfig\";\nimport {ServiceWorkerState} from \"../models/ServiceWorkerState\";\nimport {Notification} from \"../models/Notification\";\nimport SubscriptionHelper from \"../helpers/SubscriptionHelper\";\nimport {Timestamp} from \"../models/Timestamp\";\nimport Emitter from \"../libraries/Emitter\";\n\nenum DatabaseEventName {\n  SET\n}\n\nexport default class Database {\n\n  public emitter: Emitter;\n  private database: IndexedDb;\n\n  /* Temp Database Proxy */\n  public static databaseInstanceName: string;\n  public static databaseInstance: Database;\n  /* End Temp Database Proxy */\n\n  public static EVENTS = DatabaseEventName;\n\n  constructor(private databaseName: string) {\n    this.emitter = new Emitter();\n    this.database = new IndexedDb(this.databaseName);\n  }\n\n  static applyDbResultFilter(table: string, key: string, result) {\n    switch (table) {\n      case 'Options':\n        if (result && key) {\n          return result.value;\n        } else if (result && !key) {\n          return result;\n        } else {\n          return null;\n        }\n        break;\n      case 'Ids':\n        if (result && key) {\n          return result.id;\n        } else if (result && !key) {\n          return result;\n        } else {\n          return null;\n        }\n        break;\n      case 'NotificationOpened':\n        if (result && key) {\n          return {data: result.data, timestamp: result.timestamp};\n        } else if (result && !key) {\n          return result;\n        } else {\n          return null;\n        }\n        break;\n      default:\n        if (result) {\n          return result;\n        } else {\n          return null;\n        }\n        break;\n    }\n  }\n\n  /**\n   * Asynchronously retrieves the value of the key at the table (if key is specified), or the entire table (if key is not specified).\n   * If on an iFrame or popup environment, retrieves from the correct IndexedDB database using cross-domain messaging.\n   * @param table The table to retrieve the value from.\n   * @param key The key in the table to retrieve the value of. Leave blank to get the entire table.\n   * @returns {Promise} Returns a promise that fulfills when the value(s) are available.\n   */\n  async get<T>(table: string, key?: string): Promise<T> {\n    return await new Promise<T>(async (resolve) => {\n      if (!Environment.isServiceWorker() &&\n          SubscriptionHelper.isUsingSubscriptionWorkaround() &&\n          !Environment.isTest()) {\n        OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.REMOTE_DATABASE_GET, [{\n          table: table,\n          key: key\n        }], reply => {\n          let result = reply.data[0];\n          resolve(result);\n        });\n      } else {\n        const result = await this.database.get(table, key);\n        let cleanResult = Database.applyDbResultFilter(table, key, result);\n        resolve(cleanResult);\n      }\n    });\n  }\n\n  /**\n   * Asynchronously puts the specified value in the specified table.\n   * @param table\n   * @param keypath\n   */\n  async put(table: string, keypath: any) {\n    await new Promise(async (resolve, reject) => {\n      if (!Environment.isServiceWorker() &&\n        SubscriptionHelper.isUsingSubscriptionWorkaround() &&\n        !Environment.isTest()) {\n        OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.REMOTE_DATABASE_PUT, [{table: table, keypath: keypath}], reply => {\n          if (reply.data === OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE) {\n            resolve();\n          } else {\n            reject(`(Database) Attempted remote IndexedDB put(${table}, ${keypath}), but did not get success response.`);\n          }\n        });\n      } else {\n        await this.database.put(table, keypath);\n        resolve();\n      }\n    });\n    this.emitter.emit(Database.EVENTS.SET, keypath);\n  }\n\n  /**\n   * Asynchronously removes the specified key from the table, or if the key is not specified, removes all keys in the table.\n   * @returns {Promise} Returns a promise containing a key that is fulfilled when deletion is completed.\n   */\n  async remove(table: string, keypath?: string) {\n    return new Promise(async (resolve, reject) => {\n      if (!Environment.isServiceWorker() &&\n        SubscriptionHelper.isUsingSubscriptionWorkaround() &&\n        !Environment.isTest()) {\n        OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.REMOTE_DATABASE_REMOVE, [{table: table, keypath: keypath}], reply => {\n          if (reply.data === OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE) {\n            resolve();\n          } else {\n            reject(`(Database) Attempted remote IndexedDB remove(${table}, ${keypath}), but did not get success response.`);\n          }\n        });\n      } else {\n        return await this.database.remove(table, keypath);\n      }\n    });\n  }\n\n  async getAppConfig(): Promise<AppConfig> {\n    const config = new AppConfig();\n    config.appId = await this.get<Uuid>('Ids', 'appId');\n    config.subdomain = await this.get<string>('Options', 'subdomain');\n    config.autoRegister = await this.get<boolean>('Options', 'autoRegister');\n    config.serviceWorkerConfig = await this.get<ServiceWorkerConfig>('Options', 'serviceWorkerConfig');\n    return config;\n  }\n\n  async setAppConfig(appConfig: AppConfig) {\n    if (appConfig.appId)\n      await this.put('Ids', {type: 'appId', id: appConfig.appId})\n    if (appConfig.subdomain)\n      await this.put('Options', {key: 'subdomain', value: appConfig.subdomain})\n    if (appConfig.autoRegister)\n      await this.put('Options', {key: 'autoRegister', value: appConfig.autoRegister})\n    if (appConfig.serviceWorkerConfig)\n      await this.put('Options', {key: 'serviceWorkerConfig', value: appConfig.serviceWorkerConfig})\n  }\n\n  async getAppState(): Promise<AppState> {\n    const state = new AppState();\n    state.defaultNotificationUrl = await this.get<string>('Options', 'defaultUrl');\n    state.defaultNotificationTitle = await this.get<string>('Options', 'defaultTitle');\n    state.lastKnownPushEnabled = await this.get<boolean>('Options', 'isPushEnabled');\n    state.clickedNotifications = await this.get<Map<URL, [Notification, Timestamp]>>('NotificationOpened');\n    return state;\n  }\n\n  async setAppState(appState: AppState) {\n    if (appState.defaultNotificationUrl)\n      await this.put(\"Options\", {key: \"defaultUrl\", value: appState.defaultNotificationUrl});\n    if (appState.defaultNotificationTitle || appState.defaultNotificationTitle === '')\n      await this.put(\"Options\", {key: \"defaultTitle\", value: appState.defaultNotificationTitle});\n    if (appState.lastKnownPushEnabled != null)\n      await this.put('Options', {key: 'isPushEnabled', value: appState.lastKnownPushEnabled});\n    if (appState.clickedNotifications) {\n      const clickedNotificationUrls = Object.keys(appState.clickedNotifications);\n      for (let url of clickedNotificationUrls) {\n        const notificationDetails = appState.clickedNotifications[url];\n        if (notificationDetails) {\n          await this.put('NotificationOpened', {\n            url: url,\n            data: (notificationDetails as any).data,\n            timestamp: (notificationDetails as any).timestamp\n          });\n        } else if (notificationDetails === null) {\n          // If we get an object like:\n          // { \"http://site.com/page\": null}\n          // It means we need to remove that entry\n          await this.remove('NotificationOpened', url);\n        }\n      }\n    }\n  }\n\n  async getServiceWorkerConfig(): Promise<ServiceWorkerConfig> {\n    const config = new ServiceWorkerConfig();\n    config.scope = await this.get<string>('Options', 'workerScope');\n    config.workerName = await this.get<string>('Options', 'workerName');\n    config.updaterWorkerName = await this.get<string>('Options', 'updaterWorkerName');\n    config.workerFilePath = await this.get<string>('Options', 'workerFilePath');\n    return config;\n  }\n\n  async setServiceWorkerConfig(config: ServiceWorkerConfig) {\n    if (config.scope)\n      await this.put('Options', {key: 'workerScope', value: config.scope});\n    if (config.workerName)\n      await this.put('Options', {key: 'workerName', value: config.workerName});\n    if (config.updaterWorkerName)\n      await this.put('Options', {key: 'updaterWorkerName', value: config.updaterWorkerName});\n    if (config.workerFilePath)\n      await this.put('Options', {key: 'workerFilePath', value: config.workerFilePath});\n  }\n\n  async getServiceWorkerState(): Promise<ServiceWorkerState> {\n    const state = new ServiceWorkerState();\n    state.workerVersion = await this.get<number>('Ids', 'WORKER1_ONE_SIGNAL_SW_VERSION');\n    state.updaterWorkerVersion = await this.get<number>('Ids', 'WORKER2_ONE_SIGNAL_SW_VERSION');\n    state.backupNotification = await this.get<Notification>('Ids', 'backupNotification');\n    return state;\n  }\n\n   async setServiceWorkerState(state: ServiceWorkerState) {\n    if (state.workerVersion)\n      await this.put('Ids', {type: 'WORKER1_ONE_SIGNAL_SW_VERSION', id: state.workerVersion});\n    if (state.updaterWorkerVersion)\n      await this.put('Ids', {type: 'WORKER2_ONE_SIGNAL_SW_VERSION', id: state.updaterWorkerVersion});\n    if (state.backupNotification)\n      await this.put('Ids', {type: 'backupNotification', id: state.backupNotification});\n  }\n\n  async getSubscription(): Promise<Subscription> {\n    const subscription = new Subscription();\n    subscription.deviceId = await this.get<Uuid>('Ids', 'userId');\n    subscription.pushEndpoint = await this.get<URL>('Options', 'subscriptionEndpoint');\n    subscription.pushToken = await this.get<string>('Ids', 'registrationId');\n\n    // The preferred database key to store our subscription\n    const dbOptedOut = await this.get<boolean>('Options', 'optedOut');\n    // For backwards compatibility, we need to read from this if the above is not found\n    const dbNotOptedOut = await this.get<boolean>('Options', 'subscription');\n\n    if (dbOptedOut != null) {\n      subscription.optedOut = dbOptedOut;\n    } else {\n      if (dbNotOptedOut == null) {\n        subscription.optedOut = false;\n      } else {\n        subscription.optedOut = !dbNotOptedOut;\n      }\n    }\n\n    return subscription;\n  }\n\n  async setSubscription(subscription: Subscription) {\n    if (subscription.deviceId)\n      await this.put('Ids', {type: 'userId', id: subscription.deviceId});\n    if (subscription.pushEndpoint)\n      await this.put('Options', {key: 'subscriptionEndpoint', value: subscription.pushEndpoint});\n    if (subscription.pushToken)\n      await this.put('Ids', {type: 'registrationId', id: subscription.pushToken});\n    if (subscription.optedOut != null) // Checks if null or undefined, allows false\n      await this.put('Options', {key: 'optedOut', value: subscription.optedOut});\n  }\n\n  /**\n   * Asynchronously removes the Ids, NotificationOpened, and Options tables from the database and recreates them with blank values.\n   * @returns {Promise} Returns a promise that is fulfilled when rebuilding is completed, or rejects with an error.\n   */\n  async rebuild() {\n    return Promise.all([\n      this.remove('Ids'),\n      this.remove('NotificationOpened'),\n      this.remove('Options'),\n    ]);\n  }\n\n  async printIds() {\n    return Promise.all([\n      this.get('Ids', 'appId'),\n      this.get('Ids', 'registrationId'),\n      this.get('Ids', 'userId')\n    ]).then(function([appId, registrationId, userId]) {\n      if (console.table) {\n       console.table({'OneSignal Database IDs': {\n         'App ID': appId,\n         'Registration ID': registrationId,\n         'User ID': userId\n       }});\n      } else {\n        log.info('App ID:', appId);\n        log.info('Registration ID:', registrationId);\n        log.info('User ID:', userId);\n      }\n    });\n  }\n\n  /* Temp Database Proxy */\n  static ensureSingletonInstance() {\n    if (!Database.databaseInstanceName) {\n      Database.databaseInstanceName = \"ONE_SIGNAL_SDK_DB\";\n    }\n    if (!Database.databaseInstance) {\n      Database.databaseInstance = new Database(Database.databaseInstanceName);\n    }\n  }\n  /* End Temp Database Proxy */\n\n  static async on(...args: any[]) {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.emitter.on.apply(Database.databaseInstance.emitter, args);\n  }\n  static async setSubscription(...args: any[]) {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.setSubscription.apply(Database.databaseInstance, args);\n  }\n  static async getSubscription(...args: any[]): Promise<Subscription> {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.getSubscription.apply(Database.databaseInstance, args);\n  }\n  static async setServiceWorkerState(...args: any[]) {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.setServiceWorkerState.apply(Database.databaseInstance, args);\n  }\n  static async getServiceWorkerState(...args: any[]): Promise<ServiceWorkerState> {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.getServiceWorkerState.apply(Database.databaseInstance, args);\n  }\n  static async setServiceWorkerConfig(...args: any[]) {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.setServiceWorkerConfig.apply(Database.databaseInstance, args);\n  }\n  static async getServiceWorkerConfig(...args: any[]): Promise<ServiceWorkerConfig> {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.getServiceWorkerConfig.apply(Database.databaseInstance, args);\n  }\n  static async setAppState(...args: any[]) {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.setAppState.apply(Database.databaseInstance, args);\n  }\n  static async getAppState(...args: any[]): Promise<AppState> {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.getAppState.apply(Database.databaseInstance, args);\n  }\n  static async setAppConfig(...args: any[]) {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.setAppConfig.apply(Database.databaseInstance, args);\n  }\n  static async getAppConfig(...args: any[]): Promise<AppConfig> {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.getAppConfig.apply(Database.databaseInstance, args);\n  }\n  static async remove(...args: any[]) {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.remove.apply(Database.databaseInstance, args);\n  }\n  static async put(...args: any[]) {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.put.apply(Database.databaseInstance, args);\n  }\n  static async get<T>(...args: any[]): Promise<T> {\n    Database.ensureSingletonInstance();\n    return Database.databaseInstance.get.apply(Database.databaseInstance, args);\n  }\n}","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 7\n// module chunks = 0","import Environment from \"./Environment\";\n\n\nexport const DEV_HOST = 'https://oregon:3001';\nexport const DEV_FRAME_HOST = 'https://washington.localhost:3001';\nexport const DEV_PREFIX = 'Dev-';\nexport const PROD_HOST = 'https://onesignal.com';\nexport const STAGING_HOST = 'https://onesignal-staging.pw';\nexport const STAGING_FRAME_HOST = 'https://washington.onesignal-staging.pw';\nexport const STAGING_PREFIX = 'Staging-';\n\nvar HOST_URL;\nvar API_URL;\nif (Environment.isDev()) {\n    HOST_URL = DEV_HOST;\n    API_URL = DEV_HOST + '/api/v1/';\n} else if (Environment.isStaging()) {\n    HOST_URL = STAGING_HOST;\n    API_URL = STAGING_HOST + '/api/v1/';\n} else {\n    HOST_URL = PROD_HOST;\n    API_URL = PROD_HOST + '/api/v1/';\n}\n\nexport { HOST_URL, API_URL };","/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n\n!function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(name, definition)\n  else this[name] = definition()\n}('bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\n      , chromeos = /CrOS/.test(ua)\n      , silk = /silk/i.test(ua)\n      , sailfish = /sailfish/i.test(ua)\n      , tizen = /tizen/i.test(ua)\n      , webos = /(web|hpw)os/i.test(ua)\n      , windowsphone = /windows phone/i.test(ua)\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\n      , windows = !windowsphone && /windows/i.test(ua)\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\n      , edgeVersion = getFirstMatch(/edge\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , xbox = /xbox/i.test(ua)\n      , result\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/opr|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera'\n        , opera: t\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android'\n        , samsungBrowser: t\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast'\n        , coast: t\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/ucbrowser/i.test(ua)) {\n      result = {\n          name: 'UC Browser'\n        , ucbrowser: t\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon'\n        , maxthon: t\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany'\n        , epiphany: t\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin'\n        , puffin: t\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      }\n    }\n    else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir'\n        , sleipnir: t\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon'\n        , kMeleon: t\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (windowsphone) {\n      result = {\n        name: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome'\n      , chromeos: t\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/chrome.+? edge/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi'\n        , vivaldi: t\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (sailfish) {\n      result = {\n        name: 'Sailfish'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n      }\n    }\n    else if (silk) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS'\n        , slimer: t\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (webos) {\n      result = {\n        name: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (tizen) {\n      result = {\n        name: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla'\n        , qupzilla: t\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      }\n    }\n    else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium'\n        , chromium: t\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n        , chrome: t\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n        , version: versionIdentifier\n      }\n    }\n    else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      }\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if(/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot'\n      , googlebot: t\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\"\n        result.blink = t\n      } else {\n        result.name = result.name || \"Webkit\"\n        result.webkit = t\n      }\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.msedge && (android || result.silk)) {\n      result.android = t\n    } else if (iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n    } else if (mac) {\n      result.mac = t\n    } else if (xbox) {\n      result.xbox = t\n    } else if (windows) {\n      result.windows = t\n    } else if (linux) {\n      result.linux = t\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = osVersion.split('.')[0];\n    if (\n         tablet\n      || nexusTablet\n      || iosdevice == 'ipad'\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\n      || result.silk\n    ) {\n      result.tablet = t\n    } else if (\n         mobile\n      || iosdevice == 'iphone'\n      || iosdevice == 'ipod'\n      || android\n      || nexusMobile\n      || result.blackberry\n      || result.webos\n      || result.bada\n    ) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n\t\t    (result.vivaldi && result.version >= 1.0) ||\n        (result.chrome && result.version >= 20) ||\n        (result.samsungBrowser && result.version >= 4) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        || (result.chromium && result.version >= 20)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        || (result.chromium && result.version < 20)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  function map(arr, iterator) {\n    var result = [], i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      version = version + new Array(delta + 1).join(\".0\");\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    });\n\n    // iterate in reverse order by reversed chunks array\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n      else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      }\n      else {\n        return -1;\n      }\n    }\n  }\n\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser;\n\n    // make strictMode param optional with ua param usage\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void(0);\n    }\n\n    if (strictMode === void(0)) {\n      strictMode = false;\n    }\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          // browser version and min supported version.\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  return bowser\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bowser/src/bowser.js\n// module id = 9\n// module chunks = 0","import {DEV_PREFIX, STAGING_PREFIX} from \"../vars\";\r\nimport Environment from \"../Environment\";\r\nimport OneSignalApi from \"../OneSignalApi\";\r\nimport * as log from \"loglevel\";\r\nimport Event from \"../Event\";\r\nimport Database from \"../services/Database\";\r\nimport * as Browser from \"bowser\";\r\nimport {\r\n  getConsoleStyle,\r\n  contains,\r\n  normalizeSubdomain,\r\n  getDeviceTypeForBrowser,\r\n  capitalize,\r\n  awaitOneSignalInitAndSupported\r\n} from \"../utils\";\r\nimport * as objectAssign from \"object-assign\";\r\nimport * as swivel from \"swivel\";\r\nimport * as Cookie from \"js-cookie\";\r\nimport HttpModal from \"../http-modal/HttpModal\";\r\nimport Bell from \"../bell/Bell\";\r\nimport SubscriptionHelper from \"./SubscriptionHelper\";\r\nimport EventHelper from \"./EventHelper\";\r\nimport InitHelper from \"./InitHelper\";\r\nimport { InvalidStateReason, InvalidStateError } from \"../errors/InvalidStateError\";\r\nimport { ResourceLoadState } from \"../services/DynamicResourceLoader\";\r\n\r\n\r\nexport default class MainHelper {\r\n\r\n  /**\r\n   * If there are multiple manifests, and one of them is our OneSignal manifest, we move it to the top of <head> to ensure our manifest is used for push subscription (manifests after the first are ignored as part of the spec).\r\n   */\r\n  static fixWordpressManifestIfMisplaced() {\r\n    var manifests = document.querySelectorAll('link[rel=manifest]');\r\n    if (!manifests || manifests.length <= 1) {\r\n      // Multiple manifests do not exist on this webpage; there is no issue\r\n      return;\r\n    }\r\n    for (let i = 0; i < manifests.length; i++) {\r\n      let manifest = manifests[i];\r\n      let url = (manifest as any).href;\r\n      if (contains(url, 'gcm_sender_id')) {\r\n        // Move the <manifest> to the first thing in <head>\r\n        document.querySelector('head').insertBefore(manifest, document.querySelector('head').children[0]);\r\n        log.info('OneSignal: Moved the WordPress push <manifest> to the first element in <head>.');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If the user has manually opted out of notifications (OneSignal.setSubscription), returns -2; otherwise returns 1.\r\n   * @param isOptedIn The result of OneSignal.getSubscription().\r\n   */\r\n  static getNotificationTypeFromOptIn(isOptedIn) {\r\n    if (isOptedIn == true || isOptedIn == null) {\r\n      return 1;\r\n    } else {\r\n      return -2;\r\n    }\r\n  }\r\n\r\n  /*\r\n   Returns the current browser-agnostic notification permission as \"default\", \"granted\", \"denied\".\r\n   safariWebId: Used only to get the current notification permission state in Safari (required as part of the spec).\r\n   */\r\n  static getNotificationPermission(safariWebId) {\r\n    return awaitOneSignalInitAndSupported()\r\n      .then(() => {\r\n        return new Promise((resolve, reject) => {\r\n          if (SubscriptionHelper.isUsingSubscriptionWorkaround()) {\r\n            // User is using our subscription workaround\r\n            OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.REMOTE_NOTIFICATION_PERMISSION, {safariWebId: safariWebId}, reply => {\r\n              let remoteNotificationPermission = reply.data;\r\n              resolve(remoteNotificationPermission);\r\n            });\r\n          } else {\r\n            if (Browser.safari) {\r\n              // The user is on Safari\r\n              // A web ID is required to determine the current notificiation permission\r\n              if (safariWebId) {\r\n                resolve(window.safari.pushNotification.permission(safariWebId).permission);\r\n              }\r\n              else {\r\n                // The user didn't set up Safari web push properly; notifications are unlikely to be enabled\r\n                log.debug(`OneSignal: Invalid init option safari_web_id %c${safariWebId}`, getConsoleStyle('code'), '. Please pass in a valid safari_web_id to OneSignal init.');\r\n              }\r\n            }\r\n            else {\r\n              // Identical API on Firefox and Chrome\r\n              resolve(window.Notification.permission);\r\n            }\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Assigns a variable into sessionStorage to represent the beginning of a OneSignal session. A session is\r\n   * initiated by opening a new tab or window to a OneSignal active page. While the same session lasts, refreshes to\r\n   * the same page won't re-subscribe the user to OneSignal or update the last_active or session_count property.\r\n   *\r\n   * This method ensures that the sessionStorage is appropriately set for HTTP sites by communicating with the host\r\n   * page.\r\n   *\r\n   * The only time we do start a browsing session on HTTP is after we register, so we get the popupPostman and post\r\n   * a message back to the host to also start a browsing session.\r\n   */\r\n  static beginTemporaryBrowserSession() {\r\n    log.debug('OneSignal: Marking browser session as continuing.');\r\n    sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", \"true\");\r\n    if (Environment.isPopup()) {\r\n      // If we're setting sessionStorage and we're in an Popup, we need to also set sessionStorage on the\r\n      // main page\r\n      if (!OneSignal.popupPostmam) {\r\n        return;\r\n      }\r\n      OneSignal.popupPostmam.message(OneSignal.POSTMAM_COMMANDS.BEGIN_BROWSING_SESSION);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if the experimental HTTP permission request is being used to prompt the user.\r\n   */\r\n  static isUsingHttpPermissionRequest() {\r\n    return OneSignal.config.httpPermissionRequest &&\r\n      OneSignal.config.httpPermissionRequest.enable == true &&\r\n      (Environment.isIframe() ||\r\n      Environment.isHost() && SubscriptionHelper.isUsingSubscriptionWorkaround());\r\n  }\r\n\r\n  /**\r\n   * Returns true if the site using the HTTP permission request is supplying its own modal prompt to the user.\r\n   */\r\n  static isUsingCustomHttpPermissionRequestPostModal() {\r\n    return (OneSignal.config.httpPermissionRequest &&\r\n    OneSignal.config.httpPermissionRequest.useCustomModal == true);\r\n  }\r\n\r\n  /**\r\n   * Returns true if a session cookie exists for noting the user dismissed the native prompt.\r\n   */\r\n  static wasHttpsNativePromptDismissed() {\r\n    return Cookie.get('onesignal-notification-prompt') === 'dismissed';\r\n  }\r\n\r\n  /**\r\n   * Stores a flag in sessionStorage that we've already shown the HTTP popover to this user and that we should not\r\n   * show it again until they open a new window or tab to the site.\r\n   */\r\n  static markHttpPopoverShown() {\r\n    sessionStorage.setItem(\"ONESIGNAL_HTTP_PROMPT_SHOWN\", \"true\");\r\n  }\r\n\r\n  /**\r\n   * Returns true if the HTTP popover was already shown inside the same session.\r\n   */\r\n  static isHttpPromptAlreadyShown() {\r\n    return sessionStorage.getItem(\"ONESIGNAL_HTTP_PROMPT_SHOWN\") == \"true\";\r\n  }\r\n\r\n  /**\r\n   * Returns true if this current window session is continuing and not a newly opened tab or window.\r\n   */\r\n  static isContinuingBrowserSession() {\r\n    /*\r\n     We don't need to communicate with any iFrames for HTTP sites because the same sessionStorage is set on all\r\n     frames of the window.\r\n     */\r\n    return sessionStorage.getItem(\"ONE_SIGNAL_SESSION\") == \"true\";\r\n  }\r\n\r\n  /**\r\n   * Creates a new or updates an existing OneSignal user (player) on the server.\r\n   *\r\n   * @param appId The app ID passed to init.\r\n   *        subscriptionInfo A hash containing 'endpointOrToken', 'auth', and 'p256dh'.\r\n   *\r\n   * @remarks Called from both the host page and HTTP popup.\r\n   *          If a user already exists and is subscribed, updates the session count by calling /players/:id/on_session; otherwise, a new player is registered via the /players endpoint.\r\n   *          Saves the user ID and registration ID to the local web database after the response from OneSignal.\r\n   */\r\n  static registerWithOneSignal(appId, subscriptionInfo) {\r\n    let deviceType = getDeviceTypeForBrowser();\r\n    return Promise.all([\r\n      OneSignal.getUserId(),\r\n      OneSignal.getSubscription()\r\n    ])\r\n                  .then(([userId, subscription]) => {\r\n                    let requestUrl = userId ?\r\n                      `players/${userId}/on_session` :\r\n                      `players`;\r\n\r\n                    let requestData = {\r\n                      app_id: appId,\r\n                      device_type: deviceType,\r\n                      language: Environment.getLanguage(),\r\n                      timezone: new Date().getTimezoneOffset() * -60,\r\n                      device_model: navigator.platform + \" \" + Browser.name,\r\n                      device_os: Browser.version,\r\n                      sdk: OneSignal._VERSION,\r\n                      notification_types: MainHelper.getNotificationTypeFromOptIn(subscription)\r\n                    };\r\n\r\n                    if (subscriptionInfo) {\r\n                      (requestData as any).identifier = subscriptionInfo.endpointOrToken;\r\n                      // Although we're passing the full endpoint to OneSignal, we still need to store only the registration ID for our SDK API getRegistrationId()\r\n                      // Parse out the registration ID from the full endpoint URL and save it to our database\r\n                      let registrationId = subscriptionInfo.endpointOrToken.replace(new RegExp(\"^(https://android.googleapis.com/gcm/send/|https://updates.push.services.mozilla.com/push/)\"), \"\");\r\n                      Database.put(\"Ids\", {type: \"registrationId\", id: registrationId});\r\n                      // New web push standard in Firefox 46+ and Chrome 50+ includes 'auth' and 'p256dh' in PushSubscription\r\n                      if (subscriptionInfo.auth) {\r\n                        (requestData as any).web_auth = subscriptionInfo.auth;\r\n                      }\r\n                      if (subscriptionInfo.p256dh) {\r\n                        (requestData as any).web_p256 = subscriptionInfo.p256dh;\r\n                      }\r\n                    }\r\n\r\n                    return OneSignalApi.post(requestUrl, requestData);\r\n                  })\r\n                  .then((response: any) => {\r\n                    let {id: userId} = response;\r\n\r\n                    MainHelper.beginTemporaryBrowserSession();\r\n\r\n                    if (userId) {\r\n                      return Database.put(\"Ids\", {type: \"userId\", id: userId});\r\n                    }\r\n                  })\r\n                  .then(() => {\r\n                    // We've finished registering with OneSignal, our session_count and last_active has been updated\r\n                    Event.trigger(OneSignal.EVENTS.REGISTERED);\r\n                    if (!SubscriptionHelper.isUsingSubscriptionWorkaround()) {\r\n                      /*\r\n                      For HTTPS sites, this is how the subscription change event gets fired. For HTTP sites, leaving this enabled fires the subscription change event twice.\r\n                      */\r\n                      EventHelper.checkAndTriggerSubscriptionChanged();\r\n                    }\r\n                  });\r\n  }\r\n\r\n  static checkAndTriggerNotificationPermissionChanged() {\r\n    Promise.all([\r\n      Database.get('Options', 'notificationPermission'),\r\n      OneSignal.getNotificationPermission()\r\n    ])\r\n           .then(([previousPermission, currentPermission]) => {\r\n             if (previousPermission !== currentPermission) {\r\n               EventHelper.triggerNotificationPermissionChanged()\r\n                        .then(() => Database.put('Options', {\r\n                          key: 'notificationPermission',\r\n                          value: currentPermission\r\n                        }));\r\n             }\r\n           });\r\n  }\r\n\r\n  /**\r\n   * Calls Notification.requestPermission(), but returns a Promise instead of accepting a callback like the a ctual\r\n   * Notification.requestPermission();\r\n   */\r\n  static requestNotificationPermissionPromise() {\r\n    return new Promise(resolve => window.Notification.requestPermission(resolve));\r\n  }\r\n\r\n  static showNotifyButton() {\r\n    if (Environment.isBrowser() && !OneSignal.notifyButton) {\r\n      OneSignal.config.notifyButton = OneSignal.config.notifyButton || {};\r\n      if (OneSignal.config.bell) {\r\n        // If both bell and notifyButton, notifyButton's options take precedence\r\n        objectAssign(OneSignal.config.bell, OneSignal.config.notifyButton);\r\n        objectAssign(OneSignal.config.notifyButton, OneSignal.config.bell);\r\n      }\r\n      if (OneSignal.config.notifyButton.displayPredicate &&\r\n        typeof OneSignal.config.notifyButton.displayPredicate === \"function\") {\r\n        Promise.resolve(OneSignal.config.notifyButton.displayPredicate())\r\n               .then(predicateValue => {\r\n                 if (predicateValue !== false) {\r\n                   OneSignal.notifyButton = new Bell(OneSignal.config.notifyButton);\r\n                   OneSignal.notifyButton.create();\r\n                 } else {\r\n                   log.debug('Notify button display predicate returned false so not showing the notify button.');\r\n                 }\r\n               });\r\n      } else {\r\n        OneSignal.notifyButton = new Bell(OneSignal.config.notifyButton);\r\n        OneSignal.notifyButton.create();\r\n      }\r\n    }\r\n  }\r\n\r\n  static getPrefixedServiceWorkerNameForEnv() {\r\n    if (Environment.isDev()) {\r\n      OneSignal.SERVICE_WORKER_PATH = DEV_PREFIX + 'OneSignalSDKWorker.js';\r\n      OneSignal.SERVICE_WORKER_UPDATER_PATH = DEV_PREFIX + 'OneSignalSDKUpdaterWorker.js';\r\n    } else if (Environment.isStaging()) {\r\n      OneSignal.SERVICE_WORKER_PATH = STAGING_PREFIX + 'OneSignalSDKWorker.js';\r\n      OneSignal.SERVICE_WORKER_UPDATER_PATH = STAGING_PREFIX + 'OneSignalSDKUpdaterWorker.js';\r\n    }\r\n  }\r\n\r\n  static checkAndDoHttpPermissionRequest() {\r\n    log.debug('Called %ccheckAndDoHttpPermissionRequest()', getConsoleStyle('code'));\r\n    if (this.isUsingHttpPermissionRequest()) {\r\n      if (OneSignal.config.autoRegister) {\r\n        OneSignal.showHttpPermissionRequest({_sdkCall: true})\r\n                 .then(result => {\r\n                   if (result === 'granted' && !this.isUsingCustomHttpPermissionRequestPostModal()) {\r\n                     log.debug('Showing built-in post HTTP permission request in-page modal because permission is granted and not using custom modal.');\r\n                     this.showHttpPermissionRequestPostModal(OneSignal.config.httpPermissionRequest);\r\n                   }\r\n                 });\r\n      } else {\r\n        Event.trigger(OneSignal.EVENTS.TEST_INIT_OPTION_DISABLED);\r\n      }\r\n    }\r\n  }\r\n\r\n  static async getNotificationIcons() {\r\n    const appId = await MainHelper.getAppId();\r\n    if (!appId) {\r\n      throw new InvalidStateError(InvalidStateReason.MissingAppId);\r\n    }\r\n    var url = `${OneSignal._API_URL}apps/${appId}/icon`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    if (data.errors) {\r\n      log.error(`API call %c${url}`, getConsoleStyle('code'), 'failed with:', data.errors);\r\n      throw new Error('Failed to get notification icons.');\r\n    }\r\n    return data;\r\n  }\r\n\r\n  static establishServiceWorkerChannel(serviceWorkerRegistration?) {\r\n    if (OneSignal._channel) {\r\n      OneSignal._channel.off('data');\r\n      OneSignal._channel.off('notification.displayed');\r\n      OneSignal._channel.off('notification.clicked');\r\n    }\r\n    OneSignal._channel = (swivel as any).at(serviceWorkerRegistration ? serviceWorkerRegistration.active : null);\r\n    OneSignal._channel.on('data', function handler(context, data) {\r\n      log.debug(`%c${capitalize(Environment.getEnv())} ⬸ ServiceWorker:`, getConsoleStyle('serviceworkermessage'), data, context);\r\n    });\r\n    OneSignal._channel.on('notification.displayed', function handler(context, data) {\r\n      Event.trigger(OneSignal.EVENTS.NOTIFICATION_DISPLAYED, data);\r\n    });\r\n    OneSignal._channel.on('notification.clicked', async function handler(context, data) {\r\n      if (OneSignal.getListeners(OneSignal.EVENTS.NOTIFICATION_CLICKED).length === 0) {\r\n        /*\r\n          A site's page can be open but not listening to the notification.clicked event because it didn't call addListenerForNotificationOpened().\r\n          In this case, if there are no detected event listeners, we should save the event, instead of firing it without anybody recieving it.\r\n\r\n          Or, since addListenerForNotificationOpened() only works once (you have to call it again each time), maybe it was only called once and the\r\n          user isn't receiving the notification.clicked event for subsequent notifications on the same browser tab.\r\n\r\n          Example: notificationClickHandlerMatch: 'origin', tab is clicked, event fires without anybody listening, calling addListenerForNotificationOpened()\r\n                   returns no results even though a notification was just clicked.\r\n        */\r\n        log.debug('notification.clicked event received, but no event listeners; storing event in IndexedDb for later retrieval.');\r\n        await Database.put(\"NotificationOpened\", { url: data.url, data: data, timestamp: Date.now() });\r\n      } else {\r\n        Event.trigger(OneSignal.EVENTS.NOTIFICATION_CLICKED, data);\r\n      }\r\n    });\r\n    OneSignal._channel.on('command.redirect', function handler(context, data) {\r\n      log.debug(`${Environment.getEnv()} Picked up command.redirect to ${data}, forwarding to host page.`, OneSignal.iframePostmam);\r\n      if (OneSignal.iframePostmam) {\r\n        OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.SERVICEWORKER_COMMAND_REDIRECT, data);\r\n      }\r\n    });\r\n    OneSignal._channel.on('notification.dismissed', function handler(context, data) {\r\n      Event.trigger(OneSignal.EVENTS.NOTIFICATION_DISMISSED, data);\r\n    });\r\n  }\r\n\r\n  static getNormalizedSubdomain(subdomain) {\r\n    if (subdomain) {\r\n      return normalizeSubdomain(subdomain);\r\n    }\r\n  }\r\n\r\n  static getPromptOptionsQueryString() {\r\n    let promptOptions = OneSignal.config['promptOptions'];\r\n    let promptOptionsStr = '';\r\n    if (promptOptions) {\r\n      let hash = MainHelper.getPromptOptionsPostHash();\r\n      for (let key of Object.keys(hash)) {\r\n        var value = hash[key];\r\n        promptOptionsStr += '&' + key + '=' + value;\r\n      }\r\n    }\r\n    return promptOptionsStr;\r\n  }\r\n\r\n  /**\r\n   * Shows the modal on the page users must click on after the local notification prompt to trigger the standard\r\n   * HTTP popup window.\r\n   */\r\n  static async showHttpPermissionRequestPostModal(options?: any) {\r\n    const sdkStylesLoadResult = await OneSignal.context.dynamicResourceLoader.loadSdkStylesheet();\r\n    if (sdkStylesLoadResult !== ResourceLoadState.Loaded) {\r\n      log.debug('Not showing HTTP permission request post-modal because styles failed to load.');\r\n      return;\r\n    }\r\n    OneSignal.httpPermissionRequestPostModal = new HttpModal(options);\r\n    OneSignal.httpPermissionRequestPostModal.create();\r\n  }\r\n\r\n  static getPromptOptionsPostHash() {\r\n    let promptOptions = OneSignal.config['promptOptions'];\r\n    if (promptOptions) {\r\n      var legacyParams = {\r\n        'exampleNotificationTitleDesktop': 'exampleNotificationTitle',\r\n        'exampleNotificationMessageDesktop': 'exampleNotificationMessage',\r\n        'exampleNotificationTitleMobile': 'exampleNotificationTitle',\r\n        'exampleNotificationMessageMobile': 'exampleNotificationMessage',\r\n      };\r\n      for (let legacyParamKey of Object.keys(legacyParams)) {\r\n        let legacyParamValue = legacyParams[legacyParamKey];\r\n        if (promptOptions[legacyParamKey]) {\r\n          promptOptions[legacyParamValue] = promptOptions[legacyParamKey];\r\n        }\r\n      }\r\n      var allowedPromptOptions = [\r\n        'autoAcceptTitle',\r\n        'siteName',\r\n        'autoAcceptTitle',\r\n        'subscribeText',\r\n        'showGraphic',\r\n        'actionMessage',\r\n        'exampleNotificationTitle',\r\n        'exampleNotificationMessage',\r\n        'exampleNotificationCaption',\r\n        'acceptButtonText',\r\n        'cancelButtonText',\r\n        'timeout',\r\n      ];\r\n      var hash = {};\r\n      for (var i = 0; i < allowedPromptOptions.length; i++) {\r\n        var key = allowedPromptOptions[i];\r\n        var value = promptOptions[key];\r\n        var encoded_value = encodeURIComponent(value);\r\n        if (value || value === false || value === '') {\r\n          hash[key] = encoded_value;\r\n        }\r\n      }\r\n    }\r\n    return hash;\r\n  }\r\n\r\n  static triggerCustomPromptClicked(clickResult) {\r\n    Event.trigger(OneSignal.EVENTS.CUSTOM_PROMPT_CLICKED, {\r\n      result: clickResult\r\n    });\r\n  }\r\n\r\n  static autoCorrectSubdomain(inputSubdomain) {\r\n    let normalizedSubdomain = MainHelper.getNormalizedSubdomain(inputSubdomain);\r\n    if (normalizedSubdomain !== inputSubdomain) {\r\n      log.info(`Auto-corrected subdomain '${inputSubdomain}' to '${normalizedSubdomain}'.`);\r\n    }\r\n    return normalizedSubdomain;\r\n  }\r\n\r\n  static createHiddenDomIFrame(url, name?) {\r\n    let node = document.createElement(\"iframe\");\r\n    node.style.display = \"none\";\r\n    if (!url) {\r\n      url = 'about:blank';\r\n    }\r\n    node.src = url;\r\n    if (name) {\r\n      node.name = name;\r\n    }\r\n    document.body.appendChild(node);\r\n    return node;\r\n  }\r\n\r\n  static createHiddenSubscriptionDomModal(url) {\r\n    let iframeContainer = document.createElement('div');\r\n    iframeContainer.setAttribute('id', 'OneSignal-iframe-modal');\r\n    iframeContainer.setAttribute('style', 'display:none !important');\r\n    iframeContainer.innerHTML = '<div id=\"notif-permission\" style=\"background: rgba(0, 0, 0, 0.7); position: fixed;' +\r\n      ' top: 0; left: 0; right: 0; bottom: 0; z-index: 3000000000; display: flex;' +\r\n      ' align-items: center; justify-content: center;\"></div>';\r\n    document.body.appendChild(iframeContainer);\r\n\r\n    let iframeContainerStyle = document.createElement('style');\r\n    iframeContainerStyle.innerHTML = `@media (max-width: 560px) { .OneSignal-permission-iframe { width: 100%; height: 100%;} }`;\r\n    document.getElementsByTagName('head')[0].appendChild(iframeContainerStyle);\r\n\r\n    let iframe = document.createElement(\"iframe\");\r\n    iframe.className = \"OneSignal-permission-iframe\";\r\n    iframe.setAttribute('frameborder', '0');\r\n    iframe.width = OneSignal._windowWidth.toString();\r\n    iframe.height = OneSignal._windowHeight.toString();\r\n    iframe.src = url;\r\n\r\n    document.getElementById(\"notif-permission\").appendChild(iframe);\r\n    return iframe;\r\n  }\r\n\r\n  static showSubscriptionDomModal() {\r\n    const iframeContainer = document.getElementById('OneSignal-iframe-modal');\r\n    iframeContainer.setAttribute('style', '');\r\n  }\r\n\r\n  // Arguments :\r\n  //  verb : 'GET'|'POST'\r\n  //  target : an optional opening target (a name, or \"_blank\"), defaults to \"_self\"\r\n  static openWindowViaPost(url, data, overrides) {\r\n    var form = document.createElement(\"form\");\r\n    form.action = url;\r\n    form.method = 'POST';\r\n    form.target = \"onesignal-http-popup\";\r\n\r\n    var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : (screen as any).left;\r\n    var dualScreenTop = window.screenTop != undefined ? window.screenTop : (screen as any).top;\r\n    var thisWidth = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\r\n    var thisHeight = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\r\n    var childWidth = OneSignal._windowWidth;\r\n    var childHeight = OneSignal._windowHeight;\r\n    var left = ((thisWidth / 2) - (childWidth / 2)) + dualScreenLeft;\r\n    var top = ((thisHeight / 2) - (childHeight / 2)) + dualScreenTop;\r\n\r\n    if (overrides) {\r\n      if (overrides.childWidth) {\r\n        childWidth = overrides.childWidth;\r\n      }\r\n      if (overrides.childHeight) {\r\n        childHeight = overrides.childHeight;\r\n      }\r\n      if (overrides.left) {\r\n        left = overrides.left;\r\n      }\r\n      if (overrides.top) {\r\n        top = overrides.top;\r\n      }\r\n    }\r\n    const windowRef = window.open('about:blank', \"onesignal-http-popup\", `'scrollbars=yes, width=${childWidth}, height=${childHeight}, top=${top}, left=${left}`);\r\n\r\n    if (data) {\r\n      for (var key in data) {\r\n        var input = document.createElement(\"textarea\");\r\n        input.name = key;\r\n        input.value = typeof data[key] === \"object\" ? JSON.stringify(data[key]) : data[key];\r\n        form.appendChild(input);\r\n      }\r\n    }\r\n    form.style.display = 'none';\r\n    document.body.appendChild(form);\r\n    form.submit();\r\n    document.body.removeChild(form);\r\n\r\n    return windowRef;\r\n  };\r\n\r\n  static openSubdomainPopup(url, data, overrides) {\r\n    return MainHelper.openWindowViaPost(url, data, overrides);\r\n  }\r\n\r\n  static getAppId() {\r\n    if (OneSignal.config.appId) {\r\n      return Promise.resolve(OneSignal.config.appId);\r\n    }\r\n    else return Database.get('Ids', 'appId');\r\n  }\r\n}","import * as ExtendableError from \"es6-error\";\r\n\r\nexport default class OneSignalError extends ExtendableError {\r\n  constructor(message) {\r\n    super(message);\r\n  }\r\n}","import OneSignalError from \"./OneSignalError\";\r\nimport { PermissionPromptType } from \"../models/PermissionPromptType\";\r\n\r\n\r\nexport enum InvalidStateReason {\r\n  MissingAppId,\r\n  RedundantPermissionMessage,\r\n  PushPermissionAlreadyGranted,\r\n  UnsupportedEnvironment,\r\n  MissingDomElement\r\n}\r\n\r\nexport class InvalidStateError extends OneSignalError {\r\n  description: string;\r\n  reason: InvalidStateReason;\r\n\r\n  constructor(reason: InvalidStateReason, extra?: {\r\n    permissionPromptType: PermissionPromptType\r\n  }) {\r\n    switch (reason) {\r\n      case InvalidStateReason.MissingAppId:\r\n        super(`Missing required app ID.`);\r\n        break;\r\n      case InvalidStateReason.RedundantPermissionMessage:\r\n        let extraInfo = '';\r\n        if (extra.permissionPromptType)\r\n          extraInfo = `(${PermissionPromptType[extra.permissionPromptType]})`;\r\n        super(`Another permission message ${extraInfo} is being displayed.`);\r\n        break;\r\n      case InvalidStateReason.PushPermissionAlreadyGranted:\r\n        super(`Push permission has already been granted.`);\r\n        break;\r\n      case InvalidStateReason.UnsupportedEnvironment:\r\n        super(`The current environment does not support this operation.`);\r\n        break;\r\n    }\r\n    this.description = InvalidStateReason[reason];\r\n    this.reason = reason;\r\n  }\r\n}","import OneSignalApi from \"../OneSignalApi\";\r\nimport * as log from \"loglevel\";\r\nimport LimitStore from \"../LimitStore\";\r\nimport Event from \"../Event\";\r\nimport Database from \"../services/Database\";\r\nimport {decodeHtmlEntities, logMethodCall} from \"../utils\";\r\nimport MainHelper from \"./MainHelper\";\r\nimport SubscriptionHelper from \"./SubscriptionHelper\";\r\n\r\n\r\nexport default class EventHelper {\r\n  static onNotificationPermissionChange(event) {\r\n    EventHelper.checkAndTriggerSubscriptionChanged();\r\n  }\r\n\r\n  static async onInternalSubscriptionSet(optedOut) {\r\n    LimitStore.put('subscription.optedOut', optedOut);\r\n  }\r\n\r\n  static async checkAndTriggerSubscriptionChanged() {\r\n    logMethodCall('checkAndTriggerSubscriptionChanged');\r\n    const pushEnabled = await OneSignal.isPushNotificationsEnabled();\r\n    const appState = await Database.getAppState();\r\n    const { lastKnownPushEnabled } = appState;\r\n    const didStateChange = (lastKnownPushEnabled === null || pushEnabled !== lastKnownPushEnabled);\r\n    if (!didStateChange)\r\n      return;\r\n    log.info(`The user's subscription state changed from ` +\r\n              `${lastKnownPushEnabled === null ? '(not stored)' : lastKnownPushEnabled} ⟶ ${pushEnabled}`);\r\n    appState.lastKnownPushEnabled = pushEnabled;\r\n    await Database.setAppState(appState);\r\n    EventHelper.triggerSubscriptionChanged(pushEnabled);\r\n  }\r\n\r\n  static _onSubscriptionChanged(newSubscriptionState) {\r\n    if (OneSignal.__doNotShowWelcomeNotification) {\r\n      log.debug('Not showing welcome notification because user state was reset.');\r\n      return;\r\n    }\r\n    if (newSubscriptionState === true) {\r\n      Promise.all([\r\n        OneSignal.getUserId(),\r\n        MainHelper.getAppId()\r\n      ])\r\n             .then(([userId, appId]) => {\r\n               let welcome_notification_opts = OneSignal.config['welcomeNotification'];\r\n               let welcome_notification_disabled = ((welcome_notification_opts !== undefined) &&\r\n               (welcome_notification_opts['disable'] === true));\r\n               let title = ((welcome_notification_opts !== undefined) &&\r\n               (welcome_notification_opts['title'] !== undefined) &&\r\n               (welcome_notification_opts['title'] !== null)) ? welcome_notification_opts['title'] : '';\r\n               let message = ((welcome_notification_opts !== undefined) &&\r\n               (welcome_notification_opts['message'] !== undefined) &&\r\n               (welcome_notification_opts['message'] !== null) &&\r\n               (welcome_notification_opts['message'].length > 0)) ?\r\n                 welcome_notification_opts['message'] :\r\n                 'Thanks for subscribing!';\r\n               let unopenableWelcomeNotificationUrl = new URL(location.href).origin + '?_osp=do_not_open';\r\n               let url = (welcome_notification_opts &&\r\n               welcome_notification_opts['url'] &&\r\n               (welcome_notification_opts['url'].length > 0)) ?\r\n                 welcome_notification_opts['url'] :\r\n                 unopenableWelcomeNotificationUrl;\r\n               title = decodeHtmlEntities(title);\r\n               message = decodeHtmlEntities(message);\r\n               if (!welcome_notification_disabled) {\r\n                 log.debug('Sending welcome notification.');\r\n                 OneSignalApi.sendNotification(appId, [userId], {'en': title}, {'en': message}, url, null,\r\n                   {__isOneSignalWelcomeNotification: true}, undefined);\r\n                 Event.trigger(OneSignal.EVENTS.WELCOME_NOTIFICATION_SENT, {title: title, message: message, url: url});\r\n               }\r\n             });\r\n    }\r\n  }\r\n\r\n  static triggerNotificationPermissionChanged(updateIfIdentical = false) {\r\n    let newPermission, isUpdating;\r\n    return Promise.all([\r\n      OneSignal.getNotificationPermission(),\r\n      Database.get('Options', 'notificationPermission')\r\n    ])\r\n                  .then(([currentPermission, previousPermission]) => {\r\n                    newPermission = currentPermission;\r\n                    isUpdating = (currentPermission !== previousPermission || updateIfIdentical);\r\n\r\n                    if (isUpdating) {\r\n                      return Database.put('Options', {key: 'notificationPermission', value: currentPermission});\r\n                    }\r\n                  })\r\n                  .then(() => {\r\n                    if (isUpdating) {\r\n                      Event.trigger(OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, {\r\n                        to: newPermission\r\n                      });\r\n                    }\r\n                  });\r\n  }\r\n\r\n  static triggerSubscriptionChanged(to) {\r\n    Event.trigger(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, to);\r\n  }\r\n\r\n  /**\r\n   * When notifications are clicked, because the site isn't open, the notification is stored in the database. The next\r\n   * time the page opens, the event is triggered if its less than 5 minutes (usually page opens instantly from click).\r\n   *\r\n   * This method is fired for both HTTPS and HTTP sites, so for HTTP sites, the host URL needs to be used, not the\r\n   * subdomain.onesignal.com URL.\r\n   */\r\n  static async fireStoredNotificationClicks(url: string = document.URL) {\r\n    async function fireEventWithNotification(clickedNotificationInfo) {\r\n      // Remove the notification from the recently clicked list\r\n      // Once this page processes this retroactively provided clicked event, nothing should get the same event\r\n      const appState = await Database.getAppState();\r\n      appState.clickedNotifications[clickedNotificationInfo.url] = null;\r\n      await Database.setAppState(appState);\r\n\r\n      /* Clicked notifications look like:\r\n      {\r\n        \"url\": \"https://notify.tech\",\r\n        \"data\": {\r\n          \"id\": \"f44dfcc7-e8cd-47c6-af7e-e2b7ac68afca\",\r\n          \"heading\": \"Example Notification\",\r\n          \"content\": \"This is an example notification.\",\r\n          \"icon\": \"https://onesignal.com/images/notification_logo.png\"\r\n          (there would be a URL field here if it was set)\r\n        },\r\n        \"timestamp\": 1490998270607\r\n      }\r\n      */\r\n      const { data: notification, timestamp } = clickedNotificationInfo;\r\n\r\n      if (timestamp) {\r\n        const minutesSinceNotificationClicked = (Date.now() - timestamp) / 1000 / 60;\r\n        if (minutesSinceNotificationClicked > 5)\r\n          return;\r\n      }\r\n      Event.trigger(OneSignal.EVENTS.NOTIFICATION_CLICKED, notification);\r\n    }\r\n\r\n    const appState = await Database.getAppState();\r\n\r\n    /* Is the flag notificationClickHandlerMatch: origin enabled?\r\n\r\n       If so, this means we should provide a retroactive notification.clicked event as long as there exists any recently clicked\r\n       notification that matches this site's origin.\r\n\r\n       Otherwise, the default behavior is to only provide a retroactive notification.clicked event if this page's URL exactly\r\n       matches the notification's URL.\r\n    */\r\n    const notificationClickHandlerMatch = await Database.get<string>('Options', 'notificationClickHandlerMatch');\r\n    if (notificationClickHandlerMatch === 'origin') {\r\n      for (const clickedNotificationUrl of Object.keys(appState.clickedNotifications)) {\r\n        // Using notificationClickHandlerMatch: 'origin', as long as the notification's URL's origin matches our current tab's origin,\r\n        // fire the clicked event\r\n        if (new URL(clickedNotificationUrl).origin === location.origin) {\r\n          const clickedNotification = appState.clickedNotifications[clickedNotificationUrl];\r\n          await fireEventWithNotification(clickedNotification);\r\n        }\r\n      }\r\n    } else {\r\n      /*\r\n        If a user is on https://site.com, document.URL and location.href both report the page's URL as https://site.com/.\r\n        This causes checking for notifications for the current URL to fail, since there is a notification for https://site.com,\r\n        but there is no notification for https://site.com/.\r\n\r\n        As a workaround, if there are no notifications for https://site.com/, we'll do a check for https://site.com.\r\n      */\r\n      var pageClickedNotifications = appState.clickedNotifications[url];\r\n      if (pageClickedNotifications) {\r\n        await fireEventWithNotification(pageClickedNotifications);\r\n      }\r\n      else if (!pageClickedNotifications &&\r\n        url.endsWith('/')) {\r\n        var urlWithoutTrailingSlash = url.substring(0, url.length - 1);\r\n        pageClickedNotifications = appState.clickedNotifications[urlWithoutTrailingSlash];\r\n        if (pageClickedNotifications) {\r\n          await fireEventWithNotification(pageClickedNotifications);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","/*\n LimitStore.put('colorado', 'rocky');\n [\"rocky\"]\n LimitStore.put('colorado', 'mountain');\n [\"rocky\", \"mountain\"]\n LimitStore.put('colorado', 'national');\n [\"mountain\", \"national\"]\n LimitStore.put('colorado', 'park');\n [\"national\", \"park\"]\n */\nexport default class LimitStore {\n  static store = {};\n  static LIMIT = 2;\n\n  static put(key, value) {\n    if (LimitStore.store[key] === undefined) {\n      LimitStore.store[key] = [null, null];\n    }\n    LimitStore.store[key].push(value);\n    if (LimitStore.store[key].length == LimitStore.LIMIT + 1) {\n      LimitStore.store[key].shift();\n    }\n    return LimitStore.store[key];\n  }\n\n  static get(key) {\n    if (LimitStore.store[key] === undefined) {\n      LimitStore.store[key] = [null, null];\n    }\n    return LimitStore.store[key];\n  }\n\n  static getFirst(key) {\n    return LimitStore.get(key)[0];\n  }\n\n  static getLast(key) {\n    return LimitStore.get(key)[1];\n  }\n\n  static remove(key) {\n    delete LimitStore.store[key];\n  }\n\n  static isEmpty(key) {\n    let values = LimitStore.get(key);\n    return values[0] === null && values[1] === null;\n  }\n}","import {API_URL} from \"./vars\";\nimport * as log from \"loglevel\";\nimport {contains, trimUndefined} from \"./utils\";\nimport {Uuid} from \"./models/Uuid\";\nimport * as objectAssign from \"object-assign\";\nimport Environment from \"./Environment\";\n\n\nexport default class OneSignalApi {\n\n  static get(action, data?, headers?) {\n    return OneSignalApi.call('GET', action, data, headers);\n  }\n\n  static post(action, data?, headers?) {\n    return OneSignalApi.call('POST', action, data, headers);\n  }\n\n  static put(action, data?, headers?) {\n    return OneSignalApi.call('PUT', action, data, headers);\n  }\n\n  static delete(action, data?, headers?) {\n    return OneSignalApi.call('DELETE', action, data, headers);\n  }\n\n  static call(method, action, data, headers) {\n    let callHeaders: any = new Headers();\n    callHeaders.append('SDK-Version', `onesignal/web/${Environment.version()}`);\n    callHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    if (headers) {\n      for (let key of Object.keys(headers)) {\n        callHeaders.append(key, headers[key]);\n      }\n    }\n\n    let contents = {\n      method: method || 'NO_METHOD_SPECIFIED',\n      headers: callHeaders,\n      cache: 'no-cache'\n    };\n    if (data)\n      (contents as any).body = JSON.stringify(data);\n\n    var status;\n    return fetch(API_URL + action, contents)\n        .then(response => {\n          status = response.status;\n          return response.json();\n        })\n        .then(json => {\n          if (status >= 200 && status < 300)\n            return json;\n          else {\n            let error = OneSignalApi.identifyError(json);\n            if (error === 'no-user-id-error') {\n              // TODO: This returns undefined\n            } else {\n              return Promise.reject(json);\n            }\n          }\n        });\n  }\n\n  static identifyError(error) {\n    if (!error || !error.errors) {\n      return 'no-error';\n    }\n    let errors = error.errors;\n    if (contains(errors, 'No user with this id found') ||\n        contains(errors, 'Could not find app_id for given player id.')) {\n      return 'no-user-id-error';\n    }\n    return 'unknown-error';\n  }\n\n  /**\n   * Given a GCM or Firefox subscription endpoint or Safari device token, returns the user ID from OneSignal's server.\n   * Used if the user clears his or her IndexedDB database and we need the user ID again.\n   */\n  static getUserIdFromSubscriptionIdentifier(appId, deviceType, identifier) {\n    // Calling POST /players with an existing identifier returns us that player ID\n    return OneSignalApi.post('players', {\n      app_id: appId,\n      device_type: deviceType,\n      identifier: identifier\n    }).then(response => {\n      if (response && response.id) {\n        return response.id;\n      } else {\n        return null;\n      }\n    }).catch(e => {\n      log.debug('Error getting user ID from subscription identifier:', e);\n      return null;\n    });\n  }\n\n  static getPlayer(appId, playerId) {\n    return OneSignalApi.get(`players/${playerId}?app_id=${appId}`);\n  }\n\n  static updatePlayer(appId: Uuid, playerId: Uuid, options?: Object) {\n    return OneSignalApi.put(`players/${playerId}`, objectAssign({app_id: appId}, options));\n  }\n\n  static sendNotification(appId, playerIds, titles, contents, url, icon, data, buttons) {\n    var params = {\n      app_id: appId,\n      contents: contents,\n      include_player_ids: playerIds,\n      isAnyWeb: true,\n      data: data,\n      web_buttons: buttons\n    };\n    if (titles) {\n      (params as any).headings = titles;\n    }\n    if (url) {\n      (params as any).url = url;\n    }\n    if (icon) {\n      (params as any).chrome_web_icon = icon;\n      (params as any).firefox_icon = icon;\n    }\n    trimUndefined(params);\n    return OneSignalApi.post('notifications', params);\n  }\n}","import {\n  removeDomElement,\n  addDomElement,\n  addCssClass,\n  delay,\n  nothing,\n  contains,\n  decodeHtmlEntities,\n  once\n} from \"../utils\";\nimport * as log from \"loglevel\";\nimport Event from \"../Event\";\nimport * as Browser from \"bowser\";\nimport Database from \"../services/Database\";\nimport MainHelper from \"../helpers/MainHelper\";\nimport Launcher from \"./Launcher\";\nimport Badge from \"./Badge\";\nimport Button from \"./Button\";\nimport Dialog from \"./Dialog\";\nimport Message from \"./Message\";\nimport SubscriptionHelper from \"../helpers/SubscriptionHelper\";\nimport InitHelper from \"../helpers/InitHelper\";\nimport Environment from \"../Environment\";\nimport { DynamicResourceLoader, ResourceLoadState } from \"../services/DynamicResourceLoader\";\n\nvar logoSvg = `<svg class=\"onesignal-bell-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"99.7\" height=\"99.7\" viewBox=\"0 0 99.7 99.7\"><circle class=\"background\" cx=\"49.9\" cy=\"49.9\" r=\"49.9\"/><path class=\"foreground\" d=\"M50.1 66.2H27.7s-2-.2-2-2.1c0-1.9 1.7-2 1.7-2s6.7-3.2 6.7-5.5S33 52.7 33 43.3s6-16.6 13.2-16.6c0 0 1-2.4 3.9-2.4 2.8 0 3.8 2.4 3.8 2.4 7.2 0 13.2 7.2 13.2 16.6s-1 11-1 13.3c0 2.3 6.7 5.5 6.7 5.5s1.7.1 1.7 2c0 1.8-2.1 2.1-2.1 2.1H50.1zm-7.2 2.3h14.5s-1 6.3-7.2 6.3-7.3-6.3-7.3-6.3z\"/><ellipse class=\"stroke\" cx=\"49.9\" cy=\"49.9\" rx=\"37.4\" ry=\"36.9\"/></svg>`;\n\n\nexport default class Bell {\n  public enable: boolean;\n  public size: string;\n  public position: string;\n  public theme: string;\n  public showLauncherAfter: number;\n  public showBadgeAfter: number;\n  public text: any;\n  public prenotify: boolean;\n  public showCredit: boolean;\n  public colors: any;\n  public offset: any;\n  public options: any;\n  public state: any;\n  public _ignoreSubscriptionState: boolean;\n  public hovering: boolean;\n  public initialized: boolean;\n  public _launcher: any;\n  public _button: any;\n  public _badge: any;\n  public _message: any;\n  public _dialog: any;\n\n  static get EVENTS() {\n    return {\n      STATE_CHANGED: 'notifyButtonStateChange',\n      LAUNCHER_CLICK: 'notifyButtonLauncherClick',\n      BELL_CLICK: 'notifyButtonButtonClick',\n      SUBSCRIBE_CLICK: 'notifyButtonSubscribeClick',\n      UNSUBSCRIBE_CLICK: 'notifyButtonUnsubscribeClick',\n      HOVERING: 'notifyButtonHovering',\n      HOVERED: 'notifyButtonHover'\n    };\n  }\n\n  static get STATES() {\n    return {\n      UNINITIALIZED: 'uninitialized',\n      SUBSCRIBED: 'subscribed',\n      UNSUBSCRIBED: 'unsubscribed',\n      BLOCKED: 'blocked'\n    };\n  }\n\n  static get TEXT_SUBS() {\n    return {\n      'prompt.native.grant': {\n        default: 'Allow',\n        chrome: 'Allow',\n        firefox: 'Always Receive Notifications',\n        safari: 'Allow'\n      }\n    }\n  }\n\n  substituteText() {\n    // key: 'message.action.subscribing'\n    // value: 'Click <strong>{{prompt.native.grant}}</strong> to receive notifications'\n    for (var key in this.text) {\n      if (this.text.hasOwnProperty(key)) {\n        let value = this.text[key];\n        // browserName could be 'chrome' or 'firefox' or 'safari'\n        let browserName = Browser.name.toLowerCase();\n\n        // tKey: 'prompt.native.grant'  (from TEXT_SUBS)\n        // tValue: { chrome: 'Allow', firefox: 'Al... }\n        // zValue: 'Allow', if browserName === 'chrome'\n        for (var tKey in Bell.TEXT_SUBS) {\n          if (Bell.TEXT_SUBS.hasOwnProperty(tKey)) {\n            let tValue = Bell.TEXT_SUBS[tKey];\n            let zValue = tValue[browserName];\n            if (value && contains(value, '{{')) {\n              this.text[key] = value.replace(`{{${tKey}}}`, (zValue !== undefined ? zValue : tValue['default']));\n            }\n          }\n        }\n      }\n    }\n  }\n\n  constructor({\n    enable = false,\n    size = 'medium',\n    position = 'bottom-right',\n    theme = 'default',\n    showLauncherAfter = 10,\n    showBadgeAfter = 300,\n    text = {\n      'tip.state.unsubscribed': 'Subscribe to notifications',\n      'tip.state.subscribed': \"You're subscribed to notifications\",\n      'tip.state.blocked': \"You've blocked notifications\",\n      'message.prenotify': 'Click to subscribe to notifications',\n      'message.action.subscribing': \"Click <strong>{{prompt.native.grant}}</strong> to receive notifications\",\n      'message.action.subscribed': \"Thanks for subscribing!\",\n      'message.action.resubscribed': \"You're subscribed to notifications\",\n      'message.action.unsubscribed': \"You won't receive notifications again\",\n      'dialog.main.title': 'Manage Site Notifications',\n      'dialog.main.button.subscribe': 'SUBSCRIBE',\n      'dialog.main.button.unsubscribe': 'UNSUBSCRIBE',\n      'dialog.blocked.title': 'Unblock Notifications',\n      'dialog.blocked.message': \"Follow these instructions to allow notifications:\"\n    },\n    prenotify = true,\n    showCredit = true,\n    colors = null,\n    offset = null,\n    launcher = null\n    } = {}) {\n    this.options = {\n      enable: enable,\n      size: size,\n      position: position,\n      theme: theme,\n      showLauncherAfter: showLauncherAfter,\n      showBadgeAfter: showBadgeAfter,\n      text: text,\n      prenotify: prenotify,\n      showCredit: showCredit,\n      colors: colors,\n      offset: offset\n    };\n\n    if (!this.options.enable)\n      return;\n\n    if (!contains(['small', 'medium', 'large'], this.options.size))\n      throw new Error(`Invalid size ${this.options.size} for notify button. Choose among 'small', 'medium', or 'large'.`);\n    if (!contains(['bottom-left', 'bottom-right'], this.options.position))\n      throw new Error(`Invalid position ${this.options.position} for notify button. Choose either 'bottom-left', or 'bottom-right'.`);\n    if (!contains(['default', 'inverse'], this.options.theme))\n      throw new Error(`Invalid theme ${this.options.theme} for notify button. Choose either 'default', or 'inverse'.`);\n    if (this.options.showLauncherAfter < 0)\n      throw new Error(`Invalid delay duration of ${this.options.showLauncherAfter} for showing the notify button. Choose a value above 0.`);\n    if (this.options.showBadgeAfter < 0)\n      throw new Error(`Invalid delay duration of ${this.options.showBadgeAfter} for showing the notify button's badge. Choose a value above 0.`);\n    this.size = this.options.size;\n    this.position = this.options.position;\n    this.text = this.options.text;\n    if (!this.text['tip.state.unsubscribed'])\n      this.text['tip.state.unsubscribed'] = 'Subscribe to notifications';\n    if (!this.text['tip.state.subscribed'])\n      this.text['tip.state.subscribed'] = \"You're subscribed to notifications\";\n    if (!this.text['tip.state.blocked'])\n      this.text['tip.state.blocked'] = \"You've blocked notifications\";\n    if (!this.text['message.prenotify'])\n      this.text['message.prenotify'] = \"Click to subscribe to notifications\";\n    if (!this.text['message.action.subscribed'])\n      this.text['message.action.subscribed'] = \"Thanks for subscribing!\";\n    if (!this.text['message.action.resubscribed'])\n      this.text['message.action.resubscribed'] = \"You're subscribed to notifications\";\n    if (!this.text['message.action.subscribing'])\n      this.text['message.action.subscribing'] = \"Click <strong>{{prompt.native.grant}}</strong> to receive notifications\";\n    if (!this.text['message.action.unsubscribed'])\n      this.text['message.action.unsubscribed'] = \"You won't receive notifications again\";\n    if (!this.text['dialog.main.title'])\n      this.text['dialog.main.title'] = 'Manage Site Notifications';\n    if (!this.text['dialog.main.button.subscribe'])\n      this.text['dialog.main.button.subscribe'] = 'SUBSCRIBE';\n    if (!this.text['dialog.main.button.unsubscribe'])\n      this.text['dialog.main.button.unsubscribe'] = 'UNSUBSCRIBE';\n    if (!this.text['dialog.blocked.title'])\n      this.text['dialog.blocked.title'] = 'Unblock Notifications';\n    if (!this.text['dialog.blocked.message'])\n      this.text['dialog.blocked.message'] = 'Follow these instructions to allow notifications:';\n    this._launcher = launcher;\n    this.substituteText();\n    this.state = Bell.STATES.UNINITIALIZED;\n    this._ignoreSubscriptionState = false;\n\n    // Install event hooks\n    OneSignal.on(Bell.EVENTS.SUBSCRIBE_CLICK, () => {\n      this.dialog.subscribeButton.disabled = true;\n      this._ignoreSubscriptionState = true;\n      OneSignal.setSubscription(true)\n        .then(() => {\n          this.dialog.subscribeButton.disabled = false;\n          return this.dialog.hide();\n        })\n        .then(() => {\n          return this.message.display(Message.TYPES.MESSAGE, this.text['message.action.resubscribed'], Message.TIMEOUT);\n        })\n        .then(() => {\n          this._ignoreSubscriptionState = false;\n          this.launcher.clearIfWasInactive();\n          return this.launcher.inactivate();\n        })\n        .then(() => {\n          return this.updateState();\n        });\n    });\n\n    OneSignal.on(Bell.EVENTS.UNSUBSCRIBE_CLICK, () => {\n      this.dialog.unsubscribeButton.disabled = true;\n      OneSignal.setSubscription(false)\n        .then(() => {\n          this.dialog.unsubscribeButton.disabled = false;\n          return this.dialog.hide();\n        })\n        .then(() => {\n          this.launcher.clearIfWasInactive();\n          return this.launcher.activate();\n        })\n        .then(() => {\n          return this.message.display(Message.TYPES.MESSAGE, this.text['message.action.unsubscribed'], Message.TIMEOUT);\n        })\n        .then(() => {\n          return this.updateState();\n        });\n    });\n\n    OneSignal.on(Bell.EVENTS.HOVERING, () => {\n      this.hovering = true;\n      this.launcher.activateIfInactive();\n\n      // If there's already a message being force shown, do not override\n      if (this.message.shown || this.dialog.shown) {\n        this.hovering = false;\n        return;\n      }\n\n      // If the message is a message and not a tip, don't show it (only show tips)\n      // Messages will go away on their own\n      if (this.message.contentType === Message.TYPES.MESSAGE) {\n        this.hovering = false;\n        return;\n      }\n\n      new Promise((resolve, reject) => {\n        // If a message is being shown\n        if (this.message.queued.length > 0) {\n          return this.message.dequeue().then((msg) => {\n            this.message.content = msg;\n            this.message.contentType = Message.TYPES.QUEUED;\n            resolve();\n          });\n        } else {\n          this.message.content = decodeHtmlEntities(this.message.getTipForState());\n          this.message.contentType = Message.TYPES.TIP;\n          resolve();\n        }\n      }).then(() => {\n          return this.message.show();\n        })\n        .then(() => {\n          this.hovering = false;\n        })\n    });\n\n    OneSignal.on(Bell.EVENTS.HOVERED, () => {\n      // If a message is displayed (and not a tip), don't control it. Visitors have no control over messages\n      if (this.message.contentType === Message.TYPES.MESSAGE) {\n        return;\n      }\n\n      if (!this.dialog.hidden) {\n        // If the dialog is being brought up when clicking button, don't shrink\n        return;\n      }\n\n      if (this.hovering) {\n        this.hovering = false;\n        // Hovering still being true here happens on mobile where the message could still be showing (i.e. animating) when a HOVERED event fires\n        // In other words, you tap on mobile, HOVERING fires, and then HOVERED fires immediately after because of the way mobile click events work\n        // Basically only happens if HOVERING and HOVERED fire within a few milliseconds of each other\n        this.message.waitUntilShown()\n          .then(() => delay(Message.TIMEOUT))\n          .then(() => this.message.hide())\n          .then(() => {\n            if (this.launcher.wasInactive && this.dialog.hidden) {\n              this.launcher.inactivate();\n              this.launcher.wasInactive = null;\n            }\n          });\n      }\n\n\n      if (this.message.shown) {\n        this.message.hide()\n          .then(() => {\n            if (this.launcher.wasInactive && this.dialog.hidden) {\n              this.launcher.inactivate();\n              this.launcher.wasInactive = null;\n            }\n          });\n      }\n    });\n\n    OneSignal.on(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, async isSubscribed => {\n      if (isSubscribed == true) {\n        if (this.badge.shown && this.options.prenotify) {\n          this.badge.hide();\n        }\n        if (this.dialog.notificationIcons === null) {\n          const icons = await MainHelper.getNotificationIcons();\n          this.dialog.notificationIcons = icons;\n        }\n      }\n\n      OneSignal.getNotificationPermission(permission => {\n        this.setState((isSubscribed ?\n          Bell.STATES.SUBSCRIBED :\n          ((permission === 'denied') ? Bell.STATES.BLOCKED : Bell.STATES.UNSUBSCRIBED)), this._ignoreSubscriptionState);\n      });\n    });\n\n    OneSignal.on(Bell.EVENTS.STATE_CHANGED, (state) => {\n      if (!this.launcher.element) {\n        // Notify button doesn't exist\n        return;\n      }\n      if (state.to === Bell.STATES.SUBSCRIBED) {\n        this.launcher.inactivate();\n      } else if (state.to === Bell.STATES.UNSUBSCRIBED ||\n                              Bell.STATES.BLOCKED) {\n        this.launcher.activate();\n      }\n    });\n\n    OneSignal.on(OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, (from, to) => {\n      this.updateState();\n    });\n\n    this.updateState();\n  }\n\n  showDialogProcedure() {\n    if (!this.dialog.shown) {\n      this.dialog.show()\n        .then(() => {\n          once(document, 'click', (e, destroyEventListener) => {\n            let wasDialogClicked = this.dialog.element.contains(e.target);\n            if (wasDialogClicked) {\n            } else {\n              destroyEventListener();\n              if (this.dialog.shown) {\n                this.dialog.hide()\n                  .then((e) => {\n                    this.launcher.inactivateIfWasInactive();\n                  });\n              }\n            }\n          }, true);\n        });\n    }\n  }\n\n  async create() {\n    if (!this.options.enable)\n      return;\n\n    const sdkStylesLoadResult = await OneSignal.context.dynamicResourceLoader.loadSdkStylesheet();\n    if (sdkStylesLoadResult !== ResourceLoadState.Loaded) {\n      log.debug('Not showing notify button because styles failed to load.');\n      return;\n    }\n\n    // Remove any existing bell\n    if (this.container) {\n      removeDomElement('#onesignal-bell-container');\n    }\n\n    // Insert the bell container\n    addDomElement('body', 'beforeend', '<div id=\"onesignal-bell-container\" class=\"onesignal-bell-container onesignal-reset\"></div>');\n    // Insert the bell launcher\n    addDomElement(this.container, 'beforeend', '<div id=\"onesignal-bell-launcher\" class=\"onesignal-bell-launcher\"></div>');\n    // Insert the bell launcher button\n    addDomElement(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-button\"></div>');\n    // Insert the bell launcher badge\n    addDomElement(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-badge\"></div>');\n    // Insert the bell launcher message\n    addDomElement(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-message\"></div>');\n    addDomElement(this.message.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-message-body\"></div>');\n    // Insert the bell launcher dialog\n    addDomElement(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-dialog\"></div>');\n    addDomElement(this.dialog.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-dialog-body\"></div>');\n\n    // Install events\n\n    // Add visual elements\n    addDomElement(this.button.selector, 'beforeEnd', logoSvg);\n\n    const isPushEnabled = await OneSignal.isPushNotificationsEnabled();\n    const notOptedOut = await OneSignal.getSubscription();\n    const doNotPrompt = await MainHelper.wasHttpsNativePromptDismissed()\n\n    // Resize to small instead of specified size if enabled, otherwise there's a jerking motion where the bell, at a different size than small, jerks sideways to go from large -> small or medium -> small\n    let resizeTo = (isPushEnabled ? 'small' : this.options.size);\n    // Add default classes\n    await this.launcher.resize(resizeTo);\n    if (this.options.position === 'bottom-left') {\n      addCssClass(this.container, 'onesignal-bell-container-bottom-left')\n      addCssClass(this.launcher.selector, 'onesignal-bell-launcher-bottom-left')\n    }\n    else if (this.options.position === 'bottom-right') {\n      addCssClass(this.container, 'onesignal-bell-container-bottom-right')\n      addCssClass(this.launcher.selector, 'onesignal-bell-launcher-bottom-right')\n    }\n    else {\n      throw new Error('Invalid OneSignal notify button position ' + this.options.position);\n    }\n\n    if (this.options.theme === 'default') {\n      addCssClass(this.launcher.selector, 'onesignal-bell-launcher-theme-default')\n    }\n    else if (this.options.theme === 'inverse') {\n      addCssClass(this.launcher.selector, 'onesignal-bell-launcher-theme-inverse')\n    }\n    else {\n      throw new Error('Invalid OneSignal notify button theme ' + this.options.theme);\n    }\n\n    this.applyOffsetIfSpecified();\n    this.setCustomColorsIfSpecified();\n    this.patchSafariSvgFilterBug();\n\n    log.info('Showing the notify button.');\n\n    await (isPushEnabled ? this.launcher.inactivate() : nothing())\n      .then(() => OneSignal.getSubscription())\n      .then(isNotOptedOut => {\n        if ((isPushEnabled || !isNotOptedOut) && this.dialog.notificationIcons === null) {\n          return MainHelper.getNotificationIcons().then((icons) => {\n            this.dialog.notificationIcons = icons;\n          });\n        } else return nothing();\n      })\n      .then(() => delay(this.options.showLauncherAfter))\n      .then(() => {\n        if (SubscriptionHelper.isUsingSubscriptionWorkaround() &&\n          notOptedOut &&\n          doNotPrompt !== true && !isPushEnabled &&\n          (OneSignal.config.autoRegister === true) && !MainHelper.isHttpPromptAlreadyShown() && !MainHelper.isUsingHttpPermissionRequest()) {\n          log.debug('Not showing notify button because popover will be shown.');\n          return nothing();\n        } else {\n          return this.launcher.show();\n        }\n      })\n      .then(() => {\n        return delay(this.options.showBadgeAfter);\n      })\n      .then(() => {\n        if (this.options.prenotify && !isPushEnabled && OneSignal._isNewVisitor) {\n          return this.message.enqueue(this.text['message.prenotify'])\n                     .then(() => this.badge.show());\n        }\n        else return nothing();\n      })\n      .then(() => this.initialized = true);\n  }\n\n  patchSafariSvgFilterBug() {\n    if (!(Browser.safari && Number(Browser.version) >= 9.1)) {\n      let bellShadow = `drop-shadow(0 2px 4px rgba(34,36,38,0.35));`;\n      let badgeShadow = `drop-shadow(0 2px 4px rgba(34,36,38,0));`;\n      let dialogShadow = `drop-shadow(0px 2px 2px rgba(34,36,38,.15));`;\n      this.graphic.setAttribute('style', `filter: ${bellShadow}; -webkit-filter: ${bellShadow};`);\n      this.badge.element.setAttribute('style', `filter: ${badgeShadow}; -webkit-filter: ${badgeShadow};`);\n      this.dialog.element.setAttribute('style', `filter: ${dialogShadow}; -webkit-filter: ${dialogShadow};`);\n    }\n    if (Browser.safari) {\n      this.badge.element.setAttribute('style', `display: none;`);\n    }\n  }\n\n  applyOffsetIfSpecified() {\n    let offset = this.options.offset;\n    if (offset) {\n      // Reset styles first\n      this.launcher.element.style.cssText = '';\n\n      if (offset.bottom) {\n        this.launcher.element.style.cssText += `bottom: ${offset.bottom};`;\n      }\n\n      if (this.options.position === 'bottom-right') {\n        if (offset.right) {\n          this.launcher.element.style.cssText += `right: ${offset.right};`;\n        }\n      }\n      else if (this.options.position === 'bottom-left') {\n        if (offset.left) {\n          this.launcher.element.style.cssText += `left: ${offset.left};`;\n        }\n      }\n    }\n  }\n\n  setCustomColorsIfSpecified() {\n    // Some common vars first\n    let dialogButton = this.dialog.element.querySelector('button.action');\n    let pulseRing = this.button.element.querySelector('.pulse-ring');\n    // Reset added styles first\n    this.graphic.querySelector('.background').style.cssText = '';\n    let foregroundElements = this.graphic.querySelectorAll('.foreground');\n    for (let i = 0; i < foregroundElements.length; i++) {\n      let element = foregroundElements[i];\n      element.style.cssText = '';\n    }\n    this.graphic.querySelector('.stroke').style.cssText = '';\n    this.badge.element.style.cssText = '';\n    if (dialogButton) {\n      dialogButton.style.cssText = '';\n      dialogButton.style.cssText = '';\n    }\n    if (pulseRing) {\n      pulseRing.style.cssText = '';\n    }\n\n    // Set new styles\n    if (this.options.colors) {\n      let colors = this.options.colors;\n      if (colors['circle.background']) {\n        this.graphic.querySelector('.background').style.cssText += `fill: ${colors['circle.background']}`;\n      }\n      if (colors['circle.foreground']) {\n        let foregroundElements = this.graphic.querySelectorAll('.foreground');\n        for (let i = 0; i < foregroundElements.length; i++) {\n          let element = foregroundElements[i];\n          element.style.cssText += `fill: ${colors['circle.foreground']}`;\n        }\n        this.graphic.querySelector('.stroke').style.cssText += `stroke: ${colors['circle.foreground']}`;\n      }\n      if (colors['badge.background']) {\n        this.badge.element.style.cssText += `background: ${colors['badge.background']}`;\n      }\n      if (colors['badge.bordercolor']) {\n        this.badge.element.style.cssText += `border-color: ${colors['badge.bordercolor']}`;\n      }\n      if (colors['badge.foreground']) {\n        this.badge.element.style.cssText += `color: ${colors['badge.foreground']}`;\n      }\n      if (dialogButton) {\n        if (colors['dialog.button.background']) {\n          this.dialog.element.querySelector('button.action').style.cssText += `background: ${colors['dialog.button.background']}`;\n        }\n        if (colors['dialog.button.foreground']) {\n          this.dialog.element.querySelector('button.action').style.cssText += `color: ${colors['dialog.button.foreground']}`;\n        }\n        if (colors['dialog.button.background.hovering']) {\n          this.addCssToHead('onesignal-background-hover-style', `#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action:hover { background: ${colors['dialog.button.background.hovering']} !important; }`);\n        }\n        if (colors['dialog.button.background.active']) {\n          this.addCssToHead('onesignal-background-active-style', `#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action:active { background: ${colors['dialog.button.background.active']} !important; }`);\n        }\n      }\n      if (pulseRing) {\n        if (colors['pulse.color']) {\n          this.button.element.querySelector('.pulse-ring').style.cssText = `border-color: ${colors['pulse.color']}`;\n        }\n      }\n    }\n  }\n\n  addCssToHead(id, css) {\n    let existingStyleDom = document.getElementById(id);\n    if (existingStyleDom)\n      return;\n    let styleDom = document.createElement('style');\n    styleDom.id = id;\n    styleDom.type = 'text/css';\n    styleDom.appendChild(document.createTextNode(css));\n    document.head.appendChild(styleDom);\n  }\n\n  /**\n   * Updates the current state to the correct new current state. Returns a promise.\n   */\n  updateState() {\n    Promise.all([\n      OneSignal.isPushNotificationsEnabled(),\n      OneSignal.getNotificationPermission()\n    ])\n    .then(([isEnabled, permission]) => {\n      this.setState(isEnabled ? Bell.STATES.SUBSCRIBED : Bell.STATES.UNSUBSCRIBED);\n      if (permission as any === 'denied') {\n        this.setState(Bell.STATES.BLOCKED);\n      }\n    });\n  }\n\n  /**\n   * Updates the current state to the specified new state.\n   * @param newState One of ['subscribed', 'unsubscribed'].\n   */\n  setState(newState, silent = false) {\n    let lastState = this.state;\n    this.state = newState;\n    if (lastState !== newState && !silent) {\n      Event.trigger(Bell.EVENTS.STATE_CHANGED, {from: lastState, to: newState});\n      // Update anything that should be changed here in the new state\n    }\n\n    // Update anything that should be reset to the same state\n  }\n\n  get container() {\n    return document.querySelector('#onesignal-bell-container');\n  }\n\n  get graphic() {\n    return this.button.element.querySelector('svg');\n  }\n\n  get launcher() {\n    if (!this._launcher)\n      this._launcher = new Launcher(this);\n    return this._launcher;\n  }\n\n  get button() {\n    if (!this._button)\n      this._button = new Button(this);\n    return this._button;\n  }\n\n  get badge() {\n    if (!this._badge)\n      this._badge = new Badge();\n    return this._badge;\n  }\n\n  get message() {\n    if (!this._message)\n      this._message = new Message(this);\n    return this._message;\n  }\n\n  get dialog() {\n    if (!this._dialog)\n      this._dialog = new Dialog(this);\n    return this._dialog;\n  }\n\n  get subscribed() {\n    return this.state === Bell.STATES.SUBSCRIBED;\n  }\n\n  get unsubscribed() {\n    return this.state === Bell.STATES.UNSUBSCRIBED;\n  }\n\n  get blocked() {\n    return this.state === Bell.STATES.BLOCKED;\n  }\n}","import {DEV_PREFIX, STAGING_PREFIX} from \"../vars\";\nimport Environment from \"../Environment\";\nimport * as log from \"loglevel\";\nimport Database from \"../services/Database\";\nimport {getConsoleStyle, contains} from \"../utils\";\nimport SubscriptionHelper from \"./SubscriptionHelper\";\n\n\nexport default class ServiceWorkerHelper {\n  static applyServiceWorkerEnvPrefixes() {\n    if (Environment.isDev()) {\n      OneSignal.SERVICE_WORKER_PATH = DEV_PREFIX + 'OneSignalSDKWorker.js';\n      OneSignal.SERVICE_WORKER_UPDATER_PATH = DEV_PREFIX + 'OneSignalSDKUpdaterWorker.js';\n    } else if (Environment.isStaging()) {\n      OneSignal.SERVICE_WORKER_PATH = STAGING_PREFIX + 'OneSignalSDKWorker.js';\n      OneSignal.SERVICE_WORKER_UPDATER_PATH = STAGING_PREFIX + 'OneSignalSDKUpdaterWorker.js';\n    }\n  }\n\n  static closeNotifications() {\n    if (navigator.serviceWorker && !SubscriptionHelper.isUsingSubscriptionWorkaround()) {\n      navigator.serviceWorker.getRegistration()\n        .then(registration => {\n          if (registration === undefined || !registration.active) {\n            throw new Error('There is no active service worker.');\n          } else if (OneSignal._channel) {\n            OneSignal._channel.emit('data', 'notification.closeall');\n          }\n        });\n    }\n  }\n\n  /*\n   Updates an existing OneSignal-only service worker if an older version exists. Does not install a new service worker if none is available or overwrite other service workers.\n   This also differs from the original update code we have below in that we do not subscribe for push after.\n   Because we're overwriting a service worker, the push token seems to \"carry over\" (this is good), whereas if we unregistered and registered a new service worker, the push token would be lost (this is bad).\n   By not subscribing for push after we register the SW, we don't have to care if notification permissions are granted or not, since users will not be prompted; this update process will be transparent.\n   This way we can update the service worker even for autoRegister: false users.\n   */\n  static updateServiceWorker() {\n\n    let updateCheckAlreadyRan = sessionStorage.getItem('onesignal-update-serviceworker-completed');\n    if (!navigator.serviceWorker || !Environment.isHost() || location.protocol !== 'https:' || updateCheckAlreadyRan == \"true\") {\n      log.debug('Skipping service worker update for existing session.');\n      return;\n    }\n\n    try {\n      sessionStorage.setItem('onesignal-update-serviceworker-completed', \"true\");\n    } catch (e) {\n      log.error(e);\n    }\n\n    return navigator.serviceWorker.getRegistration().then(function (serviceWorkerRegistration) {\n      var sw_path = \"\";\n\n      if (OneSignal.config.path)\n        sw_path = OneSignal.config.path;\n\n      if (serviceWorkerRegistration && serviceWorkerRegistration.active) {\n        // An existing service worker\n        let previousWorkerUrl = serviceWorkerRegistration.active.scriptURL;\n        if (contains(previousWorkerUrl, sw_path + OneSignal.SERVICE_WORKER_PATH)) {\n          // OneSignalSDKWorker.js was installed\n          log.debug('(Service Worker Update)', 'The main service worker is active.');\n          return Database.get('Ids', 'WORKER1_ONE_SIGNAL_SW_VERSION')\n                         .then(function (version) {\n                           // Get version of installed worker saved to IndexedDB\n                           if (version) {\n                             // If a version exists\n                             log.debug('(Service Worker Update)', `Stored service worker version v${version}.`);\n                             if (version != OneSignal._VERSION) {\n                               // If there is a different version\n                               log.debug('(Service Worker Update)', 'New service worker version exists:', OneSignal._VERSION);\n                               log.info(`Upgrading service worker (v${version} -> v${OneSignal._VERSION})`);\n                               return navigator.serviceWorker.register(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH, OneSignal.SERVICE_WORKER_PARAM);\n                             }\n                             else {\n                               // No changed service worker version\n                               log.debug('(Service Worker Update)', 'You already have the latest service worker version.');\n                               return null;\n                             }\n                           }\n                           else {\n                             // No version was saved; somehow this got overwritten\n                             // Reinstall the alternate service worker\n                             log.debug('(Service Worker Update)', 'No stored service worker version. Reinstalling the service worker.');\n                             return navigator.serviceWorker.register(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH, OneSignal.SERVICE_WORKER_PARAM);\n                           }\n\n                         });\n        }\n        else if (contains(previousWorkerUrl, sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH)) {\n          // OneSignalSDKUpdaterWorker.js was installed\n          log.debug('(Service Worker Update)', 'The alternate service worker is active.');\n          return Database.get('Ids', 'WORKER2_ONE_SIGNAL_SW_VERSION')\n                         .then(function (version) {\n                           // Get version of installed worker saved to IndexedDB\n                           if (version) {\n                             // If a version exists\n                             log.debug('(Service Worker Update)', `Stored service worker version v${version}.`);\n                             if (version != OneSignal._VERSION) {\n                               // If there is a different version\n                               log.debug('(Service Worker Update)', 'New service worker version exists:', OneSignal._VERSION);\n                               log.info(`Upgrading new service worker (v${version} -> v${OneSignal._VERSION})`);\n                               return navigator.serviceWorker.register(sw_path + OneSignal.SERVICE_WORKER_PATH, OneSignal.SERVICE_WORKER_PARAM);\n                             }\n                             else {\n                               // No changed service worker version\n                               log.debug('(Service Worker Update)', 'You already have the latest service worker version.');\n                               return null;\n                             }\n                           }\n                           else {\n                             // No version was saved; somehow this got overwritten\n                             // Reinstall the alternate service worker\n                             log.debug('(Service Worker Update)', 'No stored service worker version. Reinstalling the service worker.');\n                             return navigator.serviceWorker.register(sw_path + OneSignal.SERVICE_WORKER_PATH, OneSignal.SERVICE_WORKER_PARAM);\n                           }\n                         });\n        } else {\n          // Some other service worker not belonging to us was installed\n          // Don't install ours over it\n        }\n      }\n    });\n  }\n\n  static registerServiceWorker(full_sw_and_path) {\n    log.debug(`Called %cregisterServiceWorker(${JSON.stringify(full_sw_and_path, null, 4)})`, getConsoleStyle('code'));\n    navigator.serviceWorker.register(full_sw_and_path, OneSignal.SERVICE_WORKER_PARAM).then(SubscriptionHelper.enableNotifications, ServiceWorkerHelper.registerError);\n  }\n\n  static registerError(err) {\n    log.error(\"ServiceWorker registration\", err);\n  }\n\n  static isServiceWorkerActive(callback?) {\n    if (!('serviceWorker' in navigator)) {\n      return false;\n    }\n\n    function isServiceWorkerRegistrationActive(serviceWorkerRegistration) {\n      return serviceWorkerRegistration &&\n        serviceWorkerRegistration.active &&\n        serviceWorkerRegistration.active.state === 'activated' &&\n        (contains(serviceWorkerRegistration.active.scriptURL, 'OneSignalSDKWorker') ||\n        contains(serviceWorkerRegistration.active.scriptURL, 'OneSignalSDKUpdaterWorker'));\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!SubscriptionHelper.isUsingSubscriptionWorkaround() && !Environment.isIframe()) {\n        let isServiceWorkerActive = false;\n        if (navigator.serviceWorker.getRegistrations) {\n          navigator.serviceWorker.getRegistrations().then(serviceWorkerRegistrations => {\n            for (let serviceWorkerRegistration of serviceWorkerRegistrations) {\n              if (isServiceWorkerRegistrationActive(serviceWorkerRegistration)) {\n                isServiceWorkerActive = true;\n              }\n            }\n            if (callback) {\n              callback(isServiceWorkerActive)\n            }\n            resolve(isServiceWorkerActive);\n          });\n        } else {\n          navigator.serviceWorker.ready.then(serviceWorkerRegistration => {\n            if (isServiceWorkerRegistrationActive(serviceWorkerRegistration)) {\n              isServiceWorkerActive = true;\n            }\n            if (callback) {\n              callback(isServiceWorkerActive)\n            }\n            resolve(isServiceWorkerActive);\n          });\n        }\n      } else {\n        if (callback) {\n          callback(false)\n        }\n        resolve(false);\n      }\n    });\n  }\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 18\n// module chunks = 0","import { addCssClass, removeCssClass, contains, once } from '../utils';\nimport * as log from 'loglevel';\nimport Event from '../Event';\nimport AnimatedElement from './AnimatedElement';\nimport * as objectAssign from 'object-assign';\n\n\nexport default class ActiveAnimatedElement extends AnimatedElement {\n\n  /**\n   * Abstracts common DOM operations like hiding and showing transitionable elements into chainable promises.\n   * @param selector {string} The CSS selector of the element.\n   * @param showClass {string} The CSS class name to add to show the element.\n   * @param hideClass {string} The CSS class name to remove to hide the element.\n   * @param activeClass {string} The CSS class name to add to activate the element.\n   * @param inactiveClass {string} The CSS class name to remove to inactivate the element.\n   * @param state {string} The current state of the element, defaults to 'shown'.\n   * @param activeState {string} The current state of the element, defaults to 'active'.\n   * @param targetTransitionEvents {string} An array of properties (e.g. ['transform', 'opacity']) to look for on transitionend of show() and hide() to know the transition is complete. As long as one matches, the transition is considered complete.\n   * @param nestedContentSelector {string} The CSS selector targeting the nested element within the current element. This nested element will be used for content getters and setters.\n   */\n  constructor(public selector: string,\n              public showClass: string,\n              public hideClass: string,\n              public activeClass: string,\n              public inactiveClass: string,\n              public state = 'shown',\n              public activeState = 'active',\n              public targetTransitionEvents = ['opacity', 'transform'],\n              public nestedContentSelector = null) {\n    super(selector, showClass, hideClass, state, targetTransitionEvents);\n  }\n\n  /**\n   * Asynchronously activates an element by applying its {activeClass} CSS class.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n  activate() {\n    if (!this.inactive || !this.shown) {\n      return Promise.resolve(this);\n    }\n    else return new Promise((resolve) => {\n      this.activeState = 'activating';\n      Event.trigger(ActiveAnimatedElement.EVENTS.ACTIVATING, this);\n      if (this.inactiveClass)\n        removeCssClass(this.element, this.inactiveClass);\n      if (this.activeClass)\n        addCssClass(this.element, this.activeClass);\n      if (this.shown) {\n        if (this.targetTransitionEvents.length == 0) {\n          return resolve(this);\n        } else {\n          var timerId = setTimeout(() => {\n            log.debug(`Element did not completely activate (state: ${this.state}, activeState: ${this.activeState}).`)\n          }, this.transitionCheckTimeout);\n          once(this.element, 'transitionend', (event, destroyListenerFn) => {\n            if (event.target === this.element &&\n              contains(this.targetTransitionEvents, event.propertyName)) {\n              clearTimeout(timerId);\n              // Uninstall the event listener for transitionend\n              destroyListenerFn();\n              this.activeState = 'active';\n              Event.trigger(ActiveAnimatedElement.EVENTS.ACTIVE, this);\n              return resolve(this);\n            }\n          }, true);\n        }\n      }\n      else {\n        log.debug(`Ending activate() transition (alternative).`);\n        this.activeState = 'active';\n        Event.trigger(ActiveAnimatedElement.EVENTS.ACTIVE, this);\n        return resolve(this);\n      }\n    });\n  }\n\n  /**\n   * Asynchronously activates an element by applying its {activeClass} CSS class.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n  inactivate() {\n    if (!this.active) {\n      return Promise.resolve(this);\n    }\n    else return new Promise((resolve) => {\n      this.activeState = 'inactivating';\n      Event.trigger(ActiveAnimatedElement.EVENTS.INACTIVATING, this);\n      if (this.activeClass)\n        removeCssClass(this.element, this.activeClass);\n      if (this.inactiveClass)\n        addCssClass(this.element, this.inactiveClass);\n      if (this.shown) {\n        if (this.targetTransitionEvents.length == 0) {\n          return resolve(this);\n        } else {\n          var timerId = setTimeout(() => {\n            log.debug(`Element did not completely inactivate (state: ${this.state}, activeState: ${this.activeState}).`)\n          }, this.transitionCheckTimeout);\n          once(this.element, 'transitionend', (event, destroyListenerFn) => {\n            if (event.target === this.element &&\n              contains(this.targetTransitionEvents, event.propertyName)) {\n              clearTimeout(timerId);\n              // Uninstall the event listener for transitionend\n              destroyListenerFn();\n              this.activeState = 'inactive';\n              Event.trigger(ActiveAnimatedElement.EVENTS.INACTIVE, this);\n              return resolve(this);\n            }\n          }, true);\n        }\n      }\n      else {\n        this.activeState = 'inactive';\n        Event.trigger(ActiveAnimatedElement.EVENTS.INACTIVE, this);\n        return resolve(this);\n      }\n    });\n  }\n\n  /**\n   * Asynchronously waits for an element to finish transitioning to being active.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n  waitUntilActive() {\n    if (this.active)\n      return Promise.resolve(this);\n    else return new Promise((resolve) => {\n      OneSignal.once(ActiveAnimatedElement.EVENTS.ACTIVE, (event) => {\n        if (event === this) {\n          return resolve(this);\n        }\n      }, true);\n    });\n  }\n\n  /**\n   * Asynchronously waits for an element to finish transitioning to being inactive.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n  waitUntilInactive() {\n    if (this.inactive)\n      return Promise.resolve(this);\n    else return new Promise((resolve) => {\n      OneSignal.once(ActiveAnimatedElement.EVENTS.INACTIVE, (event) => {\n        if (event === this) {\n          return resolve(this);\n        }\n      }, true);\n    });\n  }\n\n  static get EVENTS() {\n    return objectAssign({}, AnimatedElement.EVENTS, {\n      ACTIVATING: 'activeAnimatedElementActivating',\n      ACTIVE: 'activeAnimatedElementActive',\n      INACTIVATING: 'activeAnimatedElementInactivating',\n      INACTIVE: 'activeAnimatedElementInactive',\n    });\n  }\n\n  /**\n   * Synchronously returns the last known state of the element.\n   * @returns {boolean} Returns true if the element was last known to be transitioning to being activated.\n   */\n  get activating() {\n    return this.activeState === 'activating';\n  }\n\n  /**\n   * Synchronously returns the last known state of the element.\n   * @returns {boolean} Returns true if the element was last known to be already active.\n   */\n  get active() {\n    return this.activeState === 'active';\n  }\n\n  /**\n   * Synchronously returns the last known state of the element.\n   * @returns {boolean} Returns true if the element was last known to be transitioning to inactive.\n   */\n  get inactivating() {\n    return this.activeState === 'inactivating';\n  }\n\n  /**\n   * Synchronously returns the last known state of the element.\n   * @returns {boolean} Returns true if the element was last known to be already inactive.\n   */\n  get inactive() {\n    return this.activeState === 'inactive';\n  }\n}\n","import { addCssClass, removeCssClass, contains, once } from '../utils';\nimport * as log from 'loglevel';\nimport Event from '../Event'\n\n\n\nexport default class AnimatedElement {\n\n  /**\n   * Abstracts common DOM operations like hiding and showing transitionable elements into chainable promises.\n   * @param selector {string} The CSS selector of the element.\n   * @param showClass {string} The CSS class name to add to show the element.\n   * @param hideClass {string} The CSS class name to remove to hide the element.\n   * @param state {string} The current state of the element, defaults to 'shown'.\n   * @param targetTransitionEvents {string} An array of properties (e.g. ['transform', 'opacity']) to look for on transitionend of show() and hide() to know the transition is complete. As long as one matches, the transition is considered complete.\n   * @param nestedContentSelector {string} The CSS selector targeting the nested element within the current element. This nested element will be used for content getters and setters.\n   */\n  constructor(public selector: string,\n              public showClass: string,\n              public hideClass: string,\n              public state = 'shown',\n              public targetTransitionEvents = ['opacity', 'transform'],\n              public nestedContentSelector: string = null,\n              public transitionCheckTimeout = 500) {\n  }\n\n  /**\n   * Asynchronously shows an element by applying its {showClass} CSS class.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n  show() {\n    if (!this.hidden) {\n      return Promise.resolve(this);\n    }\n    else return new Promise((resolve) => {\n      var self = this;\n      this.state = 'showing';\n      Event.trigger(AnimatedElement.EVENTS.SHOWING, this);\n      if (this.hideClass)\n        removeCssClass(this.element, this.hideClass);\n      if (this.showClass)\n        addCssClass(this.element, this.showClass);\n      if (this.targetTransitionEvents.length == 0) {\n        return resolve(this);\n      } else {\n        var timerId = setTimeout(() => {\n          log.debug(`Element did not completely show (state: ${this.state}).`)\n        }, this.transitionCheckTimeout);\n        once(this.element, 'transitionend', (event, destroyListenerFn) => {\n          if (event.target === this.element &&\n            contains(this.targetTransitionEvents, event.propertyName)) {\n            clearTimeout(timerId);\n            // Uninstall the event listener for transitionend\n            destroyListenerFn();\n            this.state = 'shown';\n            Event.trigger(AnimatedElement.EVENTS.SHOWN, this);\n            return resolve(this);\n          }\n        }, true);\n      }\n    });\n  }\n\n  /**\n   * Asynchronously hides an element by applying its {hideClass} CSS class.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n  hide() {\n    if (!this.shown) {\n      return Promise.resolve(this);\n    }\n    else return new Promise((resolve) => {\n      this.state = 'hiding';\n      Event.trigger(AnimatedElement.EVENTS.HIDING, this);\n      if (this.showClass)\n        removeCssClass(this.element, this.showClass);\n      if (this.hideClass)\n        addCssClass(this.element, this.hideClass);\n      if (this.targetTransitionEvents.length == 0) {\n        return resolve(this);\n      } else {\n        once(this.element, 'transitionend', (event, destroyListenerFn) => {\n          var timerId = setTimeout(() => {\n            log.debug(`Element did not completely hide (state: ${this.state}).`)\n          }, this.transitionCheckTimeout);\n          if (event.target === this.element &&\n            contains(this.targetTransitionEvents, event.propertyName)) {\n            clearTimeout(timerId);\n            // Uninstall the event listener for transitionend\n            destroyListenerFn();\n            this.state = 'hidden';\n            Event.trigger(AnimatedElement.EVENTS.HIDDEN, this);\n            return resolve(this);\n          }\n        }, true);\n      }\n    });\n  }\n\n  /**\n   * Asynchronously waits for an element to finish transitioning to being shown.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n  waitUntilShown() {\n    if (this.state === 'shown')\n      return Promise.resolve(this);\n    else return new Promise((resolve) => {\n      OneSignal.once(AnimatedElement.EVENTS.SHOWN, (event) => {\n        var self = this;\n        if (event === this) {\n          return resolve(this);\n        }\n      }, true);\n    });\n  }\n\n  /**\n   * Asynchronously waits for an element to finish transitioning to being hidden.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n  waitUntilHidden() {\n    if (this.state === 'hidden')\n      return Promise.resolve(this);\n    else return new Promise((resolve) => {\n      OneSignal.once(AnimatedElement.EVENTS.HIDDEN, (event) => {\n        if (event === this) {\n          return resolve(this);\n        }\n      }, true);\n    });\n  }\n\n  static get EVENTS() {\n    return {\n      SHOWING: 'animatedElementShowing',\n      SHOWN: 'animatedElementShown',\n      HIDING: 'animatedElementHiding',\n      HIDDEN: 'animatedElementHidden',\n    };\n  }\n\n  /**\n   * Returns the native element's innerHTML property.\n   * @returns {string} Returns the native element's innerHTML property.\n   */\n  get content() {\n    if (this.nestedContentSelector)\n      return this.element.querySelector(this.nestedContentSelector).innerHTML;\n    else\n      return this.element.innerHTML;\n  }\n\n  /**\n   * Sets the native element's innerHTML property.\n   * @param value {string} The HTML to set to the element.\n   */\n  set content(value) {\n    if (this.nestedContentSelector) {\n      this.element.querySelector(this.nestedContentSelector).innerHTML = value;\n    }\n    else {\n      this.element.innerHTML = value;\n    }\n  }\n\n\n  /**\n   * Returns the native {Element} via document.querySelector().\n   * @returns {Element} Returns the native {Element} via document.querySelector().\n   */\n  get element() {\n    return document.querySelector(this.selector);\n  }\n\n  /* States an element can be in */\n\n  /**\n   * Synchronously returns the last known state of the element.\n   * @returns {boolean} Returns true if the element was last known to be transitioning to being shown.\n   */\n  get showing() {\n    return this.state === 'showing';\n  }\n\n  /**\n   * Synchronously returns the last known state of the element.\n   * @returns {boolean} Returns true if the element was last known to be already shown.\n   */\n  get shown() {\n    return this.state === 'shown';\n  }\n\n  /**\n   * Synchronously returns the last known state of the element.\n   * @returns {boolean} Returns true if the element was last known to be transitioning to hiding.\n   */\n  get hiding() {\n    return this.state === 'hiding';\n  }\n\n  /**\n   * Synchronously returns the last known state of the element.\n   * @returns {boolean} Returns true if the element was last known to be already hidden.\n   */\n  get hidden() {\n    return this.state === 'hidden';\n  }\n}","import { DEV_HOST, DEV_FRAME_HOST, PROD_HOST, API_URL, STAGING_FRAME_HOST, DEV_PREFIX, STAGING_PREFIX } from '../vars';\nimport Environment from '../Environment';\nimport OneSignalApi from '../OneSignalApi';\nimport * as log from 'loglevel';\nimport LimitStore from '../LimitStore';\nimport Event from \"../Event\";\nimport Database from '../services/Database';\nimport * as Browser from 'bowser';\nimport {\n  getConsoleStyle, contains, normalizeSubdomain, getDeviceTypeForBrowser, capitalize,\n  awaitOneSignalInitAndSupported\n} from '../utils';\nimport * as objectAssign from 'object-assign';\nimport * as EventEmitter from 'wolfy87-eventemitter';\nimport * as heir from 'heir';\nimport * as swivel from 'swivel';\nimport Postmam from '../Postmam';\nimport * as Cookie from 'js-cookie';\nimport HttpModal from \"../http-modal/HttpModal\";\nimport Bell from \"../bell/Bell\";\nimport SubscriptionHelper from \"./SubscriptionHelper\";\nimport EventHelper from \"./EventHelper\";\nimport { Subscription } from '../models/Subscription';\ndeclare var OneSignal: any;\n\nexport default class TestHelper {\n  /**\n   * Just for debugging purposes, removes the coookie from hiding the native prompt.\n   * @returns {*}\n   */\n  static unmarkHttpsNativePromptDismissed() {\n    if (Cookie.remove('onesignal-notification-prompt')) {\n      log.debug('OneSignal: Removed the native notification prompt dismissed cookie.')\n    } else {\n      log.debug('OneSignal: Cookie not marked.');\n    }\n  }\n\n  /**\n   * Creates a session cookie to note that the user does not want to be disturbed.\n   */\n\n  static async markHttpsNativePromptDismissed() {\n    /**\n     * Note: The cookie must be stored both on subdomain.onesignal.com and the main site.\n     *\n     * When checking whether the prompt was previously dismissed, certain code cannot be asynchronous otherwise the browser\n     * treats it like a blocked popup, so Cookies are synchronous while IndexedDb access / PostMessage querying across origins are\n     * both asynchronous.\n     */\n    if (SubscriptionHelper.isUsingSubscriptionWorkaround()) {\n      await new Promise((resolve, reject) => {\n        OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.MARK_PROMPT_DISMISSED, {}, reply => {\n          if (reply.data === OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE) {\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n    }\n    let dismissCount = await Database.get<number>('Options', 'promptDismissCount');\n    console.log(`(${Environment.getEnv()}) dismissCount: ${dismissCount}`)\n    if (!dismissCount) {\n      dismissCount = 0;\n    }\n    /**\n     * This will be run twice for HTTP sites, since we share IndexedDb, so we don't run it for HTTP sites.\n     */\n    if (!SubscriptionHelper.isUsingSubscriptionWorkaround()) {\n      dismissCount += 1;\n    }\n\n    let dismissDays = 3;\n    if (dismissCount == 2) {\n      dismissDays = 7;\n    } else if (dismissCount > 2) {\n      dismissDays = 30;\n    }\n    log.debug(`(${Environment.getEnv()}) OneSignal: User dismissed the native notification prompt; reprompt after ${dismissDays} days.`);\n    await Database.put('Options', { key: 'promptDismissCount', value: dismissCount });\n    return Cookie.set('onesignal-notification-prompt', 'dismissed', {\n      // In 8 hours, or 1/3 of the day\n      expires: dismissDays\n    });\n  }\n}","module.exports = function atoa (a, n) { return Array.prototype.slice.call(a, n); }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/atoa/atoa.js\n// module id = 22\n// module chunks = 0","/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = global.fetch;\n}.call(global));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/imports-loader?this=>global!./~/exports-loader?global.fetch!./~/whatwg-fetch/fetch.js\n// module id = 23\n// module chunks = 0","/*!\n * JavaScript Cookie v2.1.3\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\treturn (document.cookie = [\n\t\t\t\t\tkey, '=', value,\n\t\t\t\t\tattributes.expires ? '; expires=' + attributes.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n\t\t\t\t\tattributes.path ? '; path=' + attributes.path : '',\n\t\t\t\t\tattributes.domain ? '; domain=' + attributes.domain : '',\n\t\t\t\t\tattributes.secure ? '; secure' : ''\n\t\t\t\t].join(''));\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/js-cookie/src/js.cookie.js\n// module id = 24\n// module chunks = 0","'use strict';\nif (typeof navigator === \"undefined\") {\n} else {\n  var page = require('./page');\n  var worker = require('./worker');\n  var api;\n\n  if ('serviceWorker' in navigator) {\n    api = page();\n  } else if ('clients' in self) {\n    api = worker();\n  } else {\n    api = {\n      on: complain,\n      once: complain,\n      off: complain,\n      emit: complain,\n      broadcast: complain\n    };\n  }\n\n  function complain () {\n    throw new Error('Swivel couldn\\'t detect ServiceWorker support. Please feature detect before using Swivel in your web pages!');\n  }\n\n  module.exports = api;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/swivel/swivel.js\n// module id = 25\n// module chunks = 0","import { guid, contains } from './utils';\nimport * as EventEmitter from 'wolfy87-eventemitter';\nimport * as heir from 'heir';\nimport Environment from './Environment';\nimport { DEV_FRAME_HOST, STAGING_FRAME_HOST } from './vars';\nimport * as objectAssign from 'object-assign';\nimport * as log from 'loglevel';\n\n\n\n/**\n * Establishes a cross-domain MessageChannel between the current browsing context (this page) and another (an iFrame, popup, or parent page).\n */\nexport default class Postmam {\n\n  static get HANDSHAKE_MESSAGE() {\n    return \"onesignal.postmam.handshake\";\n  }\n\n  static get CONNECTED_MESSAGE() {\n    return \"onesignal.postmam.connected\";\n  }\n\n  public channel: MessageChannel;\n  public messagePort: MessagePort;\n  public isListening: boolean;\n  public isConnected: boolean;\n  public replies: any;\n\n  /**\n   * Initializes Postmam with settings but does not establish a channel or set up any message listeners.\n   * @param windowReference The window to postMessage() the initial MessageChannel port to.\n   * @param sendToOrigin The origin that will receive the initial postMessage with the transferred message channel port object.\n   * @param receiveFromOrigin The origin to allow incoming messages from. If messages do not come from this origin they will be discarded. Only affects the initial handshake.\n   * @remarks The initiating (client) page must call this after the page has been loaded so that the other page has a chance to receive the initial handshake message. The receiving (server) page must set up a message listener to catch the initial handshake message.\n   */\n  constructor(public windowReference: any,\n              public sendToOrigin: string,\n              public receiveFromOrigin: string) {\n    if (!window || !window.postMessage) {\n      throw new Error('Must pass in a valid window reference supporting postMessage():' + windowReference);\n    }\n    if (!sendToOrigin || !receiveFromOrigin) {\n      throw new Error('Invalid origin. Must be set.');\n    }\n    heir.merge(this, new EventEmitter());\n    this.channel = new MessageChannel();\n    this.messagePort = null;\n    this.isListening = false;\n    this.isConnected = false;\n    this.replies = {};\n  }\n\n  /**\n   * Opens a message event listener to listen for a Postmam handshake from another browsing context. This listener is closed as soon as the connection is established.\n   */\n  listen() {\n    log.trace('(Postmam) Called listen().');\n    if (this.isListening) {\n      log.debug('(Postmam) Already listening for Postmam connections.');\n      return;\n    }\n    if (!Environment.isBrowser()) {\n      return;\n    }\n    this.isListening = true;\n    log.debug('(Postmam) Listening for Postmam connections.', this);\n    // One of the messages will contain our MessageChannel port\n    window.addEventListener('message', this.onWindowMessagePostmanConnectReceived.bind(this));\n  }\n\n  startPostMessageReceive() {\n    window.addEventListener('message', this.onWindowPostMessageReceived.bind(this));\n  }\n\n  stopPostMessageReceive() {\n    window.removeEventListener('message', this.onWindowPostMessageReceived);\n  }\n\n  destroy() {\n    this.stopPostMessageReceive();\n    (this as any).removeEvent();\n  }\n\n  onWindowPostMessageReceived(e) {\n    // Discard messages from unexpected origins; messages come frequently from other origins\n    if (!this.isSafeOrigin(e.origin)) {\n      // log.debug(`(Postmam) Discarding message because ${e.origin} is not an allowed origin:`, e.data)\n      return;\n    }\n    //log.debug(`(Postmam) (onWindowPostMessageReceived) (${Environment.getEnv()}):`, e);\n    let { id: messageId, command: messageCommand, data: messageData, source: messageSource } = e.data;\n    if (messageCommand === Postmam.CONNECTED_MESSAGE) {\n      (this as any).emit('connect');\n      this.isConnected = true;\n      return;\n    }\n    let messageBundle = {\n      id: messageId,\n      command: messageCommand,\n      data: messageData,\n      source: messageSource\n    };\n    let messageBundleWithReply = objectAssign({\n      reply: this.reply.bind(this, messageBundle)\n    }, messageBundle);\n    if (this.replies.hasOwnProperty(messageId)) {\n      log.info('(Postmam) This message is a reply.');\n      let replyFn = this.replies[messageId].bind(window);\n      let replyFnReturnValue = replyFn(messageBundleWithReply);\n      if (replyFnReturnValue === false) {\n        delete this.replies[messageId];\n      }\n    } else {\n      (this as any).emit(messageCommand, messageBundleWithReply);\n    }\n  }\n\n  onWindowMessagePostmanConnectReceived(e) {\n    log.trace(`(Postmam) (${Environment.getEnv()}) Window postmessage for Postman connect received:`, e);\n    // Discard messages from unexpected origins; messages come frequently from other origins\n    if (!this.isSafeOrigin(e.origin)) {\n      // log.debug(`(Postmam) Discarding message because ${e.origin} is not an allowed origin:`, e.data)\n      return;\n    }\n    var { handshake } = e.data;\n    if (handshake !== Postmam.HANDSHAKE_MESSAGE) {\n      log.info('(Postmam) Got a postmam message, but not our expected handshake:', e.data);\n      // This was not our expected handshake message\n      return;\n    } else {\n      log.info('(Postmam) Got our expected Postmam handshake message (and connecting...):', e.data);\n      // This was our expected handshake message\n      // Remove our message handler so we don't get spammed with cross-domain messages\n      window.removeEventListener('message', this.onWindowMessagePostmanConnectReceived);\n      // Get the message port\n      this.messagePort = e.ports[0];\n      this.messagePort.addEventListener('message', this.onMessageReceived.bind(this), false);\n      log.info('(Postmam) Removed previous message event listener for handshakes, replaced with main message listener.');\n      this.messagePort.start();\n      this.isConnected = true;\n      log.info(`(Postmam) (${Environment.getEnv()}) Connected.`);\n      this.message(Postmam.CONNECTED_MESSAGE);\n      (this as any).emit('connect');\n    }\n  }\n\n  /**\n   * Establishes a message channel with a listening Postmam on another browsing context.\n   * @remarks Only call this if listen() is called on another page.\n   */\n  connect() {\n    log.info(`(Postmam) (${Environment.getEnv()}) Establishing a connection to ${this.sendToOrigin}.`);\n    this.messagePort = this.channel.port1;\n    this.messagePort.addEventListener('message', this.onMessageReceived.bind(this), false);\n    this.messagePort.start();\n    this.windowReference.postMessage({\n      handshake: Postmam.HANDSHAKE_MESSAGE\n    }, this.sendToOrigin, [this.channel.port2]);\n  }\n\n  onMessageReceived(e) {\n    //log.debug(`(Postmam) (${Environment.getEnv()}):`, e.data);\n    if (!e.data) {\n      log.debug(`(${Environment.getEnv()}) Received an empty Postmam message:`, e);\n      return;\n    }\n    let { id: messageId, command: messageCommand, data: messageData, source: messageSource } = e.data;\n    if (messageCommand === Postmam.CONNECTED_MESSAGE) {\n      (this as any).emit('connect');\n      this.isConnected = true;\n      return;\n    }\n    let messageBundle = {\n      id: messageId,\n      command: messageCommand,\n      data: messageData,\n      source: messageSource\n    };\n    let messageBundleWithReply = objectAssign({\n      reply: this.reply.bind(this, messageBundle)\n    }, messageBundle);\n    if (this.replies.hasOwnProperty(messageId)) {\n      let replyFn = this.replies[messageId].bind(window);\n      let replyFnReturnValue = replyFn(messageBundleWithReply);\n      if (replyFnReturnValue === false) {\n        delete this.replies[messageId];\n      }\n    } else {\n      (this as any).emit(messageCommand, messageBundleWithReply);\n    }\n  }\n\n  reply(originalMessageBundle, data, onReply) {\n    const messageBundle = {\n      id: originalMessageBundle.id,\n      command: originalMessageBundle.command,\n      data: data,\n      source: Environment.getEnv(),\n      isReply: true\n    };\n    if (typeof onReply === 'function') {\n      this.replies[messageBundle.id] = onReply;\n    }\n    this.messagePort.postMessage(messageBundle);\n  }\n\n  /**\n   * Sends via window.postMessage.\n   */\n  postMessage(command, data, onReply) {\n    if (!command || command == '') {\n      throw new Error(\"(Postmam) Postmam command must not be empty.\");\n    }\n    if (typeof data === 'function') {\n      log.debug('You passed a function to data, did you mean to pass null?');\n      return;\n    }\n    const messageBundle = {\n      id: guid(),\n      command: command,\n      data: data,\n      source: Environment.getEnv()\n    };\n    if (typeof onReply === 'function') {\n      this.replies[messageBundle.id] = onReply;\n    }\n    this.windowReference.postMessage(messageBundle, '*');\n  }\n\n  /**\n   * Sends via MessageChannel.port.postMessage\n   */\n  message(command, data?, onReply?) {\n    if (!command || command == '') {\n      throw new Error(\"(Postmam) Postmam command must not be empty.\");\n    }\n    if (typeof data === 'function') {\n      log.debug('You passed a function to data, did you mean to pass null?')\n      return;\n    }\n    const messageBundle = {\n      id: guid(),\n      command: command,\n      data: data,\n      source: Environment.getEnv()\n    };\n    if (typeof onReply === 'function') {\n      this.replies[messageBundle.id] = onReply;\n    }\n    this.messagePort.postMessage(messageBundle);\n  }\n\n  /**\n   * If the provided Site URL on the dashboard, which restricts the post message origin, uses the https:// protocol\n   * Then relax the postMessage restriction to also allow the http:// protocol for the same domain.\n   */\n  generateSafeOrigins(origin) {\n    let otherAllowedOrigins = [origin];\n    try {\n      let url = new URL(origin);\n      let host = url.host.replace('www.', '');\n      if (url.protocol === 'https:') {\n        otherAllowedOrigins.push(`https://${host}`);\n        otherAllowedOrigins.push(`https://www.${host}`);\n      }\n      else if (url.protocol === 'http:') {\n        otherAllowedOrigins.push(`http://${host}`);\n        otherAllowedOrigins.push(`http://www.${host}`);\n        otherAllowedOrigins.push(`https://${host}`);\n        otherAllowedOrigins.push(`https://www.${host}`);\n      }\n    } catch (ex) {\n      // Invalid URL: Users can enter '*' or 'https://*.google.com' which is invalid.\n    }\n    return otherAllowedOrigins;\n  }\n\n  isSafeOrigin(messageOrigin) {\n    if (!OneSignal.config) {\n      var subdomain = \"test\";\n    } else {\n      var subdomain = OneSignal.config.subdomainName as string;\n    }\n\n    const otherAllowedOrigins = this.generateSafeOrigins(this.receiveFromOrigin);\n\n    return (// messageOrigin === '' || TODO: See if messageOrigin can be blank\n            messageOrigin === 'https://onesignal.com' ||\n            messageOrigin === `https://${subdomain || ''}.onesignal.com` ||\n            (Environment.isDev() && messageOrigin === DEV_FRAME_HOST) ||\n            (Environment.isStaging() && messageOrigin === STAGING_FRAME_HOST) ||\n            this.receiveFromOrigin === '*' ||\n            contains(otherAllowedOrigins, messageOrigin));\n  }\n}","import { getConsoleStyle, delay, nothing, decodeHtmlEntities } from '../utils';\nimport * as log from 'loglevel';\nimport AnimatedElement from './AnimatedElement';\nimport Bell from './Bell';\n\n\nexport default class Message extends AnimatedElement {\n\n  public bell: any;\n  public contentType: string;\n  public queued: any;\n\n  constructor(bell) {\n    super('.onesignal-bell-launcher-message', 'onesignal-bell-launcher-message-opened', null, 'hidden', ['opacity', 'transform'], '.onesignal-bell-launcher-message-body');\n\n    this.bell = bell;\n    this.contentType = '';\n    this.queued = [];\n  }\n\n  static get TIMEOUT() {\n    return 2500;\n  }\n\n  static get TYPES() {\n    return {\n      TIP: 'tip', // Appears on button hover, disappears on button endhover\n      MESSAGE: 'message', // Appears manually for a specified duration, site visitor cannot control its display. Messages override tips\n      QUEUED: 'queued' // This message was a user-queued message\n    };\n  }\n\n  display(type, content, duration = 0) {\n    log.debug(`Calling %cdisplay(${type}, ${content}, ${duration}).`, getConsoleStyle('code'));\n    return (this.shown ? this.hide() : nothing())\n      .then(() => {\n        this.content = decodeHtmlEntities(content);\n        this.contentType = type;\n      })\n      .then(() => {\n        return this.show();\n      })\n      .then(() => delay(duration))\n      .then(() => {\n        return this.hide();\n      })\n      .then(() => {\n        // Reset back to normal content type so stuff can show a gain\n        this.content = this.getTipForState();\n        this.contentType = 'tip';\n      });\n  }\n\n  getTipForState() {\n    if (this.bell.state === Bell.STATES.UNSUBSCRIBED)\n      return this.bell.text['tip.state.unsubscribed'];\n    else if (this.bell.state === Bell.STATES.SUBSCRIBED)\n      return this.bell.text['tip.state.subscribed'];\n    else if (this.bell.state === Bell.STATES.BLOCKED)\n      return this.bell.text['tip.state.blocked'];\n  }\n\n  enqueue(message, notify = false) {\n    this.queued.push(decodeHtmlEntities(message));\n    return new Promise((resolve) => {\n      if (this.bell.badge.shown) {\n        this.bell.badge.hide()\n          .then(() => this.bell.badge.increment())\n          .then(() => this.bell.badge.show())\n          .then(resolve);\n      } else {\n        this.bell.badge.increment();\n        if (this.bell.initialized)\n          this.bell.badge.show().then(resolve)\n        else resolve();\n      }\n    });\n  }\n\n  dequeue(message) {\n    let dequeuedMessage = this.queued.pop(message);\n    return new Promise((resolve) => {\n      if (this.bell.badge.shown) {\n        this.bell.badge.hide()\n          .then(() => this.bell.badge.decrement())\n          .then((numMessagesLeft) => {\n            if (numMessagesLeft > 0) {\n              return this.bell.badge.show()\n            } else {\n              return Promise.resolve(this);\n            }\n          })\n          .then(resolve(dequeuedMessage));\n      } else {\n        this.bell.badge.decrement();\n        resolve(dequeuedMessage);\n      }\n    });\n  }\n}","import OneSignalError from \"./OneSignalError\";\r\n\r\n\r\nexport default class AlreadySubscribedError extends OneSignalError {\r\n  constructor() {\r\n    super('This operation can only be performed when the user is not subscribed.');\r\n  }\r\n}","import OneSignalError from \"./OneSignalError\";\r\n\r\n\r\nexport default class PermissionMessageDismissedError extends OneSignalError {\r\n  constructor() {\r\n    super('The permission message was previously dismissed.');\r\n  }\r\n}","import OneSignalError from \"./OneSignalError\";\r\n\r\n\r\nexport default class PushPermissionNotGrantedError extends OneSignalError {\r\n  constructor() {\r\n    super(`The push permission was not granted.`);\r\n  }\r\n}","import {DEV_FRAME_HOST} from \"../vars\";\r\nimport Environment from \"../Environment\";\r\nimport * as log from \"loglevel\";\r\nimport LimitStore from \"../LimitStore\";\r\nimport Event from \"../Event\";\r\nimport Database from \"../services/Database\";\r\nimport * as Browser from \"bowser\";\r\nimport {getConsoleStyle, once} from \"../utils\";\r\nimport Postmam from \"../Postmam\";\r\nimport MainHelper from \"./MainHelper\";\r\nimport ServiceWorkerHelper from \"./ServiceWorkerHelper\";\r\nimport SubscriptionHelper from \"./SubscriptionHelper\";\r\nimport EventHelper from \"./EventHelper\";\r\nimport {InvalidStateError, InvalidStateReason} from \"../errors/InvalidStateError\";\r\nimport AlreadySubscribedError from \"../errors/AlreadySubscribedError\";\r\nimport ServiceUnavailableError from \"../errors/ServiceUnavailableError\";\r\nimport PermissionMessageDismissedError from '../errors/PermissionMessageDismissedError';\r\n\r\ndeclare var OneSignal: any;\r\n\r\n\r\nexport default class InitHelper {\r\n\r\n  static storeInitialValues() {\r\n    return Promise.all([\r\n                         OneSignal.isPushNotificationsEnabled(),\r\n                         OneSignal.getNotificationPermission(),\r\n                         OneSignal.getUserId(),\r\n                         OneSignal.isOptedOut()\r\n                       ])\r\n                  .then(([isPushEnabled, notificationPermission, userId, isOptedOut]) => {\r\n                    LimitStore.put('subscription.optedOut', isOptedOut);\r\n                    return Promise.all([\r\n                                         Database.put('Options', { key: 'isPushEnabled', value: isPushEnabled }),\r\n                                         Database.put('Options', {\r\n                                           key: 'notificationPermission',\r\n                                           value: notificationPermission\r\n                                         })\r\n                                       ]);\r\n                  });\r\n  }\r\n\r\n  /**\r\n   * This event occurs after init.\r\n   * For HTTPS sites, this event is called after init.\r\n   * For HTTP sites, this event is called after the iFrame is created, and a message is received from the iFrame signaling cross-origin messaging is ready.\r\n   * @private\r\n   */\r\n  static async onSdkInitialized() {\r\n    // Store initial values of notification permission, user ID, and manual subscription status\r\n    // This is done so that the values can be later compared to see if anything changed\r\n    // This is done here for HTTPS, it is done after the call to _addSessionIframe in sessionInit for HTTP sites, since the iframe is needed for communication\r\n    InitHelper.storeInitialValues();\r\n    InitHelper.installNativePromptPermissionChangedHook();\r\n\r\n    if (navigator.serviceWorker &&\r\n        window.location.protocol === 'https:' &&\r\n        !(await SubscriptionHelper.hasInsecureParentOrigin())) {\r\n          navigator.serviceWorker.getRegistration()\r\n            .then(registration => {\r\n              if (registration && registration.active) {\r\n                MainHelper.establishServiceWorkerChannel(registration);\r\n              }\r\n            })\r\n            .catch(e => {\r\n              if (e.code === 9) { // Only secure origins are allowed\r\n                if (location.protocol === 'http:' || Environment.isIframe()) {\r\n                  // This site is an HTTP site with an <iframe>\r\n                  // We can no longer register service workers since Chrome 42\r\n                  log.debug(`Expected error getting service worker registration on ${location.href}:`, e);\r\n                }\r\n              } else {\r\n                log.error(`Error getting Service Worker registration on ${location.href}:`, e);\r\n              }\r\n            });\r\n    }\r\n\r\n    MainHelper.showNotifyButton();\r\n\r\n    if (Browser.safari && OneSignal.config.autoRegister === false) {\r\n      OneSignal.isPushNotificationsEnabled(enabled => {\r\n        if (enabled) {\r\n          /*  The user is on Safari and *specifically* set autoRegister to false.\r\n           The normal case for a user on Safari is to not set anything related to autoRegister.\r\n           With autoRegister false, we don't automatically show the permission prompt on Safari.\r\n           However, if push notifications are already enabled, we're actually going to make the same\r\n           subscribe call and register the device token, because this will return the same device\r\n           token and allow us to update the user's session count and last active.\r\n           For sites that omit autoRegister, autoRegister is assumed to be true. For Safari, the session count\r\n           and last active is updated from this registration call.\r\n           */\r\n          InitHelper.sessionInit({__sdkCall: true});\r\n        }\r\n      });\r\n    }\r\n\r\n    if (SubscriptionHelper.isUsingSubscriptionWorkaround() && !MainHelper.isContinuingBrowserSession()) {\r\n      /*\r\n       The user is on an HTTP site and they accessed this site by opening a new window or tab (starting a new\r\n       session). This means we should increment their session_count and last_active by calling\r\n       registerWithOneSignal(). Without this call, the user's session and last_active is not updated. We only\r\n       do this if the user is actually registered with OneSignal though.\r\n       */\r\n      log.debug(`(${Environment.getEnv()}) Updating session info for HTTP site.`);\r\n      OneSignal.isPushNotificationsEnabled(isPushEnabled => {\r\n        if (isPushEnabled) {\r\n          return MainHelper.getAppId()\r\n                          .then(appId => MainHelper.registerWithOneSignal(appId, null));\r\n        }\r\n      });\r\n    }\r\n\r\n    MainHelper.checkAndDoHttpPermissionRequest();\r\n  }\r\n\r\n  static installNativePromptPermissionChangedHook() {\r\n    if (navigator.permissions && !(Browser.firefox && Number(Browser.version) <= 45)) {\r\n      OneSignal._usingNativePermissionHook = true;\r\n      // If the browser natively supports hooking the subscription prompt permission change event\r\n      //     use it instead of our SDK method\r\n      navigator.permissions.query({name: 'notifications'}).then(function (permissionStatus) {\r\n        permissionStatus.onchange = function () {\r\n          EventHelper.triggerNotificationPermissionChanged();\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  static saveInitOptions() {\r\n    let opPromises = [];\r\n    if (OneSignal.config.persistNotification === false) {\r\n      opPromises.push(Database.put('Options', {key: 'persistNotification', value: false}));\r\n    } else {\r\n      opPromises.push(Database.put('Options', {key: 'persistNotification', value: true}));\r\n    }\r\n\r\n    let webhookOptions = OneSignal.config.webhooks;\r\n    ['notification.displayed', 'notification.clicked', 'notification.dismissed'].forEach(event => {\r\n      if (webhookOptions && webhookOptions[event]) {\r\n        opPromises.push(Database.put('Options', {key: `webhooks.${event}`, value: webhookOptions[event]}));\r\n      } else {\r\n        opPromises.push(Database.put('Options', {key: `webhooks.${event}`, value: false}));\r\n      }\r\n    });\r\n    if (webhookOptions && webhookOptions.cors) {\r\n      opPromises.push(Database.put('Options', {key: `webhooks.cors`, value: true}));\r\n    } else {\r\n      opPromises.push(Database.put('Options', {key: `webhooks.cors`, value: false}));\r\n    }\r\n\r\n    if (OneSignal.config.notificationClickHandlerMatch) {\r\n      opPromises.push(Database.put('Options', {\r\n        key: 'notificationClickHandlerMatch',\r\n        value: OneSignal.config.notificationClickHandlerMatch\r\n      }));\r\n    } else {\r\n      opPromises.push(Database.put('Options', {key: 'notificationClickHandlerMatch', value: 'exact'}));\r\n    }\r\n\r\n    if (OneSignal.config.notificationClickHandlerAction) {\r\n      opPromises.push(Database.put('Options', {\r\n        key: 'notificationClickHandlerAction',\r\n        value: OneSignal.config.notificationClickHandlerAction\r\n      }));\r\n    } else {\r\n      opPromises.push(Database.put('Options', {key: 'notificationClickHandlerAction', value: 'navigate'}));\r\n    }\r\n\r\n    if (OneSignal.config.serviceWorkerRefetchRequests === false) {\r\n      opPromises.push(Database.put('Options', {key: 'serviceWorkerRefetchRequests', value: false}));\r\n    } else {\r\n      opPromises.push(Database.put('Options', {key: 'serviceWorkerRefetchRequests', value: true}));\r\n    }\r\n    return Promise.all(opPromises);\r\n  }\r\n\r\n  static internalInit() {\r\n    log.debug('Called %cinternalInit()', getConsoleStyle('code'));\r\n    Database.get('Ids', 'appId')\r\n            .then(appId => {\r\n              // HTTPS - Only register for push notifications once per session or if the user changes notification permission to Ask or Allow.\r\n              if (sessionStorage.getItem(\"ONE_SIGNAL_SESSION\")\r\n                && !OneSignal.config.subdomainName\r\n                && (window.Notification.permission == \"denied\"\r\n                || sessionStorage.getItem(\"ONE_SIGNAL_NOTIFICATION_PERMISSION\") == window.Notification.permission)) {\r\n                Event.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\r\n                return;\r\n              }\r\n\r\n              sessionStorage.setItem(\"ONE_SIGNAL_NOTIFICATION_PERMISSION\", window.Notification.permission);\r\n\r\n              if (Browser.safari && OneSignal.config.autoRegister === false) {\r\n                log.debug('On Safari and autoregister is false, skipping sessionInit().');\r\n                // This *seems* to trigger on either Safari's autoregister false or Chrome HTTP\r\n                // Chrome HTTP gets an SDK_INITIALIZED event from the iFrame postMessage, so don't call it here\r\n                if (!SubscriptionHelper.isUsingSubscriptionWorkaround()) {\r\n                  Event.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\r\n                }\r\n                return;\r\n              }\r\n\r\n              if (OneSignal.config.autoRegister === false && !OneSignal.config.subdomainName) {\r\n                log.debug('Skipping internal init. Not auto-registering and no subdomain.');\r\n                /* 3/25: If a user is already registered, re-register them in case the clicked Blocked and then Allow (which immediately invalidates the GCM token as soon as you click Blocked) */\r\n                OneSignal.isPushNotificationsEnabled().then(isPushEnabled => {\r\n                  if (isPushEnabled && !SubscriptionHelper.isUsingSubscriptionWorkaround()) {\r\n                    log.info('Because the user is already subscribed and has enabled notifications, we will re-register their GCM token.');\r\n                    // Resubscribes them, and in case their GCM registration token was invalid, gets a new one\r\n                    SubscriptionHelper.registerForW3CPush({});\r\n                  } else {\r\n                    ServiceWorkerHelper.updateServiceWorker();\r\n                  }\r\n                });\r\n                Event.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\r\n                return;\r\n              }\r\n\r\n              if (document.visibilityState !== \"visible\") {\r\n                once(document, 'visibilitychange', (e, destroyEventListener) => {\r\n                  if (document.visibilityState === 'visible') {\r\n                    destroyEventListener();\r\n                    InitHelper.sessionInit({__sdkCall: true});\r\n                  }\r\n                }, true);\r\n                return;\r\n              }\r\n\r\n              InitHelper.sessionInit({__sdkCall: true});\r\n            });\r\n  }\r\n\r\n  static async initSaveState() {\r\n    const appId = await MainHelper.getAppId()\r\n    await Database.put(\"Ids\", { type: \"appId\", id: appId });\r\n    const initialPageTitle = document.title || 'Notification';\r\n    await Database.put(\"Options\", { key: \"pageTitle\", value: initialPageTitle });\r\n    log.info(`OneSignal: Set pageTitle to be '${initialPageTitle}'.`);\r\n  }\r\n\r\n  static sessionInit(options) {\r\n    log.debug(`Called %csessionInit(${JSON.stringify(options)})`, getConsoleStyle('code'));\r\n    if (OneSignal._sessionInitAlreadyRunning) {\r\n      log.debug('Returning from sessionInit because it has already been called.');\r\n      return;\r\n    } else {\r\n      OneSignal._sessionInitAlreadyRunning = true;\r\n    }\r\n\r\n    var hostPageProtocol = `${location.protocol}//`;\r\n\r\n    if (Browser.safari) {\r\n      if (OneSignal.config.safari_web_id) {\r\n        MainHelper.getAppId()\r\n                 .then(appId => {\r\n                   window.safari.pushNotification.requestPermission(\r\n                     `${OneSignal._API_URL}safari`,\r\n                     OneSignal.config.safari_web_id,\r\n                     {app_id: appId},\r\n                     pushResponse => {\r\n                       log.info('Safari Registration Result:', pushResponse);\r\n                       if (pushResponse.deviceToken) {\r\n                         let subscriptionInfo = {\r\n                           // Safari's subscription returns a device token (e.g. 03D5D4A2EBCE1EE2AED68E12B72B1B995C2BFB811AB7DBF973C84FED66C6D1D5)\r\n                           endpointOrToken: pushResponse.deviceToken.toLowerCase()\r\n                         };\r\n                         MainHelper.registerWithOneSignal(appId, subscriptionInfo);\r\n                       }\r\n                       else {\r\n                         MainHelper.beginTemporaryBrowserSession();\r\n                       }\r\n                       EventHelper.triggerNotificationPermissionChanged();\r\n                     }\r\n                   );\r\n                 });\r\n      }\r\n    }\r\n    else if (options.modalPrompt && options.fromRegisterFor) { // If HTTPS - Show modal\r\n      Promise.all([\r\n        MainHelper.getAppId(),\r\n        OneSignal.isPushNotificationsEnabled(),\r\n        OneSignal.getNotificationPermission()\r\n      ])\r\n             .then(([appId, isPushEnabled, notificationPermission]) => {\r\n               let modalUrl = `${OneSignal.modalUrl}?${MainHelper.getPromptOptionsQueryString()}&id=${appId}&httpsPrompt=true&pushEnabled=${isPushEnabled}&permissionBlocked=${(notificationPermission as any) === 'denied'}&promptType=modal`;\r\n               log.info('Opening HTTPS modal prompt:', modalUrl);\r\n               let modal = MainHelper.createHiddenSubscriptionDomModal(modalUrl);\r\n\r\n               let sendToOrigin = `https://onesignal.com`;\r\n               if (Environment.isDev()) {\r\n                 sendToOrigin = DEV_FRAME_HOST;\r\n               }\r\n               let receiveFromOrigin = sendToOrigin;\r\n               OneSignal.modalPostmam = new Postmam(modal, sendToOrigin, receiveFromOrigin);\r\n               OneSignal.modalPostmam.startPostMessageReceive();\r\n\r\n               OneSignal.modalPostmam.once(OneSignal.POSTMAM_COMMANDS.MODAL_LOADED, message => {\r\n                 MainHelper.showSubscriptionDomModal();\r\n                 Event.trigger('modalLoaded');\r\n               });\r\n               OneSignal.modalPostmam.once(OneSignal.POSTMAM_COMMANDS.MODAL_PROMPT_ACCEPTED, message => {\r\n                 log.debug('User accepted the HTTPS modal prompt.');\r\n                 OneSignal._sessionInitAlreadyRunning = false;\r\n                 let iframeModalDom = document.getElementById('OneSignal-iframe-modal');\r\n                 iframeModalDom.parentNode.removeChild(iframeModalDom);\r\n                 OneSignal.modalPostmam.destroy();\r\n                 MainHelper.triggerCustomPromptClicked('granted');\r\n                 log.debug('Calling setSubscription(true)');\r\n                 OneSignal.setSubscription(true)\r\n                          .then(() => SubscriptionHelper.registerForW3CPush(options));\r\n               });\r\n               OneSignal.modalPostmam.once(OneSignal.POSTMAM_COMMANDS.MODAL_PROMPT_REJECTED, message => {\r\n                 log.debug('User rejected the HTTPS modal prompt.');\r\n                 OneSignal._sessionInitAlreadyRunning = false;\r\n                 let iframeModalDom = document.getElementById('OneSignal-iframe-modal');\r\n                 iframeModalDom.parentNode.removeChild(iframeModalDom);\r\n                 OneSignal.modalPostmam.destroy();\r\n                 MainHelper.triggerCustomPromptClicked('denied');\r\n               });\r\n               OneSignal.modalPostmam.once(OneSignal.POSTMAM_COMMANDS.POPUP_CLOSING, message => {\r\n                 log.info('Detected modal is closing.');\r\n                 OneSignal.modalPostmam.destroy();\r\n               });\r\n             });\r\n    }\r\n    else if ('serviceWorker' in navigator && !SubscriptionHelper.isUsingSubscriptionWorkaround()) { // If HTTPS - Show native prompt\r\n      if (options.__sdkCall && !MainHelper.wasHttpsNativePromptDismissed()) {\r\n        SubscriptionHelper.registerForW3CPush(options);\r\n      } else if (options.__sdkCall && MainHelper.wasHttpsNativePromptDismissed()) {\r\n        log.debug('OneSignal: Not automatically showing native HTTPS prompt because the user previously dismissed it.');\r\n        OneSignal._sessionInitAlreadyRunning = false;\r\n      } else {\r\n        SubscriptionHelper.registerForW3CPush(options);\r\n      }\r\n    }\r\n    else {\r\n      if (OneSignal.config.autoRegister !== true) {\r\n        log.debug('OneSignal: Not automatically showing popover because autoRegister is not specifically true.');\r\n      }\r\n      if (MainHelper.isHttpPromptAlreadyShown()) {\r\n        log.debug('OneSignal: Not automatically showing popover because it was previously shown in the same session.');\r\n      }\r\n      if ((OneSignal.config.autoRegister === true) && !MainHelper.isHttpPromptAlreadyShown()) {\r\n        OneSignal.showHttpPrompt().catch(e => {\r\n          if (e instanceof InvalidStateError && ((e as any).reason === InvalidStateReason[InvalidStateReason.RedundantPermissionMessage]) ||\r\n              e instanceof PermissionMessageDismissedError ||\r\n            e instanceof AlreadySubscribedError) {\r\n            log.debug('[Prompt Not Showing]', e);\r\n            // Another prompt is being shown, that's okay\r\n          } else throw e;\r\n        })\r\n      }\r\n    }\r\n\r\n    Event.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\r\n  }\r\n}","/**\r\n * Source: https://github.com/pazguille/emitter-es6\r\n */\r\n\r\n/**\r\n * Creates a new instance of Emitter.\r\n * @class\r\n * @returns {Object} emitter - An instance of Emitter.\r\n * @example\r\n * var emitter = new Emitter();\r\n */\r\nclass Emitter {\r\n\r\n  private _events: {};\r\n\r\n  constructor() {\r\n    this._events = {};\r\n  };\r\n\r\n  /**\r\n   * Adds a listener to the collection for a specified event.\r\n   * @public\r\n   * @function\r\n   * @name Emitter#on\r\n   * @param {String} event - Event name.\r\n   * @param {Function} listener - Listener function.\r\n   * @returns {Object} emitter\r\n   * @example\r\n   * emitter.on('ready', listener);\r\n   */\r\n  on(event, listener): void {\r\n    this._events[event] = this._events[event] || [];\r\n    this._events[event].push(listener);\r\n    return (this as any);\r\n  };\r\n\r\n  /**\r\n   * Adds a one time listener to the collection for a specified event. It will execute only once.\r\n   * @public\r\n   * @function\r\n   * @name Emitter#once\r\n   * @param {String} event - Event name.\r\n   * @param {Function} listener - Listener function.\r\n   * @returns {Object} emitter\r\n   * @example\r\n   * me.once('contentLoad', listener);\r\n   */\r\n  once(event, listener) {\r\n    let that = this;\r\n\r\n    function fn() {\r\n      that.off(event, fn);\r\n      listener.apply(this, arguments);\r\n    }\r\n\r\n    (fn as any).listener = listener;\r\n\r\n    this.on(event, fn);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes a listener from the collection for a specified event.\r\n   * @public\r\n   * @function\r\n   * @name Emitter#off\r\n   * @param {String} event - Event name.\r\n   * @param {Function} listener -  Listener function.\r\n   * @returns {Object} emitter\r\n   * @example\r\n   * me.off('ready', listener);\r\n   */\r\n  off(event, listener) {\r\n    let listeners = this._events[event];\r\n\r\n    if (listeners !== undefined) {\r\n      for (let j = 0; j < listeners.length; j += 1) {\r\n        if (listeners[j] === listener || listeners[j].listener === listener) {\r\n          listeners.splice(j, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (listeners.length === 0) {\r\n        this.removeAllListeners(event);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes all listeners from the collection for a specified event.\r\n   * @public\r\n   * @function\r\n   * @name Emitter#removeAllListeners\r\n   * @param {String} event - Event name.\r\n   * @returns {Object} emitter\r\n   * @example\r\n   * me.removeAllListeners('ready');\r\n   */\r\n  removeAllListeners(event) {\r\n    try {\r\n      delete this._events[event];\r\n    } catch(e) {};\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Returns all listeners from the collection for a specified event.\r\n   * @public\r\n   * @function\r\n   * @name Emitter#listeners\r\n   * @param {String} event - Event name.\r\n   * @returns {Array}\r\n   * @example\r\n   * me.listeners('ready');\r\n   */\r\n  listeners(event) {\r\n    try {\r\n      return this._events[event];\r\n    } catch(e) {};\r\n  };\r\n\r\n  /**\r\n   * Execute each item in the listener collection in order with the specified data.\r\n   * @name Emitter#emit\r\n   * @public\r\n   * @function\r\n   * @param {String} event - The name of the event you want to emit.\r\n   * @param {...args} [args] - Data to pass to the listeners.\r\n   * @example\r\n   * me.emit('ready', 'param1', {..}, [...]);\r\n   */\r\n  emit(...vargs: any[]) {\r\n    let args = [].slice.call(arguments, 0); // converted to array\r\n    let event = args.shift();\r\n    let listeners = this._events[event];\r\n\r\n    if (listeners !== undefined) {\r\n      listeners = listeners.slice(0);\r\n      let len = listeners.length;\r\n      for (let i = 0; i < len; i += 1) {\r\n        listeners[i].apply(this, args);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n}\r\n\r\n/**\r\n * Exports Emitter\r\n */\r\nexport default Emitter;","export enum PermissionPromptType {\n  /**\n   * Local notification hack for HTTP sites triggered by prompting for local notification permissions.\n   */\n  HttpPermissionRequest = <any>'HTTP permission request',\n  /**\n   * The \"main\" browser native permission request dialog when prompting for local or push notification permissions.\n   */\n  HttpsPermissionRequest = <any>'HTTPS permission request',\n  /**\n   * The \"popup\" to subdomain.onesignal.com.\n   */\n  FullscreenHttpPermissionMessage = <any>'fullscreen HTTP permission message',\n  /**\n   * The full-screen HTTPS modal with a dimmed backdrop.\n   */\n  FullscreenHttpsPermissionMessage = <any>'fullscreen HTTPS permission message',\n  /**\n   * The \"sliding down\" prompt.\n   */\n  SlidedownPermissionMessage = <any>'slidedown permission message',\n  /**\n   * The \"notify button\".\n   */\n  SubscriptionBell = <any>'subscription bell'\n}","import * as log from \"loglevel\";\nimport Database from \"./Database\";\nimport Emitter from \"../libraries/Emitter\";\nimport { contains } from \"../utils\";\n\nexport default class IndexedDb {\n\n  public emitter: Emitter;\n  private database: IDBDatabase;\n  private openLock: Promise<IDBDatabase>;\n\n  constructor(private databaseName: string) {\n    this.emitter = new Emitter();\n  }\n\n  private async open(databaseName: string): Promise<IDBDatabase> {\n    return await new Promise<IDBDatabase>((resolve, reject) => {\n      try {\n        // Open algorithm: https://www.w3.org/TR/IndexedDB/#h-opening\n        var request: IDBOpenDBRequest = indexedDB.open(databaseName, 1);\n      } catch (e) {\n        // Errors should be thrown on the request.onerror event, but just in case Firefox throws additional errors\n        // for profile schema too high\n      }\n      request.onerror = this.onDatabaseOpenError;\n      request.onblocked = this.onDatabaseOpenBlocked;\n      request.onupgradeneeded = this.onDatabaseUpgradeNeeded;\n      request.onsuccess = () => {\n        this.database = request.result;\n        this.database.onerror = this.onDatabaseError;\n        this.database.onversionchange = this.onDatabaseVersionChange;\n        resolve(this.database);\n      };\n    });\n  }\n\n  private async ensureDatabaseOpen() {\n    if (!this.openLock) {\n      this.openLock = this.open(this.databaseName);\n    }\n    await this.openLock;\n    return this.database;\n  }\n\n  private onDatabaseOpenError(event) {\n    // Prevent the error from bubbling: https://bugzilla.mozilla.org/show_bug.cgi?id=1331103#c3\n    /**\n     * To prevent error reporting tools like Sentry.io from picking up errors that\n     * the site owner can't do anything about and use up their quota, hide database open\n     * errors.\n     */\n    event.preventDefault();\n    const error = (<any>event.target).error;\n    if (contains(error.message, 'The operation failed for reasons unrelated to the database itself and not covered by any other error code') ||\n      contains(error.message, 'A mutation operation was attempted on a database that did not allow mutations')) {\n      log.warn(\"OneSignal: IndexedDb web storage is not available on this origin since this profile's IndexedDb schema has been upgraded in a newer version of Firefox. See: https://bugzilla.mozilla.org/show_bug.cgi?id=1236557#c6\");\n    } else {\n      log.warn('OneSignal: Fatal error opening IndexedDb database:', error);\n    }\n  }\n\n  /**\n   * Error events bubble. Error events are targeted at the request that generated the error, then the event bubbles to\n   * the transaction, and then finally to the database object. If you want to avoid adding error handlers to every\n   * request, you can instead add a single error handler on the database object.\n   */\n  private onDatabaseError(event) {\n    log.debug('IndexedDb: Generic database error', event.target.errorCode);\n  }\n\n  /**\n   * Occurs when the upgradeneeded should be triggered because of a version change but the database is still in use\n   * (that is, not closed) somewhere, even after the versionchange event was sent.\n   */\n  private onDatabaseOpenBlocked(): void {\n    log.debug('IndexedDb: Blocked event');\n  }\n\n  /**\n   * Occurs when a database structure change (IDBOpenDBRequest.onupgradeneeded event or IDBFactory.deleteDatabase) was\n   * requested elsewhere (most probably in another window/tab on the same computer).\n   *\n   * versionchange Algorithm: https://www.w3.org/TR/IndexedDB/#h-versionchange-transaction-steps\n   *\n   * Ref: https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase/onversionchange\n   */\n  private onDatabaseVersionChange(event: IDBVersionChangeEvent): void {\n    log.debug('IndexedDb: versionchange event');\n  }\n\n  /**\n   * Occurs when a new version of the database needs to be created, or has not been created before, or a new version\n   * of the database was requested to be opened when calling window.indexedDB.open.\n   *\n   * Ref: https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onupgradeneeded\n   */\n  private onDatabaseUpgradeNeeded(event: IDBVersionChangeEvent): void {\n    log.debug('IndexedDb: Database is being rebuilt or upgraded (upgradeneeded event).');\n    const db = (event.target as IDBOpenDBRequest).result;\n    db.createObjectStore(\"Ids\", {\n      keyPath: \"type\"\n    });\n    db.createObjectStore(\"NotificationOpened\", {\n      keyPath: \"url\"\n    });\n    db.createObjectStore(\"Options\", {\n      keyPath: \"key\"\n    });\n    /*\n     TODO: Database rebuilt event for bell prenotify badge\n\n     The event needs to be triggered across HTTP and HTTPS\n     Original Code: Event.trigger('dbRebuilt', null, null);\n     */\n    //this.emitter.emit(Events.DB_REBUILT);\n  }\n\n  /**\n   * Asynchronously retrieves the value of the key at the table (if key is specified), or the entire table (if key is not specified).\n   * @param table The table to retrieve the value from.\n   * @param key The key in the table to retrieve the value of. Leave blank to get the entire table.\n   * @returns {Promise} Returns a promise that fulfills when the value(s) are available.\n   */\n  public async get(table: string, key?: string): Promise<any> {\n    await this.ensureDatabaseOpen();\n    if (key) {\n      // Return a table-key value\n      return await new Promise((resolve, reject) => {\n        var request: IDBRequest = this.database.transaction(table).objectStore(table).get(key);\n        request.onsuccess = () => {\n          resolve(request.result);\n        };\n        request.onerror = e => {\n          reject(request.error);\n        };\n      });\n    } else {\n      // Return all values in table\n      return await new Promise((resolve, reject) => {\n        let jsonResult = {};\n        let cursor = this.database.transaction(table).objectStore(table).openCursor();\n        cursor.onsuccess = (event: any) => {\n          var cursorResult: IDBCursorWithValue = event.target.result;\n          if (cursorResult) {\n            let cursorResultKey: any = cursorResult.key;\n            jsonResult[cursorResultKey] = cursorResult.value;\n            cursorResult.continue();\n          } else {\n            resolve(jsonResult);\n          }\n        };\n        cursor.onerror = (event) => {\n          reject(cursor.error);\n        };\n      });\n    }\n  }\n\n  /**\n   * Asynchronously puts the specified value in the specified table.\n   */\n  public async put(table: string, key: any) {\n    await this.ensureDatabaseOpen();\n    return await new Promise((resolve, reject) => {\n      try {\n        let request = this.database.transaction([table], 'readwrite').objectStore(table).put(key);\n        request.onsuccess = (event) => {\n          resolve(key);\n        };\n        request.onerror = (e) => {\n          log.error('Database PUT Transaction Error:', e);\n          reject(e);\n        };\n      } catch (e) {\n        log.error('Database PUT Error:', e);\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * Asynchronously removes the specified key from the table, or if the key is not specified, removes all keys in the table.\n   * @returns {Promise} Returns a promise containing a key that is fulfilled when deletion is completed.\n   */\n  public async remove(table: string, key?: string) {\n    if (key) {\n      // Remove a single key from a table\n      var method = \"delete\";\n    } else {\n      // Remove all keys from the table (wipe the table)\n      var method = \"clear\";\n    }\n    return new Promise((resolve, reject) => {\n      try {\n        let request = this.database.transaction([table], 'readwrite').objectStore(table)[method](key);\n        request.onsuccess = (event) => {\n          resolve(key);\n        };\n        request.onerror = (e) => {\n          log.error('Database REMOVE Transaction Error:', e);\n          reject(e);\n        };\n      } catch (e) {\n        log.error('Database REMOVE Error:', e);\n        reject(e);\n      }\n    });\n  }\n}","'use strict';\n\nvar atoa = require('atoa');\nvar debounce = require('./debounce');\n\nmodule.exports = function emitter (thing, options) {\n  var opts = options || {};\n  var evt = {};\n  if (thing === undefined) { thing = {}; }\n  thing.on = function (type, fn) {\n    if (!evt[type]) {\n      evt[type] = [fn];\n    } else {\n      evt[type].push(fn);\n    }\n    return thing;\n  };\n  thing.once = function (type, fn) {\n    fn._once = true; // thing.off(fn) still works!\n    thing.on(type, fn);\n    return thing;\n  };\n  thing.off = function (type, fn) {\n    var c = arguments.length;\n    if (c === 1) {\n      delete evt[type];\n    } else if (c === 0) {\n      evt = {};\n    } else {\n      var et = evt[type];\n      if (!et) { return thing; }\n      et.splice(et.indexOf(fn), 1);\n    }\n    return thing;\n  };\n  thing.emit = function () {\n    var args = atoa(arguments);\n    return thing.emitterSnapshot(args.shift()).apply(this, args);\n  };\n  thing.emitterSnapshot = function (type) {\n    var et = (evt[type] || []).slice(0);\n    return function () {\n      var args = atoa(arguments);\n      var ctx = this || thing;\n      if (type === 'error' && opts.throws !== false && !et.length) { throw args.length === 1 ? args[0] : args; }\n      et.forEach(function emitter (listen) {\n        if (opts.async) { debounce(listen, args, ctx); } else { listen.apply(ctx, args); }\n        if (listen._once) { thing.off(type, listen); }\n      });\n      return thing;\n    };\n  };\n  return thing;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/contra/emitter.js\n// module id = 35\n// module chunks = 0","/**\n * Heir v3.0.0 - http://git.io/F87mKg\n * Oliver Caldwell - http://oli.me.uk/\n * Unlicense - http://unlicense.org/\n */\n\n(function (name, root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    }\n    else if (typeof exports === 'object') {\n        module.exports = factory();\n    }\n    else {\n        root[name] = factory();\n    }\n}('heir', this, function () {\n    /*global define,module*/\n    'use strict';\n\n    var heir = {\n        /**\n         * Causes your desired class to inherit from a source class. This uses\n         * prototypical inheritance so you can override methods without ruining\n         * the parent class.\n         *\n         * This will alter the actual destination class though, it does not\n         * create a new class.\n         *\n         * @param {Function} destination The target class for the inheritance.\n         * @param {Function} source Class to inherit from.\n         * @param {Boolean} addSuper Should we add the _super property to the prototype? Defaults to true.\n         */\n        inherit: function inherit(destination, source, addSuper) {\n            var proto = destination.prototype = heir.createObject(source.prototype);\n            proto.constructor = destination;\n\n            if (addSuper || typeof addSuper === 'undefined') {\n                destination._super = source.prototype;\n            }\n        },\n\n        /**\n         * Creates a new object with the source object nestled within its\n         * prototype chain.\n         *\n         * @param {Object} source Method to insert into the new object's prototype.\n         * @return {Object} An empty object with the source object in it's prototype chain.\n         */\n        createObject: Object.create || function createObject(source) {\n            var Host = function () {};\n            Host.prototype = source;\n            return new Host();\n        },\n\n        /**\n         * Mixes the specified object into your class. This can be used to add\n         * certain capabilities and helper methods to a class that is already\n         * inheriting from some other class. You can mix in as many object as\n         * you want, but only inherit from one.\n         *\n         * These values are mixed into the actual prototype object of your\n         * class, they are not added to the prototype chain like inherit.\n         *\n         * @param {Function} destination Class to mix the object into.\n         * @param {Object} source Object to mix into the class.\n         */\n        mixin: function mixin(destination, source) {\n            return heir.merge(destination.prototype, source);\n        },\n\n        /**\n         * Merges one object into another, change the object in place.\n         *\n         * @param {Object} destination The destination for the merge.\n         * @param {Object} source The source of the properties to merge.\n         */\n        merge: function merge(destination, source) {\n            var key;\n\n            for (key in source) {\n                destination[key] = source[key];\n            }\n        },\n\n        /**\n         * Shortcut for `Object.prototype.hasOwnProperty`.\n         *\n         * Uses `Object.prototype.hasOwnPropety` rather than\n         * `object.hasOwnProperty` as it could be overwritten.\n         *\n         * @param {Object} object The object to check\n         * @param {String} key The key to check for.\n         * @return {Boolean} Does object have key as an own propety?\n         */\n        hasOwn: function hasOwn(object, key) {\n            return Object.prototype.hasOwnProperty.call(object, key);\n        }\n    };\n\n    return heir;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/heir/heir.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nfunction serializeError (err) {\n  return err ? err.toString() : null;\n}\n\nfunction deserializeError (err) {\n  return err ? new Error(err) : null;\n}\n\nfunction parsePayload (payload) {\n  var type = payload.shift();\n  if (type === 'error') {\n    return { error: serializeError(payload[0]), type: type, payload: [] };\n  }\n  return { error: null, type: type, payload: payload };\n}\n\nfunction emission (emitter, context) {\n  return emit;\n  function emit (e) {\n    var data = e.data;\n    if (data.type === 'error') {\n      emitter.emit.call(null, 'error', context, deserializeError(data.error));\n    } else {\n      emitter.emit.apply(null, [data.type, context].concat(data.payload));\n    }\n  }\n}\n\nmodule.exports = {\n  parsePayload: parsePayload,\n  emission: emission\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/swivel/serialization.js\n// module id = 37\n// module chunks = 0","/*!\n * EventEmitter v5.1.0 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - http://oli.me.uk/\n * @preserve\n */\n\n;(function (exports) {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    function isValidListener (listener) {\n        if (typeof listener === 'function' || listener instanceof RegExp) {\n            return true\n        } else if (listener && typeof listener === 'object') {\n            return isValidListener(listener.listener)\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        if (!isValidListener(listener)) {\n            throw new TypeError('listener must be a function');\n        }\n\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listenersMap = this.getListenersAsObject(evt);\n        var listeners;\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listenersMap) {\n            if (listenersMap.hasOwnProperty(key)) {\n                listeners = listenersMap[key].slice(0);\n\n                for (i = 0; i < listeners.length; i++) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}(this || {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/wolfy87-eventemitter/EventEmitter.js\n// module id = 38\n// module chunks = 0","import {DEV_FRAME_HOST, API_URL, STAGING_FRAME_HOST} from \"./vars\";\nimport Environment from \"./Environment\";\nimport OneSignalApi from \"./OneSignalApi\";\nimport IndexedDb from \"./services/IndexedDb\";\nimport * as log from \"loglevel\";\nimport Event from \"./Event\";\nimport * as Cookie from \"js-cookie\";\nimport Database from \"./services/Database\";\nimport * as Browser from \"bowser\";\nimport {\n  isPushNotificationsSupported,\n  logMethodCall,\n  isValidEmail,\n  awaitOneSignalInitAndSupported,\n  getConsoleStyle,\n  unsubscribeFromPush,\n  prepareEmailForHashing,\n  executeCallback,\n  md5,\n  sha1,\n  awaitSdkEvent\n} from \"./utils\";\nimport {ValidatorUtils} from \"./utils/ValidatorUtils\";\nimport * as objectAssign from \"object-assign\";\nimport * as EventEmitter from \"wolfy87-eventemitter\";\nimport * as heir from \"heir\";\nimport * as swivel from \"swivel\";\nimport EventHelper from \"./helpers/EventHelper\";\nimport MainHelper from \"./helpers/MainHelper\";\nimport Popover from \"./popover/Popover\";\nimport {Uuid} from \"./models/Uuid\";\nimport {InvalidArgumentError, InvalidArgumentReason} from \"./errors/InvalidArgumentError\";\nimport LimitStore from \"./LimitStore\";\nimport {InvalidStateError, InvalidStateReason} from \"./errors/InvalidStateError\";\nimport InitHelper from \"./helpers/InitHelper\";\nimport ServiceWorkerHelper from \"./helpers/ServiceWorkerHelper\";\nimport SubscriptionHelper from \"./helpers/SubscriptionHelper\";\nimport HttpHelper from \"./helpers/HttpHelper\";\nimport TestHelper from \"./helpers/TestHelper\";\nimport {NotificationActionButton} from \"./models/NotificationActionButton\";\nimport {NotificationPermission} from \"./models/NotificationPermission\";\nimport PermissionMessageDismissedError from \"./errors/PermissionMessageDismissedError\";\nimport PushPermissionNotGrantedError from \"./errors/PushPermissionNotGrantedError\";\nimport {NotSubscribedError, NotSubscribedReason} from \"./errors/NotSubscribedError\";\nimport AlreadySubscribedError from \"./errors/AlreadySubscribedError\";\nimport {PermissionPromptType} from \"./models/PermissionPromptType\";\nimport {Notification} from \"./models/Notification\";\nimport Context from \"./models/Context\";\nimport { DynamicResourceLoader, ResourceLoadState } from \"./services/DynamicResourceLoader\";\n\n\nexport default class OneSignal {\n\n  /**\n   * Pass in the full URL of the default page you want to open when a notification is clicked.\n   * @PublicApi\n   */\n  static async setDefaultNotificationUrl(url: string) {\n    if (!ValidatorUtils.isValidUrl(url, { allowNull: true }))\n      throw new InvalidArgumentError('url', InvalidArgumentReason.Malformed);\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('setDefaultNotificationUrl', url);\n    const appState = await Database.getAppState();\n    appState.defaultNotificationUrl = url;\n    await Database.setAppState(appState);\n  }\n\n  /**\n   * Sets the default title to display on notifications. Will default to the page's document.title if you don't call this.\n   * @remarks Either DB value defaultTitle or pageTitle is used when showing a notification title.\n   * @PublicApi\n   */\n  static async setDefaultTitle(title: string) {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('setDefaultTitle', title);\n    const appState = await Database.getAppState();\n    appState.defaultNotificationTitle = title;\n    await Database.setAppState(appState);\n  }\n\n  /**\n   * Hashes the provided email and uploads to OneSignal.\n   * @remarks The email is voluntarily provided.\n   * @PublicApi\n   */\n  static async syncHashedEmail(email) {\n    if (!email)\n      throw new InvalidArgumentError('email', InvalidArgumentReason.Empty);\n    let sanitizedEmail = prepareEmailForHashing(email);\n    if (!isValidEmail(sanitizedEmail))\n      throw new InvalidArgumentError('email', InvalidArgumentReason.Malformed);\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('syncHashedEmail', email);\n    const { appId } = await Database.getAppConfig();\n    const { deviceId } = await Database.getSubscription();\n    if (!deviceId)\n      throw new NotSubscribedError(NotSubscribedReason.NoDeviceId);\n    const result = await OneSignalApi.updatePlayer(appId, deviceId, {\n      em_m: md5(sanitizedEmail),\n      em_s: sha1(sanitizedEmail)\n    });\n    if (result && result.success) {\n      return true;\n    } else {\n      throw result;\n    }\n  }\n\n  /**\n   * Returns true if the current browser supports web push.\n   * @PublicApi\n   */\n  static isPushNotificationsSupported() {\n    logMethodCall('isPushNotificationsSupported');\n    /*\n      Push notification support is checked in the initial entry code. If in an unsupported environment, a stubbed empty\n      version of the SDK will be loaded instead. This file will only be loaded if push notifications are supported.\n     */\n    return true;\n  }\n\n  /**\n   * Initializes the SDK, called by the developer.\n   * @PublicApi\n   */\n  static init(options) {\n    logMethodCall('init', options);\n\n    ServiceWorkerHelper.applyServiceWorkerEnvPrefixes();\n\n    if (OneSignal._initCalled) {\n      log.error(`OneSignal: Please don't call init() more than once. Any extra calls to init() are ignored. The following parameters were not processed: %c${JSON.stringify(Object.keys(options))}`, getConsoleStyle('code'));\n      return 'return';\n    }\n    OneSignal._initCalled = true;\n\n    OneSignal.config = objectAssign({\n      path: '/'\n    }, options);\n\n    if (Browser.safari && !OneSignal.config.safari_web_id) {\n      log.warn(\"OneSignal: Required parameter %csafari_web_id\", getConsoleStyle('code'), 'was not passed to OneSignal.init(), skipping SDK initialization.');\n      return;\n    }\n\n    function __init() {\n      if (OneSignal.__initAlreadyCalled) {\n        // Call from window.addEventListener('DOMContentLoaded', () => {\n        // Call from if (document.readyState === 'complete' || document.readyState === 'interactive')\n        return;\n      } else {\n        OneSignal.__initAlreadyCalled = true;\n      }\n      MainHelper.fixWordpressManifestIfMisplaced();\n\n      if (SubscriptionHelper.isUsingSubscriptionWorkaround()) {\n        if (OneSignal.config.subdomainName) {\n          OneSignal.config.subdomainName = MainHelper.autoCorrectSubdomain(OneSignal.config.subdomainName);\n        } else {\n          log.error('OneSignal: Your JavaScript initialization code is missing a required parameter %csubdomainName',\n            getConsoleStyle('code'),\n            '. HTTP sites require this parameter to initialize correctly. Please see steps 1.4 and 2 at ' +\n            'https://documentation.onesignal.com/docs/web-push-sdk-setup-http)');\n          return;\n        }\n\n        if (Environment.isDev()) {\n          OneSignal.iframeUrl = `${DEV_FRAME_HOST}/webPushIframe`;\n          OneSignal.popupUrl = `${DEV_FRAME_HOST}/subscribe`;\n        }\n        else {\n          OneSignal.iframeUrl = `https://${OneSignal.config.subdomainName}.onesignal.com/webPushIframe`;\n          OneSignal.popupUrl = `https://${OneSignal.config.subdomainName}.onesignal.com/subscribe`;\n        }\n      } else {\n        if (Environment.isDev()) {\n          OneSignal.modalUrl = `${DEV_FRAME_HOST}/webPushModal`;\n        } else if (Environment.isStaging()) {\n          OneSignal.modalUrl = `${STAGING_FRAME_HOST}/webPushModal`;\n        } else {\n          OneSignal.modalUrl = `https://onesignal.com/webPushModal`;\n        }\n      }\n\n      let subdomainPromise = Promise.resolve();\n      if (SubscriptionHelper.isUsingSubscriptionWorkaround()) {\n        subdomainPromise = HttpHelper.loadSubdomainIFrame()\n                                    .then(() => log.info('Subdomain iFrame loaded'))\n      }\n\n      OneSignal.on(OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, EventHelper.onNotificationPermissionChange);\n      OneSignal.on(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, EventHelper._onSubscriptionChanged);\n      OneSignal.on(OneSignal.EVENTS.SDK_INITIALIZED, InitHelper.onSdkInitialized);\n      subdomainPromise.then(() => {\n        window.addEventListener('focus', (event) => {\n          // Checks if permission changed everytime a user focuses on the page, since a user has to click out of and back on the page to check permissions\n          MainHelper.checkAndTriggerNotificationPermissionChanged();\n        });\n\n        // If Safari - add 'fetch' pollyfill if it isn't already added.\n        if (Browser.safari && typeof window.fetch == \"undefined\") {\n          var s = document.createElement('script');\n          s.setAttribute('src', \"https://cdnjs.cloudflare.com/ajax/libs/fetch/0.9.0/fetch.js\");\n          document.head.appendChild(s);\n        }\n\n        InitHelper.initSaveState()\n          .then(() => InitHelper.saveInitOptions())\n          .then(() => {\n            if (Environment.isCustomSubdomain()) {\n              Event.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n            } else {\n              InitHelper.internalInit();\n            }\n          });\n      });\n    }\n\n    if (document.readyState === 'complete' || document.readyState === 'interactive') {\n      __init();\n    }\n    else {\n      log.debug('OneSignal: Waiting for DOMContentLoaded or readyStateChange event before continuing' +\n        ' initialization...');\n      window.addEventListener('DOMContentLoaded', () => {\n        __init();\n      });\n      document.onreadystatechange = () => {\n        if (document.readyState === 'complete' || document.readyState === 'interactive') {\n          __init();\n        }\n      };\n    }\n  }\n\n  /**\n   * Shows a sliding modal prompt on the page for users to trigger the HTTP popup window to subscribe.\n   * @PublicApi\n   */\n  static async showHttpPrompt(options?) {\n    if (!options) {\n      options = {};\n    }\n\n    await awaitOneSignalInitAndSupported();\n    /*\n     Only show the HTTP popover if:\n     - Notifications aren't already enabled\n     - The user isn't manually opted out (if the user was manually opted out, we don't want to prompt the user)\n     */\n    if (OneSignal.__isPopoverShowing) {\n      throw new InvalidStateError(InvalidStateReason.RedundantPermissionMessage, {\n        permissionPromptType: PermissionPromptType.SlidedownPermissionMessage\n      });\n    }\n\n    const permission = await OneSignal.getNotificationPermission();\n    const isEnabled = await OneSignal.isPushNotificationsEnabled();\n    const notOptedOut = await OneSignal.getSubscription();\n    const doNotPrompt = await MainHelper.wasHttpsNativePromptDismissed();\n    const isShowingHttpPermissionRequest = await OneSignal.httpHelper.isShowingHttpPermissionRequest();\n\n    if (doNotPrompt && !options.force) {\n      throw new PermissionMessageDismissedError();\n    }\n    if (permission === NotificationPermission.Denied) {\n      throw new PushPermissionNotGrantedError();\n    }\n    if (isEnabled) {\n      throw new AlreadySubscribedError();\n    }\n    if (!notOptedOut) {\n      throw new NotSubscribedError(NotSubscribedReason.OptedOut);\n    }\n    if (MainHelper.isUsingHttpPermissionRequest()) {\n      if (options.__sdkCall && options.__useHttpPermissionRequestStyle) {\n      } else {\n        log.debug('The slidedown permission message cannot be used while the HTTP perm. req. is enabled.');\n        throw new InvalidStateError(InvalidStateReason.RedundantPermissionMessage, {\n          permissionPromptType: PermissionPromptType.HttpPermissionRequest\n        });\n      }\n    }\n\n    MainHelper.markHttpPopoverShown();\n\n    const sdkStylesLoadResult = await OneSignal.context.dynamicResourceLoader.loadSdkStylesheet();\n    if (sdkStylesLoadResult !== ResourceLoadState.Loaded) {\n      log.debug('Not showing slidedown permission message because styles failed to load.');\n      return;\n    }\n    OneSignal.popover = new Popover(OneSignal.config.promptOptions);\n    OneSignal.popover.create();\n    log.debug('Showing the HTTP popover.');\n    if (OneSignal.notifyButton &&\n      OneSignal.notifyButton.options.enable &&\n      OneSignal.notifyButton.launcher.state !== 'hidden') {\n      OneSignal.notifyButton.launcher.waitUntilShown()\n        .then(() => {\n          OneSignal.notifyButton.launcher.hide();\n        });\n    }\n    OneSignal.once(Popover.EVENTS.SHOWN, () => {\n      OneSignal.__isPopoverShowing = true;\n    });\n    OneSignal.once(Popover.EVENTS.CLOSED, () => {\n      OneSignal.__isPopoverShowing = false;\n      if (OneSignal.notifyButton &&\n        OneSignal.notifyButton.options.enable) {\n        OneSignal.notifyButton.launcher.show();\n      }\n    });\n    OneSignal.once(Popover.EVENTS.ALLOW_CLICK, () => {\n      OneSignal.popover.close();\n      log.debug(\"Setting flag to not show the popover to the user again.\");\n      TestHelper.markHttpsNativePromptDismissed();\n      if (options.__sdkCall && options.__useHttpPermissionRequestStyle) {\n        OneSignal.registerForPushNotifications({ httpPermissionRequest: true });\n      } else {\n        OneSignal.registerForPushNotifications({ autoAccept: true });\n      }\n    });\n    OneSignal.once(Popover.EVENTS.CANCEL_CLICK, () => {\n      log.debug(\"Setting flag to not show the popover to the user again.\");\n      TestHelper.markHttpsNativePromptDismissed();\n    });\n  }\n\n  /**\n   * Prompts the user to subscribe.\n   * @PublicApi\n   */\n  static registerForPushNotifications(options?: any) {\n    // WARNING: Do NOT add callbacks that have to fire to get from here to window.open in _sessionInit.\n    //          Otherwise the pop-up to ask for push permission on HTTP connections will be blocked by Chrome.\n    function __registerForPushNotifications() {\n      if (SubscriptionHelper.isUsingSubscriptionWorkaround()) {\n        HttpHelper.loadPopup(options);\n      } else {\n        if (!options)\n          options = {};\n        options.fromRegisterFor = true;\n        InitHelper.sessionInit(options);\n      }\n    }\n\n    if (!OneSignal.initialized) {\n      OneSignal.once(OneSignal.EVENTS.SDK_INITIALIZED, () => __registerForPushNotifications());\n    } else {\n      return __registerForPushNotifications();\n    }\n  }\n\n  /**\n   * Prompts the user to subscribe using the remote local notification workaround for HTTP sites.\n   * @PublicApi\n   */\n  static async showHttpPermissionRequest(options?: {_sdkCall: boolean}): Promise<any> {\n    log.debug('Called showHttpPermissionRequest().');\n\n    await awaitOneSignalInitAndSupported();\n\n    // Safari's push notifications are one-click Allow and shouldn't support this workaround\n    if (Browser.safari) {\n      throw new InvalidStateError(InvalidStateReason.UnsupportedEnvironment);\n    }\n\n    if (OneSignal.__isPopoverShowing) {\n      throw new InvalidStateError(InvalidStateReason.RedundantPermissionMessage, {\n        permissionPromptType: PermissionPromptType.SlidedownPermissionMessage\n      });\n    }\n\n    if (OneSignal._showingHttpPermissionRequest) {\n      throw new InvalidStateError(InvalidStateReason.RedundantPermissionMessage, {\n        permissionPromptType: PermissionPromptType.HttpPermissionRequest\n      });\n    }\n\n    if (SubscriptionHelper.isUsingSubscriptionWorkaround()) {\n      return await new Promise<NotificationPermission>((resolve, reject) => {\n        OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.SHOW_HTTP_PERMISSION_REQUEST, options, reply => {\n          let { status, result } = reply.data;\n          if (status === 'resolve') {\n            resolve(<NotificationPermission>result);\n          } else {\n            reject(result);\n          }\n        });\n      });\n    } else {\n      if (!MainHelper.isUsingHttpPermissionRequest()) {\n        log.debug('Not showing HTTP permission request because its not enabled. Check init option httpPermissionRequest.');\n        return;\n      }\n\n      // Default call by our SDK, not forced by user, don't show if the HTTP perm. req. was dismissed by user\n      if (MainHelper.wasHttpsNativePromptDismissed()) {\n        if (options._sdkCall === true) {\n          // TODO: Throw an error; Postmam currently does not serialize errors across cross-domain messaging\n          //       In the future, Postmam should serialize errors so we can throw a PermissionMessageDismissedError\n          log.debug('The HTTP perm. req. permission was dismissed, so we are not showing the request.');\n          return;\n        } else {\n          log.debug('The HTTP perm. req. was previously dismissed, but this call was made explicitly.');\n        }\n      }\n\n\n      const notificationPermission = await OneSignal.getNotificationPermission();\n\n      if (notificationPermission === NotificationPermission.Default) {\n        log.debug(`(${Environment.getEnv()}) Showing HTTP permission request.`);\n        OneSignal._showingHttpPermissionRequest = true;\n        return await new Promise((resolve, reject) => {\n          window.Notification.requestPermission(permission => {\n            OneSignal._showingHttpPermissionRequest = false;\n            resolve(permission);\n            log.debug('HTTP Permission Request Result:', permission);\n            if (permission === 'default') {\n              TestHelper.markHttpsNativePromptDismissed();\n              OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.REMOTE_NOTIFICATION_PERMISSION_CHANGED, {\n                permission: permission,\n                forceUpdatePermission: true\n              });\n            }\n          });\n          Event.trigger(OneSignal.EVENTS.PERMISSION_PROMPT_DISPLAYED);\n        });\n      } else if (notificationPermission === NotificationPermission.Granted &&\n        !(await OneSignal.isPushNotificationsEnabled())) {\n        // User unsubscribed but permission granted. Reprompt the user for push on the host page\n        OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.HTTP_PERMISSION_REQUEST_RESUBSCRIBE);\n      }\n    }\n  }\n\n  /**\n   * Returns a promise that resolves to the browser's current notification permission as 'default', 'granted', or 'denied'.\n   * @param callback A callback function that will be called when the browser's current notification permission has been obtained, with one of 'default', 'granted', or 'denied'.\n   * @PublicApi\n   */\n  static getNotificationPermission(onComplete?): Promise<NotificationPermission> {\n    return awaitOneSignalInitAndSupported()\n      .then(() => {\n        let safariWebId = null;\n        if (OneSignal.config) {\n          safariWebId = OneSignal.config.safari_web_id;\n        }\n        return MainHelper.getNotificationPermission(safariWebId);\n      })\n      .then(permission => {\n        if (onComplete) {\n          onComplete(permission);\n        }\n        return permission;\n      });\n  }\n\n  /**\n   * @PublicApi\n   */\n  static async getTags(callback) {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('getTags', callback);\n    const { appId } = await Database.getAppConfig();\n    const { deviceId } = await Database.getSubscription();\n    if (!deviceId) {\n      // TODO: Throw an error here in future v2; for now it may break existing client implementations.\n      log.info(new NotSubscribedError(NotSubscribedReason.NoDeviceId));\n      return null;\n    }\n    const { tags } = await OneSignalApi.getPlayer(appId, deviceId);\n    executeCallback(callback, tags);\n    return tags;\n  }\n\n  /**\n   * @PublicApi\n   */\n  static async sendTag(key: string, value: any, callback?: Action<Object>): Promise<Object> {\n    const tag = {};\n    tag[key] = value;\n    return await OneSignal.sendTags(tag, callback);\n  }\n\n  /**\n   * @PublicApi\n   */\n  static async sendTags(tags: Object, callback?: Action<Object>): Promise<Object> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('sendTags', tags, callback);\n    if (!tags || Object.keys(tags).length === 0) {\n      // TODO: Throw an error here in future v2; for now it may break existing client implementations.\n      log.info(new InvalidArgumentError('tags', InvalidArgumentReason.Empty));\n      return;\n    }\n    // Our backend considers false as removing a tag, so convert false -> \"false\" to allow storing as a value\n    Object.keys(tags).forEach(key => {\n      if (tags[key] === false)\n        tags[key] = \"false\";\n    });\n    const { appId } = await Database.getAppConfig();\n    var { deviceId } = await Database.getSubscription();\n    if (!deviceId) {\n      await awaitSdkEvent(OneSignal.EVENTS.REGISTERED);\n    }\n    // After the user subscribers, he will have a device ID, so get it again\n    var { deviceId: newDeviceId } = await Database.getSubscription();\n    await OneSignalApi.updatePlayer(appId, newDeviceId, {\n      tags: tags\n    });\n    executeCallback(callback, tags);\n    return tags;\n  }\n\n  /**\n   * @PublicApi\n   */\n  static async deleteTag(tag: string): Promise<Array<string>> {\n    return await OneSignal.deleteTags([tag]);\n  }\n\n  /**\n   * @PublicApi\n   */\n  static async deleteTags(tags: Array<string>, callback?: Action<Array<string>>): Promise<Array<string>> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('deleteTags', tags, callback);\n    if (!ValidatorUtils.isValidArray(tags))\n      throw new InvalidArgumentError('tags', InvalidArgumentReason.Malformed);\n    if (tags.length === 0) {\n      // TODO: Throw an error here in future v2; for now it may break existing client implementations.\n      log.info(new InvalidArgumentError('tags', InvalidArgumentReason.Empty));\n    }\n    const tagsToSend = {};\n    for (let tag of tags) {\n      tagsToSend[tag] = '';\n    }\n    const deletedTags = await OneSignal.sendTags(tagsToSend);\n    const deletedTagKeys = Object.keys(deletedTags);\n    executeCallback(callback, deletedTagKeys);\n    return deletedTagKeys;\n  }\n\n  /**\n   * @PublicApi\n   */\n  static async addListenerForNotificationOpened(callback?: Action<Notification>) {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('addListenerForNotificationOpened', callback);\n    OneSignal.once(OneSignal.EVENTS.NOTIFICATION_CLICKED, notification => {\n      executeCallback(callback, notification);\n    });\n    EventHelper.fireStoredNotificationClicks(OneSignal.config.pageUrl);\n  }\n  /**\n   * @PublicApi\n   * @Deprecated\n   */\n  static async getIdsAvailable(callback?: Action<{userId: Uuid, registrationId: string}>):\n    Promise<{userId: Uuid, registrationId: string}> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('getIdsAvailable', callback);\n    const { deviceId, pushToken } = await Database.getSubscription();\n    const bundle = {\n      userId: deviceId,\n      registrationId: pushToken\n    };\n    executeCallback(callback, bundle);\n    return bundle;\n  }\n\n  /**\n   * Returns a promise that resolves to true if all required conditions for push messaging are met; otherwise resolves to false.\n   * @param callback A callback function that will be called when the current subscription status has been obtained.\n   * @PublicApi\n   */\n  static async isPushNotificationsEnabled(callback?: Action<boolean>): Promise<boolean> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('isPushNotificationsEnabled', callback);\n\n    const hasInsecureParentOrigin = await SubscriptionHelper.hasInsecureParentOrigin();\n    const { deviceId, pushToken, optedOut } = await Database.getSubscription();\n    const notificationPermission = await OneSignal.getNotificationPermission();\n\n    let isPushEnabled = false;\n\n    if (Environment.supportsServiceWorkers() &&\n        !SubscriptionHelper.isUsingSubscriptionWorkaround() &&\n        !Environment.isIframe() &&\n        !hasInsecureParentOrigin) {\n\n      const serviceWorkerActive = await ServiceWorkerHelper.isServiceWorkerActive();\n\n      isPushEnabled = !!(deviceId &&\n                      pushToken &&\n                      notificationPermission === NotificationPermission.Granted &&\n                      !optedOut &&\n                      serviceWorkerActive)\n\n      const serviceWorkerRegistration = await navigator.serviceWorker.getRegistration();\n      if (serviceWorkerRegistration) {\n        const actualSubscription = await serviceWorkerRegistration.pushManager.getSubscription();\n        /**\n         * Check the actual subscription, and not just the stored cached subscription, to ensure the user is still really subscribed.\n         * Users typically test resubscribing by clearing their site permissions, which doesn't remove the stored subscription token\n         * in IndexedDb we get from Google. Clearing their site permission will unsubscribe them though, so this method should reflect\n         * that by checking the real state.\n         */\n        if (!actualSubscription) {\n          isPushEnabled = false;\n        }\n      }\n    } else {\n      isPushEnabled = !!(deviceId &&\n                         pushToken &&\n                         notificationPermission === NotificationPermission.Granted &&\n                         !optedOut)\n    }\n\n    executeCallback(callback, isPushEnabled);\n    return isPushEnabled;\n  }\n\n  /**\n   * @PublicApi\n   */\n  static async setSubscription(newSubscription: boolean): Promise<void> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('setSubscription', newSubscription);\n    const appConfig = await Database.getAppConfig();\n    const { appId } = appConfig;\n    const subscription = await Database.getSubscription();\n    const { deviceId } = subscription;\n    if (!appConfig.appId)\n      throw new InvalidStateError(InvalidStateReason.MissingAppId);\n    if (!ValidatorUtils.isValidBoolean(newSubscription))\n      throw new InvalidArgumentError('newSubscription', InvalidArgumentReason.Malformed);\n    if (!deviceId) {\n      // TODO: Throw an error here in future v2; for now it may break existing client implementations.\n      log.info(new NotSubscribedError(NotSubscribedReason.NoDeviceId));\n      return;\n    }\n    subscription.optedOut = !newSubscription;\n    await OneSignalApi.updatePlayer(appId, deviceId, {\n      notification_types: MainHelper.getNotificationTypeFromOptIn(newSubscription)\n    });\n    await Database.setSubscription(subscription);\n    EventHelper.onInternalSubscriptionSet(subscription.optedOut);\n    EventHelper.checkAndTriggerSubscriptionChanged();\n  }\n\n  /**\n   * @PendingPublicApi\n   */\n  static async isOptedOut(callback?: Action<boolean>): Promise<boolean> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('isOptedOut', callback);\n    const { optedOut } = await Database.getSubscription();\n    executeCallback(callback, optedOut);\n    return optedOut;\n  }\n\n  /**\n   * Returns a promise that resolves once the manual subscription override has been set.\n   * @private\n   * @PendingPublicApi\n   */\n  static async optOut(doOptOut: boolean, callback?: Action<void>): Promise<void> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('optOut', doOptOut, callback);\n    if (!ValidatorUtils.isValidBoolean(doOptOut))\n      throw new InvalidArgumentError('doOptOut', InvalidArgumentReason.Malformed);\n    await OneSignal.setSubscription(!doOptOut);\n    executeCallback(callback);\n  }\n\n  /**\n   * Returns a promise that resolves to the stored OneSignal user ID if one is set; otherwise null.\n   * @param callback A function accepting one parameter for the OneSignal user ID.\n   * @PublicApi\n   */\n  static async getUserId(callback?: Action<Uuid>): Promise<Uuid> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('getUserId', callback);\n    const subscription = await Database.getSubscription();\n    const deviceId = subscription.deviceId;\n    executeCallback(callback, deviceId);\n    return deviceId;\n  }\n\n  /**\n   * Returns a promise that resolves to the stored push token if one is set; otherwise null.\n   * @PublicApi\n   */\n  static async getRegistrationId(callback?: Action<string>): Promise<string> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('getRegistrationId', callback);\n    const subscription = await Database.getSubscription();\n    const pushToken = subscription.pushToken;\n    executeCallback(callback, pushToken);\n    return pushToken;\n  }\n\n  /**\n   * Returns a promise that resolves to false if setSubscription(false) is \"in effect\". Otherwise returns true.\n   * This means a return value of true does not mean the user is subscribed, only that the user did not call\n   * setSubcription(false).\n   * @private\n   * @PublicApi (given to customers)\n   */\n  static async getSubscription(callback?: Action<boolean>): Promise<boolean> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('getSubscription', callback);\n    const subscription = await Database.getSubscription();\n    const subscriptionStatus = !subscription.optedOut;\n    executeCallback(callback, subscriptionStatus);\n    return subscriptionStatus;\n  }\n\n  /**\n   * @PublicApi\n   */\n  static async sendSelfNotification(title: string = 'OneSignal Test Message',\n                              message: string = 'This is an example notification.',\n                              url: string = new URL(location.href).origin + '?_osp=do_not_open',\n                              icon: URL,\n                              data: Map<String, any>,\n                              buttons: Array<NotificationActionButton>): Promise<void> {\n    await awaitOneSignalInitAndSupported();\n    logMethodCall('sendSelfNotification', title, message, url, icon, data, buttons);\n    const appConfig = await Database.getAppConfig();\n    const subscription = await Database.getSubscription();\n    if (!appConfig.appId)\n      throw new InvalidStateError(InvalidStateReason.MissingAppId);\n    if (!subscription.deviceId)\n      throw new NotSubscribedError(NotSubscribedReason.NoDeviceId);\n    if (!ValidatorUtils.isValidUrl(url))\n      throw new InvalidArgumentError('url', InvalidArgumentReason.Malformed);\n    if (!ValidatorUtils.isValidUrl(icon, { allowEmpty: true, requireHttps: true }))\n      throw new InvalidArgumentError('icon', InvalidArgumentReason.Malformed);\n    return await OneSignalApi.sendNotification(appConfig.appId, [subscription.deviceId], {'en': title}, {'en': message},\n                                               url, icon, data, buttons);\n  }\n\n  /**\n   * Used to load OneSignal asynchronously from a webpage.\n   * @InternalApi\n   */\n  static push(item) {\n    if (typeof(item) == \"function\")\n      item();\n    else {\n      var functionName = item.shift();\n      OneSignal[functionName].apply(null, item);\n    }\n  }\n\n  static __doNotShowWelcomeNotification: boolean;\n  static VERSION = Environment.version();\n  static _VERSION = Environment.version();\n  static _API_URL = API_URL;\n  static _notificationOpenedCallbacks = [];\n  static _idsAvailable_callback = [];\n  static _defaultLaunchURL = null;\n  static config = null;\n  static _thisIsThePopup = false;\n  static __isPopoverShowing = false;\n  static _sessionInitAlreadyRunning = false;\n  static _isNotificationEnabledCallback = [];\n  static _subscriptionSet = true;\n  static iframeUrl = null;\n  static popupUrl = null;\n  static modalUrl = null;\n  static _sessionIframeAdded = false;\n  static _windowWidth = 650;\n  static _windowHeight = 568;\n  static _isNewVisitor = false;\n  static _channel = null;\n  static cookie = Cookie;\n  static initialized = false;\n  static notifyButton = null;\n  static store = LimitStore;\n  static environment = Environment;\n  static database = Database;\n  static event = Event;\n  static browser = Browser;\n  static popover = null;\n  static log = log;\n  static swivel = swivel;\n  static api = OneSignalApi;\n  static indexedDb = IndexedDb;\n  static iframePostmam = null;\n  static popupPostmam = null;\n  static mainHelper = MainHelper;\n  static subscriptionHelper = SubscriptionHelper;\n  static workerHelper = ServiceWorkerHelper;\n  static httpHelper =  HttpHelper;\n  static eventHelper = EventHelper;\n  static initHelper = InitHelper;\n  static testHelper = TestHelper;\n  static objectAssign = objectAssign;\n  /**\n   * The additional path to the worker file.\n   *\n   * Usually just the filename (in case the file is named differently), but also supports cases where the folder\n   * is different.\n   *\n   * However, the init options 'path' should be used to specify the folder path instead since service workers will not\n   * auto-update correctly on HTTPS site load if the config init options 'path' is not set.\n   */\n  static SERVICE_WORKER_UPDATER_PATH = 'OneSignalSDKUpdaterWorker.js';\n  static SERVICE_WORKER_PATH = 'OneSignalSDKWorker.js';\n\n  /**\n   * By default, the service worker is expected to be accessible at the root scope. If the service worker is only\n   * available with in a sub-directory, SERVICE_WORKER_PARAM must be changed to the sub-directory (with a trailing\n   * slash). This would allow pages to function correctly as not to block the service worker ready call, which would\n   * hang indefinitely if we requested root scope registration but the service was only available in a child scope.\n   */\n  static SERVICE_WORKER_PARAM = {scope: '/'};\n  static _LOGGING = false;\n  static LOGGING = false;\n  static _usingNativePermissionHook = false;\n  static _initCalled = false;\n  static __initAlreadyCalled = false;\n  static _thisIsTheModal: boolean;\n  static modalPostmam: any;\n  static httpPermissionRequestPostModal: any;\n  static closeNotifications = ServiceWorkerHelper.closeNotifications;\n  static isServiceWorkerActive = ServiceWorkerHelper.isServiceWorkerActive;\n  static _showingHttpPermissionRequest = false;\n  static context: Context;\n  static checkAndWipeUserSubscription = function() { }\n\n\n  /**\n   * Used by Rails-side HTTP popup. Must keep the same name.\n   * @InternalApi\n   */\n  static _initHttp = HttpHelper.initHttp;\n\n  /**\n   * Used by Rails-side HTTP popup. Must keep the same name.\n   * @InternalApi\n   */\n  static _initPopup = HttpHelper.initPopup;\n\n  static POSTMAM_COMMANDS = {\n    CONNECTED: 'connect',\n    REMOTE_NOTIFICATION_PERMISSION: 'postmam.remoteNotificationPermission',\n    REMOTE_DATABASE_GET: 'postmam.remoteDatabaseGet',\n    REMOTE_DATABASE_PUT: 'postmam.remoteDatabasePut',\n    REMOTE_DATABASE_REMOVE: 'postmam.remoteDatabaseRemove',\n    REMOTE_OPERATION_COMPLETE: 'postman.operationComplete',\n    REMOTE_RETRIGGER_EVENT: 'postmam.remoteRetriggerEvent',\n    MODAL_LOADED: 'postmam.modalPrompt.loaded',\n    MODAL_PROMPT_ACCEPTED: 'postmam.modalPrompt.accepted',\n    MODAL_PROMPT_REJECTED: 'postmam.modalPrompt.canceled',\n    POPUP_LOADED: 'postmam.popup.loaded',\n    POPUP_ACCEPTED: 'postmam.popup.accepted',\n    POPUP_REJECTED: 'postmam.popup.canceled',\n    POPUP_CLOSING: 'postman.popup.closing',\n    REMOTE_NOTIFICATION_PERMISSION_CHANGED: 'postmam.remoteNotificationPermissionChanged',\n    IFRAME_POPUP_INITIALIZE: 'postmam.iframePopupInitialize',\n    UNSUBSCRIBE_FROM_PUSH: 'postmam.unsubscribeFromPush',\n    BEGIN_BROWSING_SESSION: 'postmam.beginBrowsingSession',\n    REQUEST_HOST_URL: 'postmam.requestHostUrl',\n    SHOW_HTTP_PERMISSION_REQUEST: 'postmam.showHttpPermissionRequest',\n    IS_SHOWING_HTTP_PERMISSION_REQUEST: 'postmam.isShowingHttpPermissionRequest',\n    WINDOW_TIMEOUT: 'postmam.windowTimeout',\n    FINISH_REMOTE_REGISTRATION: 'postmam.finishRemoteRegistration',\n    FINISH_REMOTE_REGISTRATION_IN_PROGRESS: 'postmam.finishRemoteRegistrationInProgress',\n    POPUP_BEGIN_MESSAGEPORT_COMMS: 'postmam.beginMessagePortComms',\n    SERVICEWORKER_COMMAND_REDIRECT: 'postmam.command.redirect',\n    HTTP_PERMISSION_REQUEST_RESUBSCRIBE: 'postmam.httpPermissionRequestResubscribe',\n    MARK_PROMPT_DISMISSED: 'postmam.markPromptDismissed'\n  };\n\n  static EVENTS = {\n    /**\n     * Occurs when the user clicks the \"Continue\" or \"No Thanks\" button on the HTTP popup or HTTPS modal prompt.\n     * For HTTP sites (and HTTPS sites using the modal prompt), this event is fired before the native permission\n     * prompt is shown. This event is mostly used for HTTP sites.\n     */\n    CUSTOM_PROMPT_CLICKED: 'customPromptClick',\n    /**\n     * Occurs when the user clicks \"Allow\" or \"Block\" on the native permission prompt on Chrome, Firefox, or Safari.\n     * This event is used for both HTTP and HTTPS sites and occurs after the user actually grants notification\n     * permissions for the site. Occurs before the user is actually subscribed to push notifications.\n     */\n    NATIVE_PROMPT_PERMISSIONCHANGED: 'notificationPermissionChange',\n    /**\n     * Occurs after the user is officially subscribed to push notifications. The service worker is fully registered\n     * and activated and the user is eligible to receive push notifications at any point after this.\n     */\n    SUBSCRIPTION_CHANGED: 'subscriptionChange',\n    /**\n     * Occurs after a POST call to OneSignal's server to send the welcome notification has completed. The actual\n     * notification arrives shortly after.\n     */\n    WELCOME_NOTIFICATION_SENT: 'sendWelcomeNotification',\n    /**\n     * Occurs when a notification is displayed.\n     */\n    NOTIFICATION_DISPLAYED: 'notificationDisplay',\n    /**\n     * Occurs when a notification is dismissed by the user either clicking 'X' or clearing all notifications\n     * (available in Android). This event is NOT called if the user clicks the notification's body or any of the\n     * action buttons.\n     */\n    NOTIFICATION_DISMISSED: 'notificationDismiss',\n    /**\n     * New event replacing legacy addNotificationOpenedHandler(). Used when the notification was clicked.\n     */\n    NOTIFICATION_CLICKED: 'notificationClick',\n    /**\n     * Occurs after the document ready event fires and, for HTTP sites, the iFrame to subdomain.onesignal.com has\n     * loaded.\n     * Before this event, IndexedDB access is not possible for HTTP sites.\n     */\n    SDK_INITIALIZED: 'initialize',\n    /**\n     * Occurs after the user subscribes to push notifications and a new user entry is created on OneSignal's server,\n     * and also occurs when the user begins a new site session and the last_session and last_active is updated on\n     * OneSignal's server.\n     */\n    REGISTERED: 'register',\n    /**\n     * Occurs as the HTTP popup is closing.\n     */\n    POPUP_CLOSING: 'popupClose',\n    /**\n     * Occurs when the native permission prompt is displayed.\n     */\n    PERMISSION_PROMPT_DISPLAYED: 'permissionPromptDisplay',\n    /**\n     * For internal testing only. Used for all sorts of things.\n     */\n    TEST_INIT_OPTION_DISABLED: 'testInitOptionDisabled',\n    TEST_WOULD_DISPLAY: 'testWouldDisplay',\n    POPUP_WINDOW_TIMEOUT: 'popupWindowTimeout',\n  };\n\n  static NOTIFICATION_TYPES = {\n    SUBSCRIBED: 1,\n    UNSUBSCRIBED: -2\n  };\n\n  /** To appease TypeScript, EventEmitter later overrides this */\n  static on(...args) {}\n  static off(...args) {}\n  static once(...args) {}\n}\n\nObject.defineProperty(OneSignal, 'LOGGING', {\n  get: function() {\n    return OneSignal._LOGGING;\n  },\n  set: function(logLevel) {\n    if (logLevel) {\n      log.setDefaultLevel((<any>log).levels.TRACE);\n      OneSignal._LOGGING = true;\n    }\n    else {\n      log.setDefaultLevel((<any>log).levels.WARN);\n      OneSignal._LOGGING = false;\n    }\n  },\n  enumerable: true,\n  configurable: true\n});\n\nOneSignal.context = new Context();\n\nheir.merge(OneSignal, new EventEmitter());\n\n\nif (OneSignal.LOGGING)\n  log.setDefaultLevel((<any>log).levels.TRACE);\nelse {\n  log.setDefaultLevel((<any>log).levels.WARN);\n}\n\nlog.info(`%cOneSignal Web SDK loaded (version ${OneSignal._VERSION}, ${Environment.getEnv()} environment).`, getConsoleStyle('bold'));\nlog.debug(`Current Page URL: ${typeof location === \"undefined\" ? \"NodeJS\" : location.href}`);\nlog.debug(`Browser Environment: ${Browser.name} ${Browser.version}`);\n","export default class OneSignalStub {\n\n  static promiseStub() {\n    return {\n      then: OneSignalStub.promiseStub,\n      catch: OneSignalStub.promiseStub\n    }\n  }\n\n  static get log() {\n    return {\n      setLevel: function() {}\n    }\n  }\n\n  static isPushNotificationsSupported() {\n    return false;\n  }\n\n  static push(item) {\n    if (typeof(item) == \"function\")\n      item();\n    else {\n      var functionName = item.shift();\n      OneSignal[functionName].apply(null, item);\n    }\n  }\n}\n\nvar untypedOneSignalStub = OneSignalStub as any;\n\nuntypedOneSignalStub.init = untypedOneSignalStub.showHttpPrompt\n  = untypedOneSignalStub.registerForPushNotifications\n  = untypedOneSignalStub.showHttpPermissionRequest\n  = untypedOneSignalStub.getNotificationPermission\n  = untypedOneSignalStub.on\n  = untypedOneSignalStub.off\n  = untypedOneSignalStub.once\n  = untypedOneSignalStub.config\n  = untypedOneSignalStub.SERVICE_WORKER_PATH\n  = untypedOneSignalStub.SERVICE_WORKER_UPDATER_PATH\n  = untypedOneSignalStub.checkAndWipeUserSubscription\n  = untypedOneSignalStub.subscriptionBell\n  = untypedOneSignalStub.notifyButton\n  = function() { };\n\nuntypedOneSignalStub.setDefaultNotificationUrl = untypedOneSignalStub.setDefaultTitle\n  = untypedOneSignalStub.syncHashedEmail\n  = untypedOneSignalStub.getTags\n  = untypedOneSignalStub.sendTag\n  = untypedOneSignalStub.sendTags\n  = untypedOneSignalStub.deleteTag\n  = untypedOneSignalStub.deleteTags\n  = untypedOneSignalStub.addListenerForNotificationOpened\n  = untypedOneSignalStub.getIdsAvailable\n  = untypedOneSignalStub.isPushNotificationsEnabled\n  = untypedOneSignalStub.setSubscription\n  = untypedOneSignalStub.getUserId\n  = untypedOneSignalStub.getRegistrationId\n  = untypedOneSignalStub.getSubscription\n  = untypedOneSignalStub.sendSelfNotification\n  = untypedOneSignalStub.promiseStub;","///<reference path=\"../../typings/globals/service_worker_api/index.d.ts\"/>\nimport { DEV_HOST, DEV_FRAME_HOST, PROD_HOST, API_URL, STAGING_FRAME_HOST } from '../vars';\nimport Environment from '../Environment'\nimport OneSignalApi from '../OneSignalApi';\nimport * as log from 'loglevel';\nimport { getConsoleStyle, contains, trimUndefined, getDeviceTypeForBrowser, substringAfter, isValidUuid, capitalize } from '../utils';\nimport * as objectAssign from 'object-assign';\nimport * as swivel from 'swivel';\nimport * as Browser from 'bowser';\nimport {Notification} from \"../models/Notification\";\nimport Database from '../services/Database';\n\ndeclare var self: ServiceWorkerGlobalScope;\n\n\n/**\n * The main service worker script fetching and displaying notifications to users in the background even when the client\n * site is not running. The worker is registered via the navigator.serviceWorker.register() call after the user first\n * allows notification permissions, and is a pre-requisite to subscribing for push notifications.\n *\n * For HTTPS sites, the service worker is registered site-wide at the top-level scope. For HTTP sites, the service\n * worker is registered to the iFrame pointing to subdomain.onesignal.com.\n */\nclass ServiceWorker {\n  static REFETCH_REQUESTS;\n  static SKIP_REFETCH_REQUESTS;\n  static queries;\n  static UNSUBSCRIBED_FROM_NOTIFICATIONS;\n\n  /**\n   * An incrementing integer defined in package.json. Value doesn't matter as long as it's different from the\n   * previous version.\n   */\n  static get VERSION() {\n    return __VERSION__;\n  }\n\n  /**\n   * Describes what context the JavaScript code is running in and whether we're running in local development mode.\n   */\n  static get environment() {\n    return Environment;\n  }\n\n  static get log() {\n    return log;\n  }\n\n  /**\n   * Allows message passing between this service worker and its controlled clients, or webpages. Controlled\n   * clients include any HTTPS site page, or the nested iFrame pointing to OneSignal on any HTTP site. This allows\n   * events like notification dismissed, clicked, and displayed to be fired on the clients. It also allows the\n   * clients to communicate with the service worker to close all active notifications.\n   */\n  static get swivel() {\n    return swivel;\n  }\n\n  /**\n   * An interface to the browser's IndexedDB.\n   */\n  static get database() {\n    return Database;\n  }\n\n  static get apiUrl() {\n    return API_URL;\n  }\n\n  /**\n   * Describes the current browser name and version.\n   */\n  static get browser() {\n    return Browser;\n  }\n\n  /**\n   * Service worker entry point.\n   */\n  static run() {\n    self.addEventListener('push', ServiceWorker.onPushReceived);\n    self.addEventListener('notificationclose', ServiceWorker.onNotificationClosed);\n    self.addEventListener('notificationclick', event => event.waitUntil(ServiceWorker.onNotificationClicked(event)));\n    self.addEventListener('install', ServiceWorker.onServiceWorkerInstalled);\n    self.addEventListener('activate', ServiceWorker.onServiceWorkerActivated);\n    self.addEventListener('pushsubscriptionchange', ServiceWorker.onPushSubscriptionChange);\n\n    // Install messaging event handlers for page <-> service worker communication\n    (swivel as any).on('data', ServiceWorker.onMessageReceived);\n\n    // 3/2/16: Firefox does not send the Origin header when making CORS request through service workers, which breaks some sites that depend on the Origin header being present (https://bugzilla.mozilla.org/show_bug.cgi?id=1248463)\n    // Fix: If the browser is Firefox and is v44, use the following workaround:\n    if (Browser.firefox && Browser.version && contains(Browser.version, '44')) {\n      Database.get('Options', 'serviceWorkerRefetchRequests')\n        .then(refetchRequests => {\n          if (refetchRequests == true) {\n            log.info('Detected Firefox v44; installing fetch handler to refetch all requests.');\n            ServiceWorker.REFETCH_REQUESTS = true;\n            self.addEventListener('fetch', ServiceWorker.onFetch);\n          } else {\n            ServiceWorker.SKIP_REFETCH_REQUESTS = true;\n            log.info('Detected Firefox v44 but not refetching requests because option is set to false.');\n          }\n        })\n        .catch(e => {\n          log.error(e);\n          ServiceWorker.REFETCH_REQUESTS = true;\n          self.addEventListener('fetch', ServiceWorker.onFetch);\n        });\n    }\n  }\n\n  /**\n   * Occurs when a control message is received from the host page. Not related to the actual push message event.\n   * @param context Used to reply to the host page.\n   * @param data The message contents.\n   */\n  static onMessageReceived(context, data) {\n    log.debug(`%c${capitalize(Environment.getEnv())} ⬸ Host:`, getConsoleStyle('serviceworkermessage'), data, context);\n\n    if (!data) {\n      log.debug('Returning from empty data message.');\n      return;\n    }\n\n    if (data === 'notification.closeall') {\n      // Used for testing; the host page can close active notifications\n      self.registration.getNotifications(null).then(notifications => {\n        for (let notification of notifications) {\n          notification.close();\n        }\n      });\n    }\n    else if (data.query) {\n      ServiceWorker.processQuery(data.query, data.response);\n    }\n  }\n\n  static processQuery(queryType, response) {\n    if (!ServiceWorker.queries) {\n      log.debug(`queryClient() was not called before processQuery(). ServiceWorker.queries is empty.`);\n    }\n    if (!ServiceWorker.queries[queryType]) {\n      log.debug(`Received query ${queryType} response ${response}. Expected ServiceWorker.queries to be preset to a hash.`);\n      return;\n    } else {\n      if (!ServiceWorker.queries[queryType].promise) {\n        log.debug(`Expected ServiceWorker.queries[${queryType}].promise value to be a Promise: ${ServiceWorker.queries[queryType]}`);\n        return;\n      }\n      ServiceWorker.queries[queryType].promiseResolve(response);\n    }\n  }\n\n  /**\n   * Messages the service worker client the specified queryString via postMessage(), and returns a Promise that\n   * resolves to the client's response.\n   * @param serviceWorkerClient A service worker client.\n   * @param queryType The message to send to the client.\n     */\n  static queryClient(serviceWorkerClient, queryType) {\n    if (!ServiceWorker.queries) {\n      ServiceWorker.queries = {};\n    }\n    if (!ServiceWorker.queries[queryType]) {\n      ServiceWorker.queries[queryType] = {};\n    }\n    ServiceWorker.queries[queryType].promise = new Promise((resolve, reject) => {\n      ServiceWorker.queries[queryType].promiseResolve = resolve;\n      ServiceWorker.queries[queryType].promiseReject = reject;\n      (swivel as any).emit(serviceWorkerClient.id, queryType);\n    });\n    return ServiceWorker.queries[queryType].promise;\n  }\n\n  /**\n   * Occurs when a push message is received.\n   * This method handles the receipt of a push signal on all web browsers except Safari, which uses the OS to handle\n   * notifications.\n   */\n  static onPushReceived(event) {\n    log.debug(`Called %conPushReceived(${JSON.stringify(event, null, 4)}):`, getConsoleStyle('code'), event);\n\n    event.waitUntil(\n        ServiceWorker.parseOrFetchNotifications(event)\n            .then((notifications: any) => {\n              if (!notifications || notifications.length == 0) {\n                log.debug(\"Because no notifications were retrieved, we'll display the last known notification, so\" +\n                          \" long as it isn't the welcome notification.\");\n                return ServiceWorker.displayBackupNotification();\n              }\n\n              //Display push notifications in the order we received them\n              let notificationEventPromiseFns = [];\n\n              for (let rawNotification of notifications) {\n                log.debug('Raw Notification from OneSignal:', rawNotification);\n                let notification = ServiceWorker.buildStructuredNotificationObject(rawNotification);\n\n                // Never nest the following line in a callback from the point of entering from retrieveNotifications\n                notificationEventPromiseFns.push((notif => {\n                  return ServiceWorker.displayNotification(notif)\n                      .then(() => ServiceWorker.updateBackupNotification(notif).catch(e => log.error(e)))\n                      .then(() => { (swivel as any).broadcast('notification.displayed', notif) })\n                      .then(() => ServiceWorker.executeWebhooks('notification.displayed', notif).catch(e => log.error(e)))\n                }).bind(null, notification));\n              }\n\n              return notificationEventPromiseFns.reduce((p, fn) => {\n                return p = p.then(fn);\n               }, Promise.resolve());\n            })\n            .catch(e => {\n              log.debug('Failed to display a notification:', e);\n              if (ServiceWorker.UNSUBSCRIBED_FROM_NOTIFICATIONS) {\n                log.debug('Because we have just unsubscribed from notifications, we will not show anything.');\n              } else {\n                log.debug(\n                    \"Because a notification failed to display, we'll display the last known notification, so long as it isn't the welcome notification.\");\n                return ServiceWorker.displayBackupNotification();\n              }\n            })\n    )\n  }\n\n  /**\n   * Makes a POST call to a specified URL to forward certain events.\n   * @param event The name of the webhook event. Affects the DB key pulled for settings and the final event the user\n   *              consumes.\n   * @param notification A JSON object containing notification details the user consumes.\n   * @returns {Promise}\n   */\n  static async executeWebhooks(event, notification) {\n    const {deviceId} = await Database.getSubscription();\n    const isServerCorsEnabled = await Database.get<boolean>('Options', 'webhooks.cors');\n    const webhookTargetUrl = await Database.get('Options', `webhooks.${event}`);\n\n    if (webhookTargetUrl) {\n      // JSON.stringify() does not include undefined values\n      // Our response will not contain those fields here which have undefined values\n      let postData = {\n        event: event,\n        id: notification.id,\n        userId: deviceId,\n        action: notification.action,\n        buttons: notification.buttons,\n        heading: notification.heading,\n        content: notification.content,\n        url: notification.url,\n        icon: notification.icon,\n        data: notification.data\n      };\n      let fetchOptions: any = {\n        method: 'post',\n        mode: 'no-cors',\n        body: JSON.stringify(postData),\n\n      };\n      if (isServerCorsEnabled) {\n        fetchOptions.mode = 'cors';\n        fetchOptions.headers = {\n          'X-OneSignal-Event': event,\n          'Content-Type': 'application/json'\n        };\n      }\n      log.debug(`Executing ${event} webhook ${isServerCorsEnabled ? 'with' : 'without'} CORS %cPOST ${webhookTargetUrl}`, getConsoleStyle('code'), ':', postData);\n      return await fetch(webhookTargetUrl, fetchOptions);\n    }\n  }\n\n  /**\n   * Gets an array of active window clients along with whether each window client is the HTTP site's iFrame or an\n   * HTTPS site page.\n   * An active window client is a browser tab that is controlled by the service worker.\n   * Technically, this list should only ever contain clients that are iFrames, or clients that are HTTPS site pages,\n   * and not both. This doesn't really matter though.\n   * @returns {Promise}\n   */\n  static async getActiveClients() {\n    const windowClients = await self.clients.matchAll({ type: 'window', includeUncontrolled: true })\n    let activeClients = [];\n\n    for (let client of windowClients) {\n      // Test if this window client is the HTTP subdomain iFrame pointing to subdomain.onesignal.com\n      if (client.frameType && client.frameType === 'nested') {\n        // Subdomain iFrames point to 'https://subdomain.onesignal.com...'\n        if ((Environment.isDev() && !contains(client.url, DEV_FRAME_HOST)) ||\n          !Environment.isDev() && !contains(client.url, '.onesignal.com') ||\n          Environment.isStaging() && !contains(client.url, STAGING_FRAME_HOST)) {\n          continue;\n        }\n        // Indicates this window client is an HTTP subdomain iFrame\n        (client as any).isSubdomainIframe = true;\n      }\n      activeClients.push(client);\n    }\n\n    return activeClients;\n  }\n\n  /**\n   * Constructs a structured notification object from the raw notification fetched from OneSignal's server. This\n   * object is passed around from event to event, and is also returned to the host page for notification event details.\n   * Constructed in onPushReceived, and passed along to other event handlers.\n   * @param rawNotification The raw notification JSON returned from OneSignal's server.\n   */\n  static buildStructuredNotificationObject(rawNotification) {\n    let notification: any = {\n      id: rawNotification.custom.i,\n      heading: rawNotification.title,\n      content: rawNotification.alert,\n      data: rawNotification.custom.a,\n      url: rawNotification.custom.u,\n      icon: rawNotification.icon,\n      image: rawNotification.image,\n      tag: rawNotification.tag\n    };\n\n    // Add action buttons\n    if (rawNotification.o) {\n      notification.buttons = [];\n      for (let rawButton of rawNotification.o) {\n        notification.buttons.push({\n                                    action: rawButton.i,\n                                    title: rawButton.n,\n                                    icon: rawButton.p,\n                                    url: rawButton.u\n                                  });\n      }\n    }\n    return trimUndefined(notification);\n  }\n\n  /**\n   * Given an image URL, returns a proxied HTTPS image using the https://images.weserv.nl service.\n   * For a null image, returns null so that no icon is displayed.\n   * If the image protocol is HTTPS, or origin contains localhost or starts with 192.168.*.*, we do not proxy the image.\n   * @param imageUrl An HTTP or HTTPS image URL.\n   */\n  static ensureImageResourceHttps(imageUrl) {\n    if (imageUrl) {\n      try {\n        let parsedImageUrl = new URL(imageUrl);\n        if (parsedImageUrl.hostname === 'localhost' ||\n            parsedImageUrl.hostname.indexOf('192.168') !== -1 ||\n            parsedImageUrl.hostname === '127.0.0.1' ||\n            parsedImageUrl.protocol === 'https:') {\n          return imageUrl;\n        }\n        if (parsedImageUrl.hostname === 'i0.wp.com' ||\n            parsedImageUrl.hostname === 'i1.wp.com' ||\n            parsedImageUrl.hostname === 'i2.wp.com' ||\n            parsedImageUrl.hostname === 'i3.wp.com') {\n          /* Their site already uses Jetpack, just make sure Jetpack is HTTPS */\n          return `https://${parsedImageUrl.hostname}${parsedImageUrl.pathname}`\n        }\n        /* HTTPS origin hosts can be used by prefixing the hostname with ssl: */\n        let replacedImageUrl = parsedImageUrl.host + parsedImageUrl.pathname;\n        return `https://i0.wp.com/${replacedImageUrl}`;\n      } catch (e) { }\n    } else return null;\n  }\n\n  /**\n   * Given a structured notification object, HTTPS-ifies the notification icons and action button icons, if they exist.\n   */\n  static ensureNotificationResourcesHttps(notification) {\n    if (notification) {\n      if (notification.icon) {\n        notification.icon = ServiceWorker.ensureImageResourceHttps(notification.icon);\n      }\n      if (notification.image) {\n        notification.image = ServiceWorker.ensureImageResourceHttps(notification.image);\n      }\n      if (notification.buttons && notification.buttons.length > 0) {\n        for (let button of notification.buttons) {\n          if (button.icon) {\n            button.icon = ServiceWorker.ensureImageResourceHttps(button.icon);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Actually displays a visible notification to the user.\n   * Any event needing to display a notification calls this so that all the display options can be centralized here.\n   * @param notification A structured notification object.\n   */\n  static displayNotification(notification, overrides?) {\n    log.debug(`Called %cdisplayNotification(${JSON.stringify(notification, null, 4)}):`, getConsoleStyle('code'), notification);\n    return Promise.all([\n          // Use the default title if one isn't provided\n          ServiceWorker._getTitle(),\n          // Use the default icon if one isn't provided\n          Database.get('Options', 'defaultIcon'),\n          // Get option of whether we should leave notification displaying indefinitely\n          Database.get('Options', 'persistNotification'),\n          // Get app ID for tag value\n          Database.get('Ids', 'appId')\n        ])\n        .then(([defaultTitle, defaultIcon, persistNotification, appId]) => {\n          notification.heading = notification.heading ? notification.heading : defaultTitle;\n          notification.icon = notification.icon ? notification.icon : (defaultIcon ? defaultIcon : undefined);\n          var extra: any = {};\n          extra.tag = notification.tag || appId;\n          extra.persistNotification = persistNotification;\n\n          // Allow overriding some values\n          if (!overrides)\n            overrides = {};\n          notification = objectAssign(notification, overrides);\n\n          ServiceWorker.ensureNotificationResourcesHttps(notification);\n\n          let notificationOptions = {\n            body: notification.content,\n            icon: notification.icon,\n            /*\n             On Chrome 56, a large image can be displayed: https://bugs.chromium.org/p/chromium/issues/detail?id=614456\n             */\n            image: notification.image,\n            /*\n             On Chrome 44+, use this property to store extra information which you can read back when the\n             notification gets invoked from a notification click or dismissed event. We serialize the\n             notification in the 'data' field and read it back in other events. See:\n             https://developers.google.com/web/updates/2015/05/notifying-you-of-changes-to-notifications?hl=en\n             */\n            data: notification,\n            /*\n             On Chrome 48+, action buttons show below the message body of the notification. Clicking either\n             button takes the user to a link. See:\n             https://developers.google.com/web/updates/2016/01/notification-actions\n             */\n            actions: notification.buttons,\n            /*\n             Tags are any string value that groups notifications together. Two or notifications sharing a tag\n             replace each other.\n             */\n            tag: extra.tag,\n            /*\n             On Chrome 47+ (desktop), notifications will be dismissed after 20 seconds unless requireInteraction\n             is set to true. See:\n             https://developers.google.com/web/updates/2015/10/notification-requireInteractiom\n             */\n            requireInteraction: extra.persistNotification,\n            /*\n             On Chrome 50+, by default notifications replacing identically-tagged notifications no longer\n             vibrate/signal the user that a new notification has come in. This flag allows subsequent\n             notifications to re-alert the user. See:\n             https://developers.google.com/web/updates/2016/03/notifications\n             */\n            renotify: true\n          };\n          return self.registration.showNotification(notification.heading, notificationOptions)\n        });\n  }\n\n  /**\n   * Stores the most recent notification into IndexedDB so that it can be shown as a backup if a notification fails\n   * to be displayed. This is to avoid Chrome's forced \"This site has been updated in the background\" message. See\n   * this post for more details: http://stackoverflow.com/a/35045513/555547.\n   * This is called every time is a push message is received so that the most recent message can be used as the\n   * backup notification.\n   * @param notification The most recent notification as a structured notification object.\n   */\n  static async updateBackupNotification(notification): Promise<void> {\n    let isWelcomeNotification = notification.data && notification.data.__isOneSignalWelcomeNotification;\n    // Don't save the welcome notification, that just looks broken\n    if (isWelcomeNotification)\n      return;\n    await Database.put('Ids', {type: 'backupNotification', id: notification});\n  }\n\n  /**\n   * Displays a fail-safe notification during a push event in case notification contents could not be retrieved.\n   * This is to avoid Chrome's forced \"This site has been updated in the background\" message. See this post for\n   * more details: http://stackoverflow.com/a/35045513/555547.\n   */\n  static displayBackupNotification() {\n    return Database.get('Ids', 'backupNotification')\n        .then(backupNotification => {\n          let overrides = {\n            // Don't persist our backup notification; users should ideally not see them\n            persistNotification: false,\n            data: {__isOneSignalBackupNotification: true}\n          };\n          if (backupNotification) {\n            return ServiceWorker.displayNotification(backupNotification, overrides);\n          } else {\n            return ServiceWorker.displayNotification({\n              content: 'You have new updates.'\n            }, overrides);\n          }\n        });\n  }\n\n  /**\n   * Returns false if the given URL matches a few special URLs designed to skip opening a URL when clicking a\n   * notification. Otherwise returns true and the link will be opened.\n   * @param url\n     */\n  static shouldOpenNotificationUrl(url) {\n    return (url !== 'javascript:void(0);' &&\n            url !== 'do_not_open' &&\n            !contains(url, '_osp=do_not_open'));\n  }\n\n  /**\n   * Occurs when a notification is dismissed by the user (clicking the 'X') or all notifications are cleared.\n   * Supported on: Chrome 50+ only\n   */\n  static onNotificationClosed(event) {\n    log.debug(`Called %conNotificationClosed(${JSON.stringify(event, null, 4)}):`, getConsoleStyle('code'), event);\n    let notification = event.notification.data;\n\n    (swivel as any).broadcast('notification.dismissed', notification);\n    event.waitUntil(\n        ServiceWorker.executeWebhooks('notification.dismissed', notification)\n    );\n  }\n\n  /**\n   * After clicking a notification, determines the URL to open based on whether an action button was clicked or the\n   * notification body was clicked.\n   */\n  static async getNotificationUrlToOpen(notification): Promise<string> {\n    // Defaults to the URL the service worker was registered\n    // TODO: This should be fixed for HTTP sites\n    let launchUrl = self.registration.scope;\n\n    // Use the user-provided default URL if one exists\n    const { defaultNotificationUrl: dbDefaultNotificationUrl } = await Database.getAppState();\n    if (dbDefaultNotificationUrl)\n      launchUrl = dbDefaultNotificationUrl;\n\n    // If the user clicked an action button, use the URL provided by the action button\n    // Unless the action button URL is null\n    if (notification.action) {\n      // Find the URL tied to the action button that was clicked\n      for (let button of notification.buttons) {\n        if (button.action === notification.action &&\n            button.url &&\n            button.url !== '') {\n          launchUrl = button.url;\n        }\n      }\n    } else if (notification.url &&\n               notification.url !== '') {\n      // The user clicked the notification body instead of an action button\n      launchUrl = notification.url;\n    }\n\n    return launchUrl;\n  }\n\n  /**\n   * Occurs when the notification's body or action buttons are clicked. Does not occur if the notification is\n   * dismissed by clicking the 'X' icon. See the notification close event for the dismissal event.\n   */\n  static async onNotificationClicked(event) {\n    log.debug(`Called %conNotificationClicked(${JSON.stringify(event, null, 4)}):`, getConsoleStyle('code'), event);\n\n    // Close the notification first here, before we do anything that might fail\n    event.notification.close();\n\n    const notification = event.notification.data;\n\n    // Chrome 48+: Get the action button that was clicked\n    if (event.action)\n      notification.action = event.action;\n\n    let notificationClickHandlerMatch = 'exact';\n    let notificationClickHandlerAction = 'navigate';\n\n    const matchPreference = await Database.get<string>('Options', 'notificationClickHandlerMatch');\n    if (matchPreference)\n      notificationClickHandlerMatch = matchPreference;\n\n    const actionPreference = await this.database.get<string>('Options', 'notificationClickHandlerAction');\n    if (actionPreference)\n      notificationClickHandlerAction = actionPreference;\n\n    const activeClients = await ServiceWorker.getActiveClients();\n\n    let launchUrl = await ServiceWorker.getNotificationUrlToOpen(notification);\n    let notificationOpensLink = ServiceWorker.shouldOpenNotificationUrl(launchUrl);\n\n    /*\n     Check if we can focus on an existing tab instead of opening a new url.\n     If an existing tab with exactly the same URL already exists, then this existing tab is focused instead of\n     an identical new tab being created. With a special setting, any existing tab matching the origin will\n     be focused instead of an identical new tab being created.\n     */\n    let doNotOpenLink = false;\n    for (let client of activeClients) {\n      let clientUrl = client.url;\n      if ((client as any).isSubdomainIframe) {\n        const lastKnownHostUrl = await Database.get<string>('Options', 'lastKnownHostUrl');\n        clientUrl = lastKnownHostUrl;\n        if (!lastKnownHostUrl) {\n          clientUrl = await Database.get<string>('Options', 'defaultUrl');\n        }\n      }\n      let clientOrigin = '';\n      try {\n        clientOrigin = new URL(clientUrl).origin;\n      } catch (e) {\n        log.error(`Failed to get the HTTP site's actual origin:`, e);\n      }\n      let launchOrigin = null;\n      try {\n        // Check if the launchUrl is valid; it can be null\n        launchOrigin = new URL(launchUrl).origin;\n      } catch (e) {\n      }\n\n      if ((notificationClickHandlerMatch === 'exact' && clientUrl === launchUrl) ||\n        (notificationClickHandlerMatch === 'origin' && clientOrigin === launchOrigin)) {\n        if ((client.isSubdomainIframe && clientUrl === launchUrl) ||\n            (!client.isSubdomainIframe && client.url === launchUrl) ||\n          (notificationClickHandlerAction === 'focus' && clientOrigin === launchOrigin)) {\n          (swivel as any).emit(client.id, 'notification.clicked', notification);\n            try {\n              await client.focus();\n            } catch (e) {\n              log.error(\"Failed to focus:\", client, e);\n            }\n        } else {\n          /*\n          We must focus first; once the client navigates away, it may not be to a service worker-controlled page, and\n          the client ID may change, making it unable to focus.\n\n          client.navigate() is available on Chrome 49+ and Firefox 50+.\n           */\n          if (client.isSubdomainIframe) {\n            try {\n              log.debug('Client is subdomain iFrame. Attempting to focus() client.')\n              await client.focus();\n            } catch (e) {\n              log.error(\"Failed to focus:\", client, e);\n            }\n            if (notificationOpensLink) {\n              log.debug(`Redirecting HTTP site to ${launchUrl}.`);\n              await Database.put(\"NotificationOpened\", { url: launchUrl, data: notification, timestamp: Date.now() });\n              (swivel as any).emit(client.id, 'command.redirect', launchUrl);\n            } else {\n              log.debug('Not navigating because link is special.')\n            }\n          }\n          else if (client.navigate) {\n            try {\n              log.debug('Client is standard HTTPS site. Attempting to focus() client.')\n              await client.focus();\n            } catch (e) {\n              log.error(\"Failed to focus:\", client, e);\n            }\n            try {\n              if (notificationOpensLink) {\n                log.debug(`Redirecting HTTPS site to (${launchUrl}).`)\n                await Database.put(\"NotificationOpened\", { url: launchUrl, data: notification, timestamp: Date.now() });\n                await client.navigate(launchUrl);\n              } else {\n                log.debug('Not navigating because link is special.')\n              }\n            } catch (e) {\n              log.error(\"Failed to navigate:\", client, launchUrl, e);\n            }\n          } else {\n            /*\n            If client.navigate() isn't available, we have no other option but to open a new tab to the URL.\n             */\n            await Database.put(\"NotificationOpened\", { url: launchUrl, data: notification, timestamp: Date.now() });\n            await ServiceWorker.openUrl(launchUrl);\n          }\n        }\n        doNotOpenLink = true;\n        break;\n      }\n    }\n\n    if (notificationOpensLink && !doNotOpenLink) {\n      await Database.put(\"NotificationOpened\", { url: launchUrl, data: notification, timestamp: Date.now() });\n      await ServiceWorker.openUrl(launchUrl);\n    }\n\n    const { appId } = await Database.getAppConfig();\n    const { deviceId } = await Database.getSubscription();\n    if (appId && deviceId) {\n      await OneSignalApi.put('notifications/' + notification.id, {\n        app_id: appId,\n        player_id: deviceId,\n        opened: true\n      });\n    }\n    return await ServiceWorker.executeWebhooks('notification.clicked', notification);\n  }\n\n  /**\n   * Attempts to open the given url in a new browser tab. Called when a notification is clicked.\n   * @param url May not be well-formed.\n   */\n  static async openUrl(url): Promise<WindowClient> {\n    log.debug('Opening notification URL:', url);\n    try {\n      return await self.clients.openWindow(url);\n    } catch (e) {\n      log.warn(`Failed to open the URL '${url}':`, e);\n    }\n  }\n\n  static onServiceWorkerInstalled(event) {\n    // At this point, the old service worker is still in control\n    log.debug(`Called %conServiceWorkerInstalled(${JSON.stringify(event, null, 4)}):`, getConsoleStyle('code'), event);\n    log.info(`Installing service worker: %c${(self as any).location.pathname}`, getConsoleStyle('code'), `(version ${__VERSION__})`);\n\n    if (contains((self as any).location.pathname, \"OneSignalSDKWorker\"))\n      var serviceWorkerVersionType = 'WORKER1_ONE_SIGNAL_SW_VERSION';\n    else\n      var serviceWorkerVersionType = 'WORKER2_ONE_SIGNAL_SW_VERSION';\n\n\n    event.waitUntil(\n        Database.put(\"Ids\", {type: serviceWorkerVersionType, id: __VERSION__})\n            .then(() => self.skipWaiting())\n    );\n  }\n\n  /*\n   1/11/16: Enable the waiting service worker to immediately become the active service worker: https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting\n   */\n  static onServiceWorkerActivated(event) {\n    // The old service worker is gone now\n    log.debug(`Called %conServiceWorkerActivated(${JSON.stringify(event, null, 4)}):`, getConsoleStyle('code'), event);\n    var activationPromise = self.clients.claim()\n                                        .then(() => Database.get('Ids', 'userId'))\n                                        .then(userId => {\n                                          if (self.registration && userId) {\n                                            return ServiceWorker._subscribeForPush(self.registration).catch(e => log.error(e));\n                                          }\n                                        });\n    event.waitUntil(activationPromise);\n  }\n\n  static onFetch(event) {\n    event.respondWith(fetch(event.request));\n  }\n\n  static onPushSubscriptionChange(event) {\n    // Subscription expired\n    log.debug(`Called %conPushSubscriptionChange(${JSON.stringify(event, null, 4)}):`, getConsoleStyle('code'), event);\n    event.waitUntil(ServiceWorker._subscribeForPush(self.registration));\n  }\n\n  /**\n   * Simulates a service worker event.\n   * @param eventName An event name like 'pushsubscriptionchange'.\n   */\n  static simulateEvent(eventName) {\n    (self as any).dispatchEvent(new ExtendableEvent(eventName));\n  }\n\n  static _subscribeForPush(serviceWorkerRegistration) {\n    log.debug(`Called %c_subscribeForPush()`, getConsoleStyle('code'));\n\n    var appId = null;\n    return Database.get('Ids', 'appId')\n        .then(retrievedAppId => {\n          appId = retrievedAppId;\n          return serviceWorkerRegistration.pushManager.getSubscription()\n        }).then(oldSubscription => {\n          log.debug(`Resubscribing old subscription`, oldSubscription, `within the service worker ...`);\n          // Only re-subscribe if there was an existing subscription and we are on Chrome 54+ wth PushSubscriptionOptions\n          // Otherwise there's really no way to resubscribe since we don't have the manifest.json sender ID\n          if (oldSubscription && oldSubscription.options) {\n            return serviceWorkerRegistration.pushManager.subscribe(oldSubscription.options);\n          } else {\n            return Promise.resolve();\n          }\n        }).then(subscription => {\n          var subscriptionInfo: any = null;\n          if (subscription) {\n            subscriptionInfo = {};\n            log.debug(`Finished resubscribing for push:`, subscription);\n            if (typeof subscription.subscriptionId != \"undefined\") {\n              // Chrome 43 & 42\n              subscriptionInfo.endpointOrToken = subscription.subscriptionId;\n            }\n            else {\n              // Chrome 44+ and FireFox\n              // 4/13/16: We now store the full endpoint instead of just the registration token\n              subscriptionInfo.endpointOrToken = subscription.endpoint;\n            }\n\n            // 4/13/16: Retrieve p256dh and auth for new encrypted web push protocol in Chrome 50\n            if (subscription.getKey) {\n              // p256dh and auth are both ArrayBuffer\n              let p256dh = null;\n              try {\n                p256dh = subscription.getKey('p256dh');\n              } catch (e) {\n                // User is most likely running < Chrome < 50\n              }\n              let auth = null;\n              try {\n                auth = subscription.getKey('auth');\n              } catch (e) {\n                // User is most likely running < Firefox 45\n              }\n\n              if (p256dh) {\n                // Base64 encode the ArrayBuffer (not URL-Safe, using standard Base64)\n                let p256dh_base64encoded = btoa(\n                  String.fromCharCode.apply(null, new Uint8Array(p256dh)));\n                subscriptionInfo.p256dh = p256dh_base64encoded;\n              }\n              if (auth) {\n                // Base64 encode the ArrayBuffer (not URL-Safe, using standard Base64)\n                let auth_base64encoded = btoa(\n                  String.fromCharCode.apply(null, new Uint8Array(auth)));\n                subscriptionInfo.auth = auth_base64encoded;\n              }\n            }\n          }\n          else {\n            log.info('Could not subscribe your browser for push notifications.');\n          }\n\n          return ServiceWorker.registerWithOneSignal(appId, subscriptionInfo);\n        });\n  }\n\n  /**\n   * Creates a new or updates an existing OneSignal user (player) on the server.\n   *\n   * @param appId The app ID passed to init.\n   *        subscriptionInfo A hash containing 'endpointOrToken', 'auth', and 'p256dh'.\n   *\n   * @remarks Called from both the host page and HTTP popup.\n   *          If a user already exists and is subscribed, updates the session count by calling /players/:id/on_session; otherwise, a new player is registered via the /players endpoint.\n   *          Saves the user ID and registration ID to the local web database after the response from OneSignal.\n   */\n  static registerWithOneSignal(appId, subscriptionInfo) {\n    let deviceType = getDeviceTypeForBrowser();\n    return Promise.all([\n      Database.get('Ids', 'userId'),\n    ])\n        .then(([userId, subscription]) => {\n          if (!userId) {\n            return Promise.reject('No user ID found; cannot update existing player info');\n          }\n          let requestUrl = `players/${userId}`;\n\n          let requestData: any = {\n            app_id: appId,\n            device_type: deviceType,\n            language: Environment.getLanguage(),\n            timezone: new Date().getTimezoneOffset() * -60,\n            device_model: navigator.platform + \" \" + Browser.name,\n            device_os: Browser.version,\n            sdk: ServiceWorker.VERSION,\n          };\n\n          if (subscriptionInfo) {\n            requestData.identifier = subscriptionInfo.endpointOrToken;\n            // Although we're passing the full endpoint to OneSignal, we still need to store only the registration ID for our SDK API getRegistrationId()\n            // Parse out the registration ID from the full endpoint URL and save it to our database\n            let registrationId = subscriptionInfo.endpointOrToken.replace(new RegExp(\"^(https://android.googleapis.com/gcm/send/|https://updates.push.services.mozilla.com/push/)\"), \"\");\n            Database.put(\"Ids\", {type: \"registrationId\", id: registrationId});\n            // New web push standard in Firefox 46+ and Chrome 50+ includes 'auth' and 'p256dh' in PushSubscription\n            if (subscriptionInfo.auth) {\n              requestData.web_auth = subscriptionInfo.auth;\n            }\n            if (subscriptionInfo.p256dh) {\n              requestData.web_p256 = subscriptionInfo.p256dh;\n            }\n          }\n\n          return OneSignalApi.put(requestUrl, requestData);\n        })\n        .then((response: any) => {\n          if (response) {\n            if (!response.success) {\n              log.error('Resubscription registration with OneSignal failed:', response);\n            }\n            let { id: userId } = response;\n\n            if (userId) {\n              Database.put(\"Ids\", { type: \"userId\", id: userId });\n            }\n          } else {\n            // No user ID found, this returns undefined\n            log.debug('Resubscription registration failed because no user ID found.');\n          }\n        });\n  }\n\n  /**\n   * Returns a promise that is fulfilled with either the default title from the database (first priority) or the page title from the database (alternate result).\n   */\n  static _getTitle() {\n    return new Promise((resolve, reject) => {\n      Promise.all([Database.get('Options', 'defaultTitle'), Database.get('Options', 'pageTitle')])\n        .then(([defaultTitle, pageTitle]) => {\n          if (defaultTitle !== null) {\n            resolve(defaultTitle);\n          }\n          else if (pageTitle != null) {\n            resolve(pageTitle);\n          }\n          else {\n            resolve('');\n          }\n        });\n    });\n  }\n\n  /**\n   * Returns an array of raw notification objects, either fetched from the server (as from legacy GCM push), or read\n   * from the event.data.payload property (as from the new web push protocol).\n   * @param event\n   * @returns An array of notifications. The new web push protocol will only ever contain one notification, however\n   * an array is returned for backwards compatibility with the rest of the service worker plumbing.\n     */\n  static parseOrFetchNotifications(event) {\n    if (event.data) {\n      const isValidPayload = ServiceWorker.isValidPushPayload(event.data);\n      if (isValidPayload) {\n        log.debug('Received a valid encrypted push payload.');\n        return Promise.resolve([event.data.json()]);\n      } else {\n        return Promise.reject('Unexpected push message payload received: ' + event.data.text());\n        /*\n         We received a push message payload from another service provider or a malformed\n         payload. The last received notification will be displayed.\n         */\n      }\n    }\n    else return ServiceWorker.retrieveNotifications();\n  }\n\n  /**\n   * Returns true if the raw data payload is a OneSignal push message in the format of the new web push protocol.\n   * Otherwise returns false.\n   * @param rawData The raw PushMessageData from the push event's event.data, not already parsed to JSON.\n   */\n  static isValidPushPayload(rawData) {\n    try {\n      const payload = rawData.json();\n      if (payload &&\n          payload.custom &&\n          payload.custom.i &&\n          isValidUuid(payload.custom.i)) {\n        return true;\n      } else {\n        log.debug('isValidPushPayload: Valid JSON but missing notification UUID:', payload);\n        return false;\n      }\n    } catch (e) {\n      log.debug('isValidPushPayload: Parsing to JSON failed with:', e);\n      return false;\n    }\n  }\n\n  /**\n   * Retrieves unread notifications from OneSignal's servers. For Chrome and Firefox's legacy web push protocol,\n   * a push signal is sent to the service worker without any message contents, and the service worker must retrieve\n   * the contents from OneSignal's servers. In Chrome and Firefox's new web push protocols involving payloads, the\n   * notification contents will arrive with the push signal. The legacy format must be supported for a while.\n   */\n  static retrieveNotifications() {\n    return new Promise((resolve, reject) => {\n      var notifications = [];\n      // Each entry is like:\n      /*\n       Object {custom: Object, icon: \"https://onesignal.com/images/notification_logo.png\", alert: \"asd\", title: \"ss\"}\n       alert: \"asd\"\n       custom: Object\n       i: \"6d7ec82f-bc56-494f-b73a-3a3b48baa2d8\"\n       __proto__: Object\n       icon: \"https://onesignal.com/images/notification_logo.png\"\n       title: \"ss\"\n       __proto__: Object\n       */\n      Database.get('Ids', 'userId')\n        .then(userId => {\n          if (userId) {\n            log.debug(`Legacy push signal received, retrieving contents from players/${userId}/chromeweb_notification`);\n            return OneSignalApi.get(`players/${userId}/chromeweb_notification`);\n          }\n          else {\n            log.debug('Tried to get notification contents, but IndexedDB is missing user ID info.');\n            return Promise.all([\n                    Database.get('Ids', 'appId'),\n                    self.registration.pushManager.getSubscription().then(subscription => subscription.endpoint)\n                  ])\n                .then(([appId, identifier]) => {\n                  let deviceType = getDeviceTypeForBrowser();\n                  // Get the user ID from OneSignal\n                  return OneSignalApi.getUserIdFromSubscriptionIdentifier(appId, deviceType, identifier).then(recoveredUserId => {\n                    if (recoveredUserId) {\n                      log.debug('Recovered OneSignal user ID:', recoveredUserId);\n                      // We now have our OneSignal user ID again\n                      return Promise.all([\n                        Database.put('Ids', {type: 'userId', id: recoveredUserId}),\n                        Database.put('Ids', {\n                          type: 'registrationId',\n                          id: (identifier as string).replace(new RegExp(\"^(https://android.googleapis.com/gcm/send/|https://updates.push.services.mozilla.com/push/)\"), \"\")\n                        }),\n                      ]).then(() => {\n                        // Try getting the notification again\n                        log.debug('Attempting to retrieve the notification again now with a recovered user ID.');\n                        return OneSignalApi.get(`players/${recoveredUserId}/chromeweb_notification`);\n                      });\n                    } else {\n                      return Promise.reject('Recovered user ID was null. Unsubscribing from push notifications.');\n                    }\n                  });\n                })\n                .catch(error => {\n                  log.debug('Unsuccessfully attempted to recover OneSignal user ID:', error);\n                  // Actually unsubscribe from push so this user doesn't get bothered again\n                  return self.registration.pushManager.getSubscription()\n                      .then(subscription => {\n                        return subscription.unsubscribe()\n                      })\n                      .then (unsubscriptionResult => {\n                        log.debug('Unsubscribed from push notifications result:', unsubscriptionResult);\n                        ServiceWorker.UNSUBSCRIBED_FROM_NOTIFICATIONS = true;\n                      });\n                });\n          }\n        })\n        .then((response: any) => {\n          // The response is an array literal -- response.json() has been called by apiCall()\n          // The result looks like this:\n          // OneSignalApi.get('players/7442a553-5f61-4b3e-aedd-bb574ef6946f/chromeweb_notification').then(function(response) { log.debug(response); });\n          // [\"{\"custom\":{\"i\":\"6d7ec82f-bc56-494f-b73a-3a3b48baa2d8\"},\"icon\":\"https://onesignal.com/images/notification_logo.png\",\"alert\":\"asd\",\"title\":\"ss\"}\"]\n          // ^ Notice this is an array literal with JSON data inside\n          for (var i = 0; i < response.length; i++) {\n            notifications.push(JSON.parse(response[i]));\n          }\n          if (notifications.length == 0) {\n            log.warn('OneSignal Worker: Received a GCM push signal, but there were no messages to retrieve. Are you' +\n                ' using the wrong API URL?', API_URL);\n          }\n          resolve(notifications);\n        });\n    });\n  }\n}\n\n// Expose this class to the global scope\nif (typeof self === \"undefined\" &&\n    typeof global !== \"undefined\") {\n  (global as any).OneSignalWorker = ServiceWorker;\n} else {\n  (self as any).OneSignalWorker = ServiceWorker;\n}\n\n// Set logging to the appropriate level\nlog.setDefaultLevel(Environment.isDev() ? (log as any).levels.TRACE : (log as any).levels.ERROR);\n\n// Print it's happy time!\nlog.info(`%cOneSignal Service Worker loaded (version ${Environment.version()}, ${Environment.getEnv()} environment).`, getConsoleStyle('bold'));\n\n// Run our main file\nif (typeof self !== \"undefined\") {\n  ServiceWorker.run();\n}","import ActiveAnimatedElement from './ActiveAnimatedElement';\n\n\nexport default class Badge extends ActiveAnimatedElement {\n\n  constructor() {\n    super('.onesignal-bell-launcher-badge', 'onesignal-bell-launcher-badge-opened', null, 'onesignal-bell-launcher-badge-active', null, 'hidden');\n  }\n\n  increment() {\n    // If it IS a number (is not not a number)\n    if (!isNaN(this.content as any)) {\n      let badgeNumber = +this.content; // Coerce to int\n      badgeNumber += 1;\n      this.content = badgeNumber.toString();\n      return badgeNumber;\n    }\n  }\n\n  decrement() {\n    // If it IS a number (is not not a number)\n    if (!isNaN(this.content as any)) {\n      let badgeNumber = +this.content; // Coerce to int\n      badgeNumber -= 1;\n      if (badgeNumber > 0)\n        this.content = badgeNumber.toString();\n      else\n        this.content = '';\n      return badgeNumber;\n    }\n  }\n}","import {removeDomElement, addDomElement} from \"../utils\";\nimport Event from \"../Event\";\nimport ActiveAnimatedElement from \"./ActiveAnimatedElement\";\nimport Bell from \"./Bell\";\nimport LimitStore from \"../LimitStore\";\nimport Message from \"./Message\";\nimport SubscriptionHelper from \"../helpers/SubscriptionHelper\";\n\n\nexport default class Button extends ActiveAnimatedElement {\n\n  public events: any;\n  public bell: any;\n\n  constructor(bell) {\n    super('.onesignal-bell-launcher-button', null, null, 'onesignal-bell-launcher-button-active', null, 'shown', '');\n\n    this.bell = bell;\n    this.events = {\n      mouse: 'bell.launcher.button.mouse'\n    };\n\n    this.element.addEventListener('touchstart', (e) => {\n      this.onHovering(e);\n      this.onTap(e);\n    });\n\n    this.element.addEventListener('mouseenter', (e) => {\n      this.onHovering(e);\n    });\n\n    this.element.addEventListener('mouseleave', (e) => {\n      this.onHovered(e);\n    });\n    this.element.addEventListener('touchmove', (e) => {\n      this.onHovered(e);\n    });\n\n    this.element.addEventListener('mousedown', (e) => {\n      this.onTap(e);\n    });\n\n    this.element.addEventListener('mouseup', (e) => {\n      this.onEndTap(e);\n    });\n\n    this.element.addEventListener('click', (e) => {\n      this.onHovered(e);\n      this.onClick(e);\n    });\n  }\n\n  onHovering(e) {\n    if (LimitStore.isEmpty(this.events.mouse) || LimitStore.getLast(this.events.mouse) === 'out') {\n      Event.trigger(Bell.EVENTS.HOVERING);\n    }\n    LimitStore.put(this.events.mouse, 'over');\n  }\n\n  onHovered(e) {\n    LimitStore.put(this.events.mouse, 'out');\n    Event.trigger(Bell.EVENTS.HOVERED);\n  }\n\n  onTap(e) {\n    this.pulse();\n    this.activate();\n    this.bell.badge.activate();\n  }\n\n  onEndTap(e) {\n    this.inactivate();\n    this.bell.badge.inactivate();\n  }\n\n  onClick(e) {\n    Event.trigger(Bell.EVENTS.BELL_CLICK);\n    Event.trigger(Bell.EVENTS.LAUNCHER_CLICK);\n\n    if (this.bell.message.shown && this.bell.message.contentType == Message.TYPES.MESSAGE) {\n      // A message is being shown, it'll disappear soon\n      return;\n    }\n\n    var optedOut = LimitStore.getLast('subscription.optedOut');\n    if (this.bell.unsubscribed) {\n      if (optedOut) {\n        // The user is manually opted out, but still \"really\" subscribed\n        this.bell.launcher.activateIfInactive().then(() => {\n          this.bell.showDialogProcedure();\n        });\n      }\n      else {\n        // The user is actually subscribed, register him for notifications\n        OneSignal.registerForPushNotifications();\n        //// Show the 'Click Allow to receive notifications' tip, if they haven't already enabled permissions\n        //if (OneSignal.getNotificationPermission() === 'default') {\n        //  this.bell.message.display(Message.TYPES.MESSAGE, this.bell.text['message.action.subscribing'], Message.TIMEOUT)\n        //}\n        this.bell._ignoreSubscriptionState = true;\n        OneSignal.once(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, isSubscribed => {\n          this.bell.message.display(Message.TYPES.MESSAGE, this.bell.text['message.action.subscribed'], Message.TIMEOUT)\n            .then(() => {\n              this.bell._ignoreSubscriptionState = false;\n              this.bell.launcher.inactivate();\n            });\n        });\n      }\n    }\n    else if (this.bell.subscribed) {\n      this.bell.launcher.activateIfInactive().then(() => {\n        this.bell.showDialogProcedure();\n      });\n    }\n    else if (this.bell.blocked) {\n      if (SubscriptionHelper.isUsingSubscriptionWorkaround()) {\n        // Show the HTTP popup so users can re-allow notifications\n        OneSignal.registerForPushNotifications();\n      } else {\n        this.bell.launcher.activateIfInactive().then(() => {\n          this.bell.showDialogProcedure();\n        });\n      }\n    }\n    return this.bell.message.hide();\n  }\n\n  pulse() {\n    removeDomElement('.pulse-ring');\n    addDomElement(this.element, 'beforeend', '<div class=\"pulse-ring\"></div>');\n    this.bell.setCustomColorsIfSpecified();\n  }\n}","import {clearDomElementChildren, once, addDomElement} from '../utils';\nimport Event from '../Event';\nimport AnimatedElement from './AnimatedElement';\nimport * as Browser from 'bowser';\nimport Bell from './Bell';\nimport { HOST_URL } from '../vars';\n\n\n\nexport default class Dialog extends AnimatedElement {\n\n  public bell: any;\n  public subscribeButtonId: any;\n  public unsubscribeButtonId: any;\n  public notificationIcons: any;\n\n  constructor(bell) {\n    super('.onesignal-bell-launcher-dialog', 'onesignal-bell-launcher-dialog-opened', null, 'hidden', ['opacity', 'transform'], '.onesignal-bell-launcher-dialog-body');\n\n    this.bell = bell;\n    this.subscribeButtonId = '#onesignal-bell-container .onesignal-bell-launcher #subscribe-button';\n    this.unsubscribeButtonId = '#onesignal-bell-container .onesignal-bell-launcher #unsubscribe-button';\n    this.notificationIcons = null;\n  }\n\n  getPlatformNotificationIcon() {\n    if (this.notificationIcons) {\n      if (Browser.chrome || Browser.firefox) {\n        return this.notificationIcons.chrome || this.notificationIcons.safari;\n      }\n      else if (Browser.safari) {\n        return this.notificationIcons.safari || this.notificationIcons.chrome;\n      }\n    }\n    else return null;\n  }\n\n  show() {\n    return this.updateBellLauncherDialogBody()\n      .then(() => super.show());\n  }\n\n  get subscribeButtonSelectorId() {\n    return 'subscribe-button';\n  }\n\n  get unsubscribeButtonSelectorId() {\n    return 'unsubscribe-button';\n  }\n\n  get subscribeButton() {\n    return this.element.querySelector('#' + this.subscribeButtonSelectorId);\n  }\n\n  get unsubscribeButton() {\n    return this.element.querySelector('#' + this.unsubscribeButtonSelectorId);\n  }\n\n  updateBellLauncherDialogBody() {\n    return OneSignal.getSubscription().then((currentSetSubscription) => {\n      clearDomElementChildren(document.querySelector(this.nestedContentSelector));\n      let contents = 'Nothing to show.';\n\n      var footer = '';\n      if (this.bell.options.showCredit) {\n        footer = `<div class=\"divider\"></div><div class=\"kickback\">Powered by <a href=\"https://onesignal.com\" class=\"kickback\" target=\"_blank\">OneSignal</a></div>`;\n      }\n\n      if (this.bell.state === Bell.STATES.SUBSCRIBED && currentSetSubscription === true ||\n        this.bell.state === Bell.STATES.UNSUBSCRIBED && currentSetSubscription === false) {\n\n        let notificationIconHtml = '';\n        let imageUrl = this.getPlatformNotificationIcon();\n        if (imageUrl) {\n          notificationIconHtml = `<div class=\"push-notification-icon\"><img src=\"${imageUrl}\"></div>`\n        } else {\n          notificationIconHtml = `<div class=\"push-notification-icon push-notification-icon-default\"></div>`\n        }\n\n        let buttonHtml = '';\n        if (this.bell.state !== Bell.STATES.SUBSCRIBED)\n          buttonHtml = `<button type=\"button\" class=\"action\" id=\"${this.subscribeButtonSelectorId}\">${this.bell.text['dialog.main.button.subscribe']}</button>`;\n        else\n          buttonHtml = `<button type=\"button\" class=\"action\" id=\"${this.unsubscribeButtonSelectorId}\">${this.bell.text['dialog.main.button.unsubscribe']}</button>`;\n\n        contents = `<h1>${this.bell.text['dialog.main.title']}</h1><div class=\"divider\"></div><div class=\"push-notification\">${notificationIconHtml}<div class=\"push-notification-text-container\"><div class=\"push-notification-text push-notification-text-short\"></div><div class=\"push-notification-text\"></div><div class=\"push-notification-text push-notification-text-medium\"></div><div class=\"push-notification-text\"></div><div class=\"push-notification-text push-notification-text-medium\"></div></div></div><div class=\"action-container\">${buttonHtml}</div>${footer}`;\n      }\n      else if (this.bell.state === Bell.STATES.BLOCKED) {\n        let imageUrl = null;\n        if (Browser.chrome) {\n          if (!Browser.mobile && !Browser.tablet) {\n            imageUrl = HOST_URL + '/bell/chrome-unblock.jpg';\n          }\n        }\n        else if (Browser.firefox)\n          imageUrl = HOST_URL + '/bell/firefox-unblock.jpg';\n        else if (Browser.safari)\n          imageUrl = HOST_URL + '/bell/safari-unblock.jpg';\n\n        let instructionsHtml = '';\n        if (imageUrl) {\n          instructionsHtml = `<a href=\"${imageUrl}\" target=\"_blank\"><img src=\"${imageUrl}\"></a></div>`;\n        }\n\n        if ((Browser.mobile || Browser.tablet) && Browser.chrome) {\n          instructionsHtml = `<ol><li>Access <strong>Settings</strong> by tapping the three menu dots <strong>⋮</strong></li><li>Click <strong>Site settings</strong> under Advanced.</li><li>Click <strong>Notifications</strong>.</li><li>Find and click this entry for this website.</li><li>Click <strong>Notifications</strong> and set it to <strong>Allow</strong>.</li></ol>`;\n        }\n        contents = `<h1>${this.bell.text['dialog.blocked.title']}</h1><div class=\"divider\"></div><div class=\"instructions\"><p>${this.bell.text['dialog.blocked.message']}</p>${instructionsHtml}</div>${footer}`;\n      }\n      addDomElement(document.querySelector(this.nestedContentSelector), 'beforeend', contents);\n      if (this.subscribeButton) {\n        this.subscribeButton.addEventListener('click', () => Event.trigger(Bell.EVENTS.SUBSCRIBE_CLICK));\n      }\n      if (this.unsubscribeButton) {\n        this.unsubscribeButton.addEventListener('click', () => Event.trigger(Bell.EVENTS.UNSUBSCRIBE_CLICK));\n      }\n      this.bell.setCustomColorsIfSpecified();\n    });\n  }\n}","import { hasCssClass, addCssClass, removeCssClass, nothing, contains, once } from '../utils';\nimport * as log from 'loglevel';\nimport ActiveAnimatedElement from './ActiveAnimatedElement';\nimport { InvalidStateError, InvalidStateReason } from \"../errors/InvalidStateError\";\n\n\nexport default class Launcher extends ActiveAnimatedElement {\n\n  public bell: any;\n  public wasInactive: boolean;\n\n  constructor(bell) {\n    super('.onesignal-bell-launcher', 'onesignal-bell-launcher-active', null, null, 'onesignal-bell-launcher-inactive', 'hidden', 'active');\n\n    this.bell = bell;\n    this.wasInactive = false;\n  }\n\n  async resize(size) {\n    if (!this.element) {\n      // Notify button doesn't exist\n      throw new InvalidStateError(InvalidStateReason.MissingDomElement);\n    }\n\n    // If the size is the same, do nothing and resolve an empty promise\n    if ((size === 'small' && hasCssClass(this.element, 'onesignal-bell-launcher-sm')) ||\n        (size === 'medium' && hasCssClass(this.element, 'onesignal-bell-launcher-md')) ||\n        (size === 'large' && hasCssClass(this.element, 'onesignal-bell-launcher-lg'))) {\n      return Promise.resolve(this);\n    }\n    removeCssClass(this.element, 'onesignal-bell-launcher-sm');\n    removeCssClass(this.element, 'onesignal-bell-launcher-md');\n    removeCssClass(this.element, 'onesignal-bell-launcher-lg');\n    if (size === 'small') {\n      addCssClass(this.element, 'onesignal-bell-launcher-sm');\n    }\n    else if (size === 'medium') {\n      addCssClass(this.element, 'onesignal-bell-launcher-md');\n    }\n    else if (size === 'large') {\n      addCssClass(this.element, 'onesignal-bell-launcher-lg');\n    }\n    else {\n      throw new Error('Invalid OneSignal bell size ' + size);\n    }\n    if (!this.shown) {\n      return this;\n    }\n    else {\n      return await new Promise((resolve) => {\n        // Once the launcher has finished shrinking down\n        if (this.targetTransitionEvents.length == 0) {\n          return resolve(this);\n        } else {\n          var timerId = setTimeout(() => {\n            log.debug(`Launcher did not completely resize (state: ${this.state}, activeState: ${this.activeState}).`)\n          }, this.transitionCheckTimeout);\n          once(this.element, 'transitionend', (event, destroyListenerFn) => {\n            if (event.target === this.element &&\n              contains(this.targetTransitionEvents, event.propertyName)) {\n              clearTimeout(timerId);\n              // Uninstall the event listener for transitionend\n              destroyListenerFn();\n              return resolve(this);\n            }\n          }, true);\n        }\n      });\n    }\n  }\n\n  activateIfInactive() {\n    if (this.inactive) {\n      this.wasInactive = true;\n      return this.activate();\n    }\n    else return nothing();\n  }\n\n  inactivateIfWasInactive() {\n    if (this.wasInactive) {\n      this.wasInactive = false;\n      return this.inactivate();\n    }\n    else return nothing();\n  }\n\n  clearIfWasInactive() {\n    this.wasInactive = false;\n  }\n\n  inactivate() {\n    return this.bell.message.hide()\n      .then(() => {\n        if (this.bell.badge.content.length > 0) {\n          return this.bell.badge.hide()\n            .then(() => Promise.all([super.inactivate(), this.resize('small')]))\n            .then(() => this.bell.badge.show());\n        }\n        else {\n          return Promise.all([super.inactivate(), this.resize('small')]);\n        }\n      });\n  }\n\n  activate() {\n    if (this.bell.badge.content.length > 0) {\n      return this.bell.badge.hide()\n        .then(() => Promise.all([super.activate(), this.resize(this.bell.options.size)]));\n    }\n    else {\n      return Promise.all([super.activate(), this.resize(this.bell.options.size)]);\n    }\n  }\n}\n","import Environment from './Environment';\nimport { getSdkLoadCount, incrementSdkLoadCount, isPushNotificationsSupported } from './utils';\nimport * as log from 'loglevel';\n\n\nif (Environment.isBrowser()) {\n  incrementSdkLoadCount();\n  if (getSdkLoadCount() > 1) {\n    log.warn(`OneSignal: The web push SDK is included more than once. For optimal performance, please include our ` +\n      `SDK only once on your page.`);\n    log.debug(`OneSignal: Exiting from SDK initialization to prevent double-initialization errors. ` +\n      `Occurred ${getSdkLoadCount()} times.`);\n  } else {\n    // We're running in the host page, iFrame of the host page, or popup window\n    // Load OneSignal's web SDK\n    if (typeof OneSignal !== \"undefined\")\n      var predefinedOneSignalPushes = OneSignal;\n\n    if (isPushNotificationsSupported()) {\n      (window as any).OneSignal = require('./OneSignal').default;\n    } else {\n      log.debug('OneSignal: Push notifications are not supported. A stubbed version of the SDK will be initialized.');\n\n      (window as any).OneSignal = require('./OneSignalStub').default;\n    }\n\n    if (predefinedOneSignalPushes)\n      for (var i = 0; i < predefinedOneSignalPushes.length; i++)\n        OneSignal.push(predefinedOneSignalPushes[i]);\n  }\n}\nelse if (Environment.isServiceWorker()) {\n  // We're running as the service worker\n  (self as any).OneSignal = require('./service-worker/ServiceWorker').default;\n}","import OneSignalError from \"./OneSignalError\";\r\n\r\nexport enum InvalidArgumentReason {\r\n  Empty,\r\n  Malformed\r\n}\r\n\r\nexport class InvalidArgumentError extends OneSignalError {\r\n  argument: string;\r\n  reason: string;\r\n\r\n  constructor(argName: string, reason: InvalidArgumentReason) {\r\n    switch (reason) {\r\n      case InvalidArgumentReason.Empty:\r\n        super(`Supply a non-empty value to '${argName}'.`);\r\n        break;\r\n      case InvalidArgumentReason.Malformed:\r\n        super(`The value for '${argName}' was malformed.`);\r\n        break;\r\n    }\r\n    this.argument = argName;\r\n    this.reason = InvalidArgumentReason[reason];\r\n  }\r\n}","import OneSignalError from \"./OneSignalError\";\r\n\r\n\r\nexport enum NotSubscribedReason {\r\n  Unknown,\r\n  NoDeviceId,\r\n  OptedOut\r\n}\r\n\r\nexport class NotSubscribedError extends OneSignalError {\r\n  reason: string;\r\n\r\n  constructor(reason: NotSubscribedReason) {\r\n    switch (reason) {\r\n      case NotSubscribedReason.Unknown || NotSubscribedReason.NoDeviceId:\r\n        super('This operation can only be performed after the user is subscribed.');\r\n        break;\r\n      case NotSubscribedReason.OptedOut:\r\n        super('The user has manually opted out of receiving of notifications. This operation can only be performed after the user is fully resubscribed.');\r\n        break;\r\n    }\r\n    this.reason = NotSubscribedReason[reason];\r\n  }\r\n}","import {DEV_FRAME_HOST, STAGING_FRAME_HOST} from \"../vars\";\r\nimport Environment from \"../Environment\";\r\nimport * as log from \"loglevel\";\r\nimport Event from \"../Event\";\r\nimport Database from \"../services/Database\";\r\nimport {\r\n  getConsoleStyle,\r\n  executeAndTimeoutPromiseAfter,\r\n  unsubscribeFromPush\r\n} from \"../utils\";\r\nimport * as objectAssign from \"object-assign\";\r\nimport Postmam from \"../Postmam\";\r\nimport MainHelper from \"./MainHelper\";\r\nimport ServiceWorkerHelper from \"./ServiceWorkerHelper\";\r\nimport InitHelper from \"./InitHelper\";\r\nimport EventHelper from \"./EventHelper\";\r\nimport SubscriptionHelper from \"./SubscriptionHelper\";\r\nimport { InvalidStateReason } from \"../errors/InvalidStateError\";\r\nimport TestHelper from './TestHelper';\r\n\r\ndeclare var OneSignal: any;\r\n\r\n\r\nexport default class HttpHelper {\r\n\r\n  static async isShowingHttpPermissionRequest() {\r\n    if (SubscriptionHelper.isUsingSubscriptionWorkaround()) {\r\n      return await new Promise((resolve, reject) => {\r\n        OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.IS_SHOWING_HTTP_PERMISSION_REQUEST, null, reply => {\r\n          resolve(reply.data);\r\n        });\r\n      });\r\n    } else {\r\n      return OneSignal._showingHttpPermissionRequest;\r\n    }\r\n  }\r\n\r\n  // Http only - Only called from iframe's init.js\r\n  static initHttp(options) {\r\n    log.debug(`Called %cinitHttp(${JSON.stringify(options, null, 4)})`, getConsoleStyle('code'));\r\n\r\n    ServiceWorkerHelper.applyServiceWorkerEnvPrefixes();\r\n\r\n    var creator = window.opener || window.parent;\r\n\r\n    if (creator == window) {\r\n      document.write(`<span style='font-size: 14px; color: red; font-family: sans-serif;'>OneSignal: This page cannot be directly opened, and\r\nmust be opened as a result of a subscription call.</span>`);\r\n      return;\r\n    }\r\n\r\n    // Forgetting this makes all our APIs stall forever because the promises expect this to be true\r\n    OneSignal.config = options || {};\r\n    OneSignal.initialized = true;\r\n\r\n    let sendToOrigin = options.origin;\r\n    let receiveFromOrigin = options.origin;\r\n\r\n    let preinitializePromise = Promise.resolve();\r\n\r\n    OneSignal._thisIsThePopup = options.isPopup;\r\n    if (Environment.isPopup() || OneSignal._thisIsThePopup) {\r\n      OneSignal.popupPostmam = new Postmam(window.opener, sendToOrigin, receiveFromOrigin);\r\n      // The host page will receive this event, and then call connect()\r\n      OneSignal.popupPostmam.postMessage(OneSignal.POSTMAM_COMMANDS.POPUP_BEGIN_MESSAGEPORT_COMMS, null);\r\n      OneSignal.popupPostmam.listen();\r\n      OneSignal.popupPostmam.on('connect', e => {\r\n        log.debug(`(${Environment.getEnv()}) The host page is now ready to receive commands from the HTTP popup.`);\r\n        Event.trigger('httpInitialize');\r\n      });\r\n    }\r\n\r\n    OneSignal._thisIsTheModal = options.isModal;\r\n    if (OneSignal._thisIsTheModal) {\r\n      OneSignal.modalPostmam = new Postmam(window.parent, sendToOrigin, receiveFromOrigin);\r\n    }\r\n\r\n    OneSignal.iframePostmam = new Postmam(window, sendToOrigin, receiveFromOrigin);\r\n    OneSignal.iframePostmam.listen();\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.CONNECTED, e => {\r\n      log.debug(`(${Environment.getEnv()}) Fired Postmam connect event!`);\r\n    });\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.REMOTE_NOTIFICATION_PERMISSION, message => {\r\n      OneSignal.getNotificationPermission()\r\n               .then(permission => message.reply(permission));\r\n      return false;\r\n    });\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.REMOTE_DATABASE_GET, message => {\r\n      // retrievals is an array of key-value pairs e.g. [{table: 'Ids', keys: 'userId'}, {table: 'Ids', keys: 'registrationId'}]\r\n      let retrievals = message.data;\r\n      let retrievalOpPromises = [];\r\n      for (let retrieval of retrievals) {\r\n        let {table, key} = retrieval;\r\n        retrievalOpPromises.push(Database.get(table, key));\r\n      }\r\n      Promise.all(retrievalOpPromises)\r\n             .then(results => message.reply(results));\r\n      return false;\r\n    });\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.REMOTE_DATABASE_PUT, message => {\r\n      // insertions is an array of key-value pairs e.g. [table: {'Options': keypath: {key: persistNotification, value: '...'}}, {table: 'Ids', keypath: {type: 'userId', id: '...'}]\r\n      // It's formatted that way because our IndexedDB database is formatted that way\r\n      let insertions = message.data;\r\n      let insertionOpPromises = [];\r\n      for (let insertion of insertions) {\r\n        let {table, keypath} = insertion;\r\n        insertionOpPromises.push(Database.put(table, keypath));\r\n      }\r\n      Promise.all(insertionOpPromises)\r\n             .then(results => message.reply(OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE));\r\n      return false;\r\n    });\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.REMOTE_DATABASE_REMOVE, message => {\r\n      // removals is an array of key-value pairs e.g. [table: {'Options': keypath: {key: persistNotification, value: '...'}}, {table: 'Ids', keypath: {type: 'userId', id: '...'}]\r\n      // It's formatted that way because our IndexedDB database is formatted that way\r\n      let removals = message.data;\r\n      let removalOpPromises = [];\r\n      for (let removal of removals) {\r\n        let {table, keypath} = removal;\r\n        removalOpPromises.push(Database.remove(table, keypath));\r\n      }\r\n      Promise.all(removalOpPromises)\r\n             .then(results => message.reply(OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE));\r\n      return false;\r\n    });\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.IFRAME_POPUP_INITIALIZE, message => {\r\n      log.info(`(${Environment.getEnv()}) The iFrame has just received initOptions from the host page!`);\r\n\r\n      preinitializePromise.then(() => {\r\n        OneSignal.config = objectAssign(message.data.hostInitOptions, options, {\r\n          defaultUrl: message.data.defaultUrl,\r\n          pageUrl: message.data.pageUrl,\r\n          pageTitle: message.data.pageTitle\r\n        });\r\n\r\n        InitHelper.installNativePromptPermissionChangedHook();\r\n\r\n        let opPromises = [];\r\n        if (options.continuePressed) {\r\n          opPromises.push(OneSignal.setSubscription(true));\r\n        }\r\n        // 3/30/16: For HTTP sites, put the host page URL as default URL if one doesn't exist already\r\n        opPromises.push(Database.get('Options', 'defaultUrl').then(defaultUrl => {\r\n          if (!defaultUrl) {\r\n            return Database.put('Options', {key: 'defaultUrl', value: new URL(OneSignal.config.defaultUrl).origin});\r\n          }\r\n        }));\r\n\r\n        /**\r\n         * When a user is on http://example.com and receives a notification, we want to open a new window only if the\r\n         * notification's URL is different from http://example.com. The service worker, which only controls\r\n         * subdomain.onesignal.com, doesn't know that the host URL is http://example.com. Although defaultUrl above\r\n         * sets the HTTP's origin, this can be modified if users call setDefaultTitle(). lastKnownHostUrl therefore\r\n         * stores the last visited full page URL.\r\n         */\r\n        opPromises.push(\r\n            Database.put('Options', {key: 'lastKnownHostUrl', value: OneSignal.config.pageUrl})\r\n        );\r\n\r\n        opPromises.push(InitHelper.initSaveState());\r\n        opPromises.push(InitHelper.storeInitialValues());\r\n        opPromises.push(InitHelper.saveInitOptions());\r\n        Promise.all(opPromises as any[])\r\n               .then(() => {\r\n                 /* 3/20/16: In the future, if navigator.serviceWorker.ready is unusable inside of an insecure iFrame host, adding a message event listener will still work. */\r\n                 //if (navigator.serviceWorker) {\r\n                 //log.info('We have added an event listener for service worker messages.', Environment.getEnv());\r\n                 //navigator.serviceWorker.addEventListener('message', function(event) {\r\n                 //  log.info('Wow! We got a message!', event);\r\n                 //});\r\n                 //}\r\n\r\n                 if (navigator.serviceWorker && window.location.protocol === 'https:') {\r\n                   try {\r\n                     MainHelper.establishServiceWorkerChannel();\r\n                   } catch (e) {\r\n                     log.error(`Error interacting with Service Worker inside an HTTP-hosted iFrame:`, e);\r\n                   }\r\n                 }\r\n\r\n                 message.reply(OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE);\r\n               });\r\n      });\r\n    });\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.UNSUBSCRIBE_FROM_PUSH, message => {\r\n      log.debug(Environment.getEnv() + \" (Expected iFrame) has received the unsubscribe from push method.\");\r\n      unsubscribeFromPush()\r\n        .then(() => message.reply(OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE))\r\n        .catch(e => log.debug('Failed to unsubscribe from push remotely.', e));\r\n    });\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.SHOW_HTTP_PERMISSION_REQUEST, message => {\r\n      log.debug(Environment.getEnv() + \" Calling showHttpPermissionRequest() inside the iFrame, proxied from host.\");\r\n      let options = {};\r\n      if (message.data) {\r\n        options = message.data;\r\n      }\r\n      log.debug(Environment.getEnv() + 'HTTP permission request showing, message data:', message);\r\n      OneSignal.showHttpPermissionRequest(options)\r\n               .then(result => {\r\n                 message.reply({status: 'resolve', result: result});\r\n               })\r\n               .catch(e => {\r\n                 if (e && e.reason === InvalidStateReason[InvalidStateReason.PushPermissionAlreadyGranted]) {\r\n                  // Don't do anything for this error, too common\r\n                 } else {\r\n                   message.reply({ status: 'reject', result: e })\r\n                 }\r\n               });\r\n    });\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.IS_SHOWING_HTTP_PERMISSION_REQUEST, async message => {\r\n      const isShowingHttpPermReq = await HttpHelper.isShowingHttpPermissionRequest();\r\n      message.reply(isShowingHttpPermReq);\r\n      return false;\r\n    });\r\n    OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.MARK_PROMPT_DISMISSED, message => {\r\n      log.debug('(Reposted from iFrame -> Host) Marking prompt as dismissed.');\r\n      TestHelper.markHttpsNativePromptDismissed();\r\n      message.reply(OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE);\r\n      return false;\r\n    });\r\n    if (Environment.isIframe()) {\r\n      Event.trigger('httpInitialize');\r\n    }\r\n  }\r\n\r\n  static initPopup() {\r\n    OneSignal.config = {};\r\n    OneSignal.initialized = true;\r\n\r\n    ServiceWorkerHelper.applyServiceWorkerEnvPrefixes();\r\n\r\n    // Do not register OneSignalSDKUpdaterWorker.js for HTTP popup sites; the file does not exist\r\n    OneSignal.isPushNotificationsEnabled(isEnabled => {\r\n      if (!isEnabled) {\r\n        navigator.serviceWorker.register(OneSignal.SERVICE_WORKER_PATH, OneSignal.SERVICE_WORKER_PARAM).then(SubscriptionHelper.enableNotifications, ServiceWorkerHelper.registerError);\r\n      } else {\r\n        window.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads the iFrame with the OneSignal subdomain on the page so that subsequent SDK tasks can run on the service-worker-controlled origin.\r\n   */\r\n  static loadSubdomainIFrame() {\r\n    let subdomainLoadPromise = new Promise((resolve, reject) => {\r\n      log.debug(`Called %cloadSubdomainIFrame()`, getConsoleStyle('code'));\r\n\r\n      log.debug('Loading subdomain iFrame:', OneSignal.iframeUrl);\r\n      let iframe = MainHelper.createHiddenDomIFrame(OneSignal.iframeUrl);\r\n      iframe.onload = () => {\r\n        log.info('iFrame onload event was called for:', iframe.src);\r\n        let sendToOrigin = `https://${OneSignal.config.subdomainName}.onesignal.com`;\r\n        if (Environment.isDev()) {\r\n          sendToOrigin = DEV_FRAME_HOST;\r\n        } else if (Environment.isStaging()) {\r\n          sendToOrigin = STAGING_FRAME_HOST;\r\n        }\r\n        let receiveFromOrigin = sendToOrigin;\r\n        OneSignal.iframePostmam = new Postmam(iframe.contentWindow, sendToOrigin, receiveFromOrigin);\r\n        OneSignal.iframePostmam.connect();\r\n        OneSignal.iframePostmam.on('connect', e => {\r\n          log.debug(`(${Environment.getEnv()}) Fired Postmam connect event!`);\r\n          Promise.all([\r\n            Database.get<string>('Options', 'defaultUrl'),\r\n            Database.get<string>('Options', 'defaultTitle')\r\n          ])\r\n                 .then(([defaultUrlResult, defaultTitleResult]) => {\r\n                   if (!defaultUrlResult) {\r\n                     var defaultUrl = location.href;\r\n                   } else {\r\n                     var defaultUrl = defaultUrlResult;\r\n                   }\r\n\r\n                   if (!defaultTitleResult) {\r\n                     var defaultTitle = document.title;\r\n                   } else {\r\n                     var defaultTitle = defaultTitleResult;\r\n                   }\r\n\r\n                   OneSignal.iframePostmam.message(OneSignal.POSTMAM_COMMANDS.IFRAME_POPUP_INITIALIZE, {\r\n                     hostInitOptions: JSON.parse(JSON.stringify(OneSignal.config)), // Removes functions and unmessageable objects\r\n                     defaultUrl: defaultUrl,\r\n                     pageUrl: window.location.href,\r\n                     pageTitle: defaultTitle,\r\n                   }, reply => {\r\n                     if (reply.data === OneSignal.POSTMAM_COMMANDS.REMOTE_OPERATION_COMPLETE) {\r\n                       resolve();\r\n                       Event.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\r\n                     }\r\n                     return false;\r\n                   });\r\n                 });\r\n        });\r\n        OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.REMOTE_RETRIGGER_EVENT, message => {\r\n          // e.g. { eventName: 'subscriptionChange', eventData: true}\r\n          let {eventName, eventData} = message.data;\r\n          Event.trigger(eventName, eventData, message.source);\r\n          return false;\r\n        });\r\n        OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.REMOTE_NOTIFICATION_PERMISSION_CHANGED, message => {\r\n          let {forceUpdatePermission} = message.data;\r\n          EventHelper.triggerNotificationPermissionChanged(forceUpdatePermission);\r\n          return false;\r\n        });\r\n        OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.REQUEST_HOST_URL, message => {\r\n          message.reply(location.href);\r\n          return false;\r\n        });\r\n        OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.SERVICEWORKER_COMMAND_REDIRECT, message => {\r\n          window.location.href = message.data;\r\n          return false;\r\n        });\r\n        OneSignal.iframePostmam.on(OneSignal.POSTMAM_COMMANDS.HTTP_PERMISSION_REQUEST_RESUBSCRIBE, message => {\r\n          log.debug('(Reposted from iFrame -> Host) User unsubscribed but permission granted. Re-prompting the user for push.');\r\n          OneSignal.showHttpPrompt({ __sdkCall: true, __useHttpPermissionRequestStyle: true }).catch(e => {\r\n            log.debug('[Resubscribe Prompt Error]', e);\r\n          });\r\n          return false;\r\n        });\r\n      };\r\n      OneSignal._sessionIframeAdded = true;\r\n    });\r\n    return executeAndTimeoutPromiseAfter(subdomainLoadPromise, 15000)\r\n      .catch(() => log.warn(`OneSignal: Could not load iFrame with URL ${OneSignal.iframeUrl}. Please check that your 'subdomainName' matches that on your OneSignal Chrome platform settings. Also please check that your Site URL on your Chrome platform settings is a valid reachable URL pointing to your site.`));\r\n  }\r\n\r\n  static loadPopup(options) {\r\n    // Important: Don't use any promises until the window is opened, otherwise the popup will be blocked\r\n    let sendToOrigin = `https://${OneSignal.config.subdomainName}.onesignal.com`;\r\n    if (Environment.isDev()) {\r\n      sendToOrigin = DEV_FRAME_HOST;\r\n    }\r\n    let receiveFromOrigin = sendToOrigin;\r\n    let postData = objectAssign({}, MainHelper.getPromptOptionsPostHash(), {\r\n      promptType: 'popup',\r\n      parentHostname: encodeURIComponent(location.hostname)\r\n    });\r\n    if (options && options.autoAccept) {\r\n      postData['autoAccept'] = true;\r\n    }\r\n    log.info('loadPopup(options):', options);\r\n    if (options && options.httpPermissionRequest) {\r\n      postData['httpPermissionRequest'] = true;\r\n      var overrides = {\r\n        childWidth: 250,\r\n        childHeight: 150,\r\n        left: -99999999,\r\n        top: 9999999,\r\n      };\r\n    }\r\n    log.info(`Opening popup window to ${OneSignal.popupUrl} with POST data:`, OneSignal.popupUrl);\r\n    var subdomainPopup = MainHelper.openSubdomainPopup(OneSignal.popupUrl, postData, overrides);\r\n\r\n    OneSignal.popupPostmam = new Postmam(subdomainPopup, sendToOrigin, receiveFromOrigin);\r\n    OneSignal.popupPostmam.startPostMessageReceive();\r\n\r\n    OneSignal.popupPostmam.on(OneSignal.POSTMAM_COMMANDS.POPUP_BEGIN_MESSAGEPORT_COMMS, message => {\r\n      // e.g. { eventName: 'subscriptionChange', eventData: true}\r\n      log.debug(`(Popup Postmam) (${Environment.getEnv()}) Got direct postMessage() event from popup event to begin MessagePort comms.`);\r\n      OneSignal.popupPostmam.connect();\r\n      return false;\r\n    });\r\n\r\n    OneSignal.popupPostmam.once(OneSignal.POSTMAM_COMMANDS.POPUP_LOADED, message => {\r\n      Event.trigger('popupLoad');\r\n    });\r\n    OneSignal.popupPostmam.once(OneSignal.POSTMAM_COMMANDS.POPUP_ACCEPTED, message => {\r\n      MainHelper.triggerCustomPromptClicked('granted');\r\n    });\r\n    OneSignal.popupPostmam.once(OneSignal.POSTMAM_COMMANDS.POPUP_REJECTED, message => {\r\n      MainHelper.triggerCustomPromptClicked('denied');\r\n    });\r\n    OneSignal.popupPostmam.once(OneSignal.POSTMAM_COMMANDS.POPUP_CLOSING, message => {\r\n      log.info('Detected popup is closing.');\r\n      Event.trigger(OneSignal.EVENTS.POPUP_CLOSING);\r\n      OneSignal.popupPostmam.destroy();\r\n    });\r\n    OneSignal.popupPostmam.once(OneSignal.POSTMAM_COMMANDS.BEGIN_BROWSING_SESSION, message => {\r\n      log.debug(Environment.getEnv() + \" Marking current session as a continuing browsing session.\");\r\n      MainHelper.beginTemporaryBrowserSession();\r\n    });\r\n    OneSignal.popupPostmam.once(OneSignal.POSTMAM_COMMANDS.WINDOW_TIMEOUT, message => {\r\n      log.debug(Environment.getEnv() + \" Popup window timed out and was closed.\");\r\n      Event.trigger(OneSignal.EVENTS.POPUP_WINDOW_TIMEOUT);\r\n    });\r\n    OneSignal.popupPostmam.once(OneSignal.POSTMAM_COMMANDS.FINISH_REMOTE_REGISTRATION, message => {\r\n      log.debug(Environment.getEnv() + \" Finishing HTTP popup registration inside the iFrame, sent from popup.\");\r\n\r\n      message.reply({ progress: true });\r\n\r\n      MainHelper.getAppId()\r\n                .then(appId => {\r\n                  OneSignal.popupPostmam.stopPostMessageReceive();\r\n                  MainHelper.registerWithOneSignal(appId, message.data.subscriptionInfo)\r\n                            .then(() => EventHelper.checkAndTriggerSubscriptionChanged());\r\n                });\r\n    });\r\n  }\r\n}","import { removeDomElement, addDomElement, addCssClass } from '../utils';\nimport * as log from 'loglevel';\nimport Event from '../Event';\nimport * as objectAssign from 'object-assign';\n\n\n\nexport default class HttpModal {\n\n    public options: any;\n\n    static get EVENTS() {\n        return {\n            FINISH_CLICK: 'httpModalFinishClick',\n            SHOWN: 'httpModalShown',\n            CLOSED: 'httpModalClosed',\n        };\n    }\n\n    constructor(options) {\n        if (!options) {\n            this.options = {};\n        } else {\n            this.options = objectAssign({}, options);\n        }\n        if (!this.options['modalTitle'] || typeof this.options['modalTitle'] !== \"string\")\n            this.options['modalTitle'] = \"Thanks for subscribing\";\n        if (!this.options['modalMessage'] || typeof this.options['modalMessage'] !== \"string\")\n            this.options['modalMessage'] = \"You're now subscribed to notifications. You can unsubscribe at any time.\";\n        if (!this.options['modalButtonText'] || typeof this.options['modalButtonText'] !== \"string\")\n            this.options['modalButtonText'] = \"Close\";\n        this.options['modalTitle'] = this.options['modalTitle'].substring(0, 50);\n        this.options['modalMessage'] = this.options['modalMessage'].substring(0, 90);\n        this.options['modalButtonText'] = this.options['modalButtonText'].substring(0, 35);\n    }\n\n    create() {\n        try {\n            // Remove any existing container\n            if (this.container) {\n                removeDomElement('#onesignal-modal-container');\n            }\n\n            let dialogHtml = `<div id=\"onesignal-modal-dialog\"><div class=\"modal-exit\">&times;</div><div class=\"modal-body\"><div class=\"modal-body-title\">${this.options['modalTitle']}</div><div class=\"modal-body-message\">${this.options['modalMessage']}</div><div class=\"clearfix\"></div></div><div class=\"modal-footer\"><button id=\"onesignal-modal-finish-button\" class=\"primary modal-button\">${this.options['modalButtonText']}</button><div class=\"clearfix\"></div></div></div>`;\n\n            // Insert the container\n            addDomElement('body', 'beforeend',\n                '<div id=\"onesignal-modal-container\" class=\"onesignal-modal-container onesignal-reset\"></div>');\n            // Insert the dialog\n            addDomElement(this.container, 'beforeend', dialogHtml);\n            // Add click event handlers\n            this.container.addEventListener('click', this.onHttpModalFinished.bind(this));\n            Event.trigger(HttpModal.EVENTS.SHOWN);\n        } catch (e) {\n            log.error(e);\n        }\n    }\n\n    onHttpModalFinished(e) {\n        OneSignal.registerForPushNotifications({httpPermissionRequest: true});\n        Event.trigger(HttpModal.EVENTS.FINISH_CLICK);\n        this.close();\n    }\n\n    close() {\n        addCssClass(this.container, 'close-modal');\n        removeDomElement('#onesignal-modal-container');\n        Event.trigger(HttpModal.EVENTS.CLOSED);\n    }\n\n    get container() {\n        return document.querySelector('#onesignal-modal-container');\n    }\n\n    get dialog() {\n        return document.querySelector('#onesignal-modal-dialog');\n    }\n\n    get finishButton() {\n        return document.querySelector('#onesignal-modal-finish-button');\n    }\n}","import { Uuid } from \"./Uuid\";\r\nimport { ServiceWorkerConfig } from \"./ServiceWorkerConfig\";\r\n\r\n\r\nclass AppConfig {\r\n    appId: Uuid;\r\n    subdomain: string;\r\n    autoRegister: boolean;\r\n    serviceWorkerConfig: ServiceWorkerConfig;\r\n}\r\n\r\nexport { AppConfig };","import {Notification} from \"./Notification\";\r\nimport {Timestamp} from \"./Timestamp\";\r\nclass AppState {\r\n    defaultNotificationUrl: string;\r\n    defaultNotificationTitle: string;\r\n\r\n    /**\r\n     * Whether the user is currently completely subscribed, including not opted out. Database cached version of\r\n     * isPushNotificationsEnabled().\r\n     */\r\n    lastKnownPushEnabled: boolean;\r\n\r\n    clickedNotifications: Map<URL, [Notification, Timestamp]>\r\n}\r\n\r\nexport { AppState };","import { DynamicResourceLoader } from \"../services/DynamicResourceLoader\";\r\n\r\n\r\nexport default class Context {\r\n\r\n  public dynamicResourceLoader: DynamicResourceLoader;\r\n\r\n  constructor() {\r\n    this.dynamicResourceLoader = new DynamicResourceLoader();\r\n  }\r\n}","enum NotificationPermission {\r\n  /**\r\n   * The user has not granted notification permissions and may have just dismissed the notification permission prompt.\r\n   */\r\n  Default = <any>\"default\",\r\n  /**\r\n   * The user has granted notification permissions.\r\n   */\r\n  Granted = <any>\"granted\",\r\n  /**\r\n   * The user has blocked notifications.\r\n   */\r\n  Denied = <any>\"denied\"\r\n}\r\n\r\nexport { NotificationPermission };","/**\r\n * Contains the SDK initialization options that configure future installations of our service worker.\r\n */\r\nclass ServiceWorkerConfig {\r\n  /**\r\n   * Describes how much of the origin the service worker controls.\r\n   * This is currently always \"/\".\r\n   */\r\n  scope: string;\r\n  /**\r\n   * The filename of the \"main\" worker (e.g. OneSignalSDKWorker.js);\r\n   */\r\n  workerName: string;\r\n  /**\r\n   * The filename of the \"alternate\" worker, used to update an existing service worker.\r\n   * (e.g. OneSignalSDKUpdaterWorer.js)\r\n   */\r\n  updaterWorkerName: string;\r\n  /**\r\n   * The path to the directory containing both workers.\r\n   */\r\n  workerFilePath: string;\r\n}\r\n\r\nexport { ServiceWorkerConfig };","import { Notification } from \"./Notification\";\r\n\r\n\r\nclass ServiceWorkerState {\r\n  workerVersion: number;\r\n  updaterWorkerVersion: number;\r\n  backupNotification: Notification;\r\n}\r\n\r\nexport { ServiceWorkerState };","import {Uuid} from \"./Uuid\";\r\n\r\n\r\nexport class Subscription {\r\n    /**\r\n     * The OneSignal player ID.\r\n     */\r\n    deviceId: Uuid;\r\n    /**\r\n     * The GCM/FCM registration token, along with the full URL.\r\n     */\r\n    pushEndpoint: URL;\r\n    /**\r\n     * The GCM/FCM registration token, just the token part.\r\n     */\r\n    pushToken: string;\r\n    /**\r\n     * Whether the user is opted out of notifications, set by setSubscription().\r\n     */\r\n    optedOut: boolean;\r\n}","import {removeDomElement, addDomElement, addCssClass, once} from '../utils';\nimport * as log from 'loglevel';\nimport Event from '../Event';\nimport MainHelper from '../helpers/MainHelper';\nimport * as Browser from 'bowser';\nimport * as objectAssign from 'object-assign';\n\n\nexport default class Popover {\n\n    public options: any;\n    public notificationIcons: any;\n\n    static get EVENTS() {\n        return {\n            ALLOW_CLICK: 'popoverAllowClick',\n            CANCEL_CLICK: 'popoverCancelClick',\n            SHOWN: 'popoverShown',\n            CLOSED: 'popoverClosed',\n        };\n    }\n\n    constructor(options) {\n        if (!options) {\n            this.options = {};\n        } else {\n            this.options = objectAssign({}, options);\n        }\n        if (!this.options['actionMessage'] || typeof this.options['actionMessage'] !== \"string\")\n            this.options['actionMessage'] = \"We'd like to show you notifications for the latest news and updates.\";\n        if (!this.options['acceptButtonText'] || typeof this.options['acceptButtonText'] !== \"string\")\n            this.options['acceptButtonText'] = \"Allow\";\n        if (!this.options['cancelButtonText'] || typeof this.options['cancelButtonText'] !== \"string\")\n            this.options['cancelButtonText'] = \"No Thanks\";\n        this.options['actionMessage'] = this.options['actionMessage'].substring(0, 90);\n        this.options['acceptButtonText'] = this.options['acceptButtonText'].substring(0, 15);\n        this.options['cancelButtonText'] = this.options['cancelButtonText'].substring(0, 15);\n\n        this.notificationIcons = null;\n    }\n\n    async create() {\n        if (this.notificationIcons === null) {\n            const icons = await MainHelper.getNotificationIcons();\n\n            this.notificationIcons = icons;\n\n            // Remove any existing container\n            if (this.container) {\n                removeDomElement('#onesignal-popover-container');\n            }\n\n            let icon = this.getPlatformNotificationIcon();\n            let defaultIcon = `data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2239.5%22%20height%3D%2240.5%22%20viewBox%3D%220%200%2079%2081%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Ctitle%3EOneSignal-Bell%3C%2Ftitle%3E%3Cg%20fill%3D%22%23BBB%22%20fill-rule%3D%22evenodd%22%3E%3Cpath%20d%3D%22M39.96%2067.12H4.12s-3.2-.32-3.2-3.36%202.72-3.2%202.72-3.2%2010.72-5.12%2010.72-8.8c0-3.68-1.76-6.24-1.76-21.28%200-15.04%209.6-26.56%2021.12-26.56%200%200%201.6-3.84%206.24-3.84%204.48%200%206.08%203.84%206.08%203.84%2011.52%200%2021.12%2011.52%2021.12%2026.56s-1.6%2017.6-1.6%2021.28c0%203.68%2010.72%208.8%2010.72%208.8s2.72.16%202.72%203.2c0%202.88-3.36%203.36-3.36%203.36H39.96zM27%2070.8h24s-1.655%2010.08-11.917%2010.08S27%2070.8%2027%2070.8z%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E`;\n\n            let dialogHtml = `<div id=\"normal-popover\"><div class=\"popover-body\"><div class=\"popover-body-icon ${icon === 'default-icon' ? 'default-icon' : ''}\" style=\"background-image: url('${icon === 'default-icon' ? defaultIcon : icon}');\"></div><div class=\"popover-body-message\">${this.options['actionMessage']}</div><div class=\"clearfix\"></div></div><div class=\"popover-footer\"><button id=\"onesignal-popover-allow-button\" class=\"align-right primary popover-button\">${this.options['acceptButtonText']}</button><button id=\"onesignal-popover-cancel-button\" class=\"align-right secondary popover-button\">${this.options['cancelButtonText']}</button><div class=\"clearfix\"></div></div></div>`;\n\n            // Insert the container\n            addDomElement('body', 'beforeend',\n              '<div id=\"onesignal-popover-container\" class=\"onesignal-popover-container onesignal-reset\"></div>');\n            // Insert the dialog\n            addDomElement(this.container, 'beforeend',\n              `<div id=\"onesignal-popover-dialog\" class=\"onesignal-popover-dialog\">${dialogHtml}</div>`);\n            // Animate it in depending on environment\n            addCssClass(this.container, Browser.mobile ? 'slide-up' : 'slide-down');\n            // Add click event handlers\n            this.allowButton.addEventListener('click', this.onPopoverAllowed.bind(this));\n            this.cancelButton.addEventListener('click', this.onPopoverCanceled.bind(this));\n            Event.trigger(Popover.EVENTS.SHOWN);\n        }\n    }\n\n    onPopoverAllowed(e) {\n        Event.trigger(Popover.EVENTS.ALLOW_CLICK);\n    }\n\n    onPopoverCanceled(e) {\n        Event.trigger(Popover.EVENTS.CANCEL_CLICK);\n        this.close();\n    }\n\n    close() {\n        addCssClass(this.container, 'close-popover');\n        once(this.dialog, 'animationend', (event, destroyListenerFn) => {\n            if (event.target === this.dialog &&\n                (event.animationName === 'slideDownExit' || event.animationName === 'slideUpExit')) {\n                // Uninstall the event listener for animationend\n                removeDomElement('#onesignal-popover-container');\n                destroyListenerFn();\n                Event.trigger(Popover.EVENTS.CLOSED);\n            }\n        }, true);\n    }\n\n    getPlatformNotificationIcon() {\n        if (this.notificationIcons) {\n            if (Browser.chrome || Browser.firefox) {\n                if (this.notificationIcons.chrome) {\n                    return this.notificationIcons.chrome;\n                } else if (this.notificationIcons.firefox) {\n                    return this.notificationIcons.firefox;\n                } else {\n                    return 'default-icon';\n                }\n            }\n            else if (Browser.safari) {\n                if (this.notificationIcons.safari) {\n                    return this.notificationIcons.safari;\n                } else if (this.notificationIcons.chrome) {\n                    return this.notificationIcons.chrome;\n                } else {\n                    return 'default-icon';\n                }\n            }\n        }\n        else return 'default-icon';\n    }\n\n    get container() {\n        return document.querySelector('#onesignal-popover-container');\n    }\n\n    get dialog() {\n        return document.querySelector('#onesignal-popover-dialog');\n    }\n\n    get allowButton() {\n        return document.querySelector('#onesignal-popover-allow-button');\n    }\n\n    get cancelButton() {\n        return document.querySelector('#onesignal-popover-cancel-button');\n    }\n}","import * as objectAssign from 'object-assign';\nexport const enum ResourceType {\n  Stylesheet,\n  Script\n}\n\nexport const enum ResourceLoadState {\n  /**\n   * The remote resource was fetched and loaded successfully.\n   */\n  Loaded,\n  /**\n   * The remote resource failed to be loaded (e.g. not found or network offline).\n   */\n  Failed\n}\n\ninterface DynamicResourceLoaderCache {\n  [key: string]: Promise<ResourceLoadState>;\n}\n\nexport class DynamicResourceLoader {\n\n  private cache: DynamicResourceLoaderCache;\n\n  constructor() {\n    this.cache = {};\n  }\n\n  getCache(): DynamicResourceLoaderCache {\n    // Cache is private; return a cloned copy just for testing\n    return objectAssign({}, this.cache);\n  }\n\n  async loadSdkStylesheet(): Promise<ResourceLoadState> {\n    return await this.loadIfNew(ResourceType.Stylesheet, new URL('https://cdn.onesignal.com/sdks/OneSignalSDKStyles.css'));\n  }\n\n  /**\n   * Attempts to load a resource by adding it to the document's <head>.\n   * Caches any previous load attempt's result and does not retry loading a previous resource.\n   */\n  async loadIfNew(type: ResourceType, url: URL): Promise<ResourceLoadState> {\n    // Load for first time\n    if (!this.cache[url.toString()]) {\n      this.cache[url.toString()] = DynamicResourceLoader.load(type, url);\n    }\n    // Resource is loading; multiple calls can be made to this while the same resource is loading\n    // Waiting on the Promise is what we want here\n    return await this.cache[url.toString()];\n  }\n\n  /**\n   * Attempts to load a resource by adding it to the document's <head>.\n   * Each call creates a new DOM element and fetch attempt.\n   */\n  static async load(type: ResourceType, url: URL): Promise<ResourceLoadState> {\n    try {\n      await new Promise((resolve, reject) => {\n        switch (type) {\n          case ResourceType.Script:\n            var domElement: HTMLElement = document.createElement('script');\n            domElement.setAttribute('type', 'text/javascript');\n            domElement.setAttribute('async', 'async');\n            domElement.setAttribute('src', url.toString());\n            break;\n          case ResourceType.Stylesheet:\n            var domElement: HTMLElement = document.createElement('link');\n            domElement.setAttribute('rel', 'stylesheet');\n            domElement.setAttribute('href', url.toString());\n            break;\n        }\n        domElement.onerror = reject;\n        domElement.onload = resolve;\n        document.querySelector('head').appendChild(domElement);\n      });\n      return ResourceLoadState.Loaded;\n    } catch (e) {\n      return ResourceLoadState.Failed;\n    }\n  }\n}","export interface ValidatorOptions {\r\n  allowNull?: boolean;\r\n  allowEmpty?: boolean;\r\n  /**\r\n   * For validating URLs, requires that the URL begins with https://.\r\n   */\r\n  requireHttps?: boolean;\r\n}\r\n\r\nexport class ValidatorUtils {\r\n  static isValidUrl(url: any, options?: ValidatorOptions) {\r\n    if (options && options.allowNull && url === null)\r\n        return true;\r\n    else if (options && options.allowEmpty && (url === null || url === undefined))\r\n      return true;\r\n    else {\r\n      try {\r\n        const parsedUrl = new URL(url);\r\n        if (options && options.requireHttps) {\r\n          return parsedUrl.protocol === 'https:';\r\n        } else\r\n          return true;\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  static isValidBoolean(bool: any, options?: ValidatorOptions) {\r\n    if (options && options.allowNull && bool === null)\r\n      return true;\r\n    else\r\n      return bool === true || bool === false;\r\n  }\r\n\r\n  static isValidArray(array: any, options?: ValidatorOptions) {\r\n    if (options && options.allowNull && array === null)\r\n      return true;\r\n    else if (options && options.allowEmpty && (array === null || array === undefined))\r\n      return true;\r\n    else\r\n      return array instanceof Array;\r\n  }\r\n}\r\n\r\n","'use strict';\n\nvar ticky = require('ticky');\n\nmodule.exports = function debounce (fn, args, ctx) {\n  if (!fn) { return; }\n  ticky(function run () {\n    fn.apply(ctx || null, args || []);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/contra/debounce.js\n// module id = 61\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    cls.apply(this, arguments);\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n  _inherits(ExtendableError, _extendableBuiltin2);\n\n  function ExtendableError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, ExtendableError);\n\n    // extending Error is weird and does not propagate `message`\n    var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n    Object.defineProperty(_this, 'message', {\n      configurable: true,\n      enumerable: false,\n      value: message,\n      writable: true\n    });\n\n    Object.defineProperty(_this, 'name', {\n      configurable: true,\n      enumerable: false,\n      value: _this.constructor.name,\n      writable: true\n    });\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(_this, _this.constructor);\n      return _possibleConstructorReturn(_this);\n    }\n\n    Object.defineProperty(_this, 'stack', {\n      configurable: true,\n      enumerable: false,\n      value: new Error(message).stack,\n      writable: true\n    });\n    return _this;\n  }\n\n  return ExtendableError;\n}(_extendableBuiltin(Error));\n\nexports.default = ExtendableError;\nmodule.exports = exports['default'];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-error/lib/index.js\n// module id = 62\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 64\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 65\n// module chunks = 0","'use strict';\n\nvar atoa = require('atoa');\nvar serialization = require('./serialization');\nvar emitter = require('contra/emitter');\n\nmodule.exports = createChannel;\n\nfunction createChannel () {\n  var channel = at(navigator.serviceWorker.controller);\n  return channel;\n\n  function at (worker) {\n    var internalEmitter = emitter();\n    var api = {\n      on: selfed('on'),\n      once: selfed('once'),\n      off: selfed('off'),\n      emit: postToWorker,\n      at: at\n    };\n    var postFromWorker = serialization.emission(internalEmitter, { broadcast: false });\n    navigator.serviceWorker.addEventListener('message', broadcastHandler);\n    return api;\n\n    function selfed (method) {\n      return function selfish () {\n        internalEmitter[method].apply(null, arguments);\n        return api;\n      };\n    }\n\n    function postToWorker () {\n      if (!worker) {\n        return Promise.reject(new Error('ServiceWorker not found.'));\n      }\n      var payload = serialization.parsePayload(atoa(arguments));\n      var messageChannel = new MessageChannel();\n      messageChannel.port1.addEventListener('message', postFromWorker);\n      return worker.postMessage(payload, [messageChannel.port2]);\n    }\n\n    function broadcastHandler (e) {\n      var data = e.data;\n      if (data) {\n        if (data.__broadcast) {\n          serialization.emission(internalEmitter, {broadcast: true})(e);\n        } else {\n          serialization.emission(internalEmitter, {broadcast: false})(e);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/swivel/page.js\n// module id = 66\n// module chunks = 0","'use strict';\n\nvar atoa = require('atoa');\nvar serialization = require('./serialization');\nvar emitter = require('contra/emitter');\n\nmodule.exports = createChannel;\n\nfunction createChannel () {\n  var internalEmitter = emitter();\n  var api = {\n    on: selfed('on'),\n    once: selfed('once'),\n    off: selfed('off'),\n    broadcast: broadcastToPages,\n    emit: replyToClient\n  };\n\n  self.addEventListener('message', postFromPage);\n\n  return api;\n\n  function selfed (method) {\n    return function selfish () {\n      internalEmitter[method].apply(null, arguments);\n      return api;\n    };\n  }\n\n  function postFromPage (e) {\n    var context = {\n      reply: replyToPage(e)\n    };\n    serialization.emission(internalEmitter, context)(e);\n  }\n\n  function broadcastToPages (type) {\n    var payload = atoa(arguments, 1);\n    return self.clients.matchAll({includeUncontrolled: true}).then(gotClients);\n    function gotClients (clients) {\n      return clients.map(emitToClient);\n    }\n    function emitToClient (client) {\n      return client.postMessage({ type: type, payload: payload, __broadcast: true });\n    }\n  }\n\n  function replyTo (client) {\n    var payload = serialization.parsePayload(atoa(arguments, 1));\n    return client.postMessage(payload);\n  }\n\n  function replyToPage (e) {\n    return replyTo.bind(null, e.ports[0]);\n  }\n\n  function replyToClient (clientId) {\n        var payload = serialization.parsePayload(atoa(arguments, 1));\n    return self.clients.matchAll({includeUncontrolled: true}).then(function(clients) {\n      var wasClientFound = false;\n      clients.forEach(function(client) {\n        if (client.id === clientId) {\n          wasClientFound = true;\n          return client.postMessage(payload);\n        }\n      });\n      if (!wasClientFound) {\n        return Promise.reject('Could not find service worker client with ID ' + clientId + ' to reply to.');\n      }\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/swivel/worker.js\n// module id = 67\n// module chunks = 0","var si = typeof setImmediate === 'function', tick;\nif (si) {\n  tick = function (fn) { setImmediate(fn); };\n} else {\n  tick = function (fn) { setTimeout(fn, 0); };\n}\n\nmodule.exports = tick;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ticky/ticky-browser.js\n// module id = 68\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 69\n// module chunks = 0","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 70\n// module chunks = 0"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__extends","b","__","this","constructor","extendStatics","create","__rest","e","t","indexOf","getOwnPropertySymbols","length","__decorate","decorators","target","key","desc","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","throw","result","done","then","apply","__generator","body","verb","v","op","f","TypeError","_","y","label","ops","pop","trys","push","g","sent","return","Symbol","iterator","__exportStar","__values","__read","ar","error","__spread","concat","__asyncGenerator","a","q","resume","shift","settle","delegate","fulfill","asyncIterator","__asyncDelegator","__asyncValues","__webpack_exports__","setPrototypeOf","__proto__","Array","__assign","assign","isArray","variable","toString","decodeHtmlEntities","text","Environment_1","default","isBrowser","decodeTextArea","document","createElement","innerHTML","isPushNotificationsSupported","window","Browser","version","browser","_detect","navigator","userAgent","safari","serviceWorker","ios","ipod","iphone","ipad","msedge","msie","appVersion","match","firefox","Number","mobile","tablet","chrome","chromium","yandexbrowser","opera","vivaldi","removeDomElement","selector","els","querySelectorAll","parentNode","removeChild","awaitOneSignalInitAndSupported","OneSignal","initialized","once","EVENTS","SDK_INITIALIZED","stringify","obj","JSON","executeCallback","callback","args","_i","logMethodCall","methodName","log","debug","map","join","getConsoleStyle","isValidEmail","email","addDomElement","targetSelectorOrElement","addOrder","elementHtml","querySelector","insertAdjacentHTML","Error","clearDomElementChildren","element","firstChild","addCssClass","cssClass","classList","add","removeCssClass","remove","hasCssClass","contains","getDeviceTypeForBrowser","DEVICE_TYPES","CHROME","FIREFOX","SAFARI","style","delay","durationMs","setTimeout","nothing","executeAndTimeoutPromiseAfter","promise","milliseconds","displayError","timeoutPromise","race","info","when","condition","promiseIfTrue","promiseIfFalse","undefined","guid","replace","crypto","global","msCrypto","getRandomValues","Uint8Array","Math","random","indexOfAble","trimUndefined","isValidUuid","uuid","test","normalizeSubdomain","subdomain","trim","removeSubstrings","removeSubstrings_1","removeSubstring","toLowerCase","getUrlQueryParam","url","location","href","regex","RegExp","results","exec","decodeURIComponent","wipeIndexedDb","warn","all","Database_1","capitalize","charAt","toUpperCase","slice","unsubscribeFromPush","isServiceWorker","self","registration","pushManager","getSubscription","subscription","unsubscribe","SubscriptionHelper_1","isUsingSubscriptionWorkaround","iframePostmam","message","POSTMAM_COMMANDS","UNSUBSCRIBE_FROM_PUSH","reply","data","REMOTE_OPERATION_COMPLETE","controller","ready","wipeServiceWorker","isIframe","unregister","wipeServiceWorkerAndUnsubscribe","wait","substringAfter","string","search","substr","event","task","manualDestroy","taskWrapper","destroyEventListener","removeEventListener","type","addEventListener","getSdkLoadCount","__oneSignalSdkLoadCount","awaitSdkEvent","eventName","predicate","_a","incrementSdkLoadCount","prepareEmailForHashing","md5","str","rhex","num","j","hex_chr","str2blks_MD5","nblk","blks","charCodeAt","x","lsw","rol","cnt","cmn","ff","gg","hh","ii","olda","oldb","oldc","oldd","sha1","hex","str2blks_SHA1","ft","kt","w","olde","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","definition","realMethod","console","undefinedType","bindMethod","noop","method","bind","Function","enableLoggingWhenConsoleArrives","level","loggerName","replaceLoggingMethods","logMethods","methodFactory","defaultMethodFactory","Logger","defaultLevel","factory","persistLevelIfPossible","levelNum","levelName","localStorage","storageKey","ignore","cookie","encodeURIComponent","getPersistedLevel","storedLevel","levels","currentLevel","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","Environment","getEnv","top","pathname","hostname","endsWith","isDev","POPUP","HOST","IFRAME","CUSTOM_SUBDOMAIN","SERVICE_WORKER","isHost","isPopup","isStaging","isTest","isCustomSubdomain","getLanguage","testLanguage","languageTag","language","languageSubtags","split","TRADITIONAL_CHINESE_LANGUAGE_TAG","traditionalSubtag","_b","_c","SIMPLIFIED_CHINESE_LANGUAGE_TAG","simpleSubtag","substring","supportsServiceWorkers","utils_1","SILENT_EVENTS","RETRIGGER_REMOTE_EVENTS","LEGACY_EVENT_MAP","notificationPermissionChange","subscriptionChange","customPromptClick","Event","trigger","remoteTriggerEnv","displayData","env","emit","legacyEventName","_triggerLegacy","opener","parent","popupPostmam","REMOTE_RETRIGGER_EVENT","eventData","CustomEvent","bubbles","cancelable","detail","dispatchEvent","Event_1","MainHelper_1","ServiceWorkerHelper_1","EventHelper_1","PushPermissionNotGrantedError_1","TestHelper_1","SubscriptionHelper","registerForW3CPush","options","registrationIdResult","fromRegisterFor","Notification","permission","getRegistration","serviceWorkerRegistration","sw_path","config","path","registerServiceWorker","SERVICE_WORKER_PATH","active","previousWorkerUrl","scriptURL","_VERSION","SERVICE_WORKER_UPDATER_PATH","unregistrationSuccessful","installing","enableNotifications","existingServiceWorkerRegistration","establishServiceWorkerChannel","subscribeForPush","beginTemporaryBrowserSession","isLocalhostAllowedAsSecureOrigin","subdomainName","protocol","hasInsecureParentOrigin","allowLocalhostAsSecureOrigin","notificationPermissionBeforeRequest","getNotificationPermission","PERMISSION_PROMPT_DISPLAYED","requestNotificationPermissionPromise","subscribe","userVisibleOnly","_sessionInitAlreadyRunning","sessionStorage","setItem","getAppId","appId","subscriptionInfo","subscriptionId","endpointOrToken","endpoint","getKey","p256dh","auth","p256dh_base64encoded","btoa","String","fromCharCode","auth_base64encoded","_thisIsThePopup","FINISH_REMOTE_REGISTRATION","progress","close","registerWithOneSignal","catch","manifestParentTagname","tagName","manifestHtml","outerHTML","manifestLocation","manifestLocationOrigin","URL","origin","currentOrigin","triggerNotificationPermissionChanged","markHttpsNativePromptDismissed","_usingNativePermissionHook","DatabaseEventName","IndexedDb_1","AppState_1","Subscription_1","AppConfig_1","ServiceWorkerConfig_1","ServiceWorkerState_1","Emitter_1","Database","databaseName","emitter","database","applyDbResultFilter","table","id","timestamp","tslib_1","_this","cleanResult","REMOTE_DATABASE_GET","put","keypath","REMOTE_DATABASE_PUT","SET","REMOTE_DATABASE_REMOVE","getAppConfig","_d","AppConfig","_e","autoRegister","serviceWorkerConfig","setAppConfig","appConfig","getAppState","state","AppState","defaultNotificationUrl","defaultNotificationTitle","lastKnownPushEnabled","clickedNotifications","setAppState","appState","clickedNotificationUrls","clickedNotificationUrls_1","notificationDetails","keys","getServiceWorkerConfig","ServiceWorkerConfig","scope","workerName","updaterWorkerName","workerFilePath","setServiceWorkerConfig","getServiceWorkerState","ServiceWorkerState","workerVersion","updaterWorkerVersion","backupNotification","setServiceWorkerState","dbOptedOut","dbNotOptedOut","Subscription","deviceId","pushEndpoint","pushToken","optedOut","setSubscription","rebuild","printIds","registrationId","userId","OneSignal Database IDs","App ID","Registration ID","User ID","ensureSingletonInstance","databaseInstanceName","databaseInstance","on","toObject","val","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","test3","forEach","letter","source","from","symbols","to","DEV_HOST","DEV_FRAME_HOST","DEV_PREFIX","PROD_HOST","STAGING_HOST","STAGING_FRAME_HOST","STAGING_PREFIX","HOST_URL","API_URL","detect","ua","getFirstMatch","iosdevice","likeAndroid","android","nexusMobile","nexusTablet","chromeos","silk","sailfish","tizen","webos","windowsphone","windows","mac","linux","edgeVersion","versionIdentifier","xbox","samsungBrowser","coast","ucbrowser","maxthon","epiphany","puffin","sleipnir","kMeleon","chromeBook","seamonkey","firefoxos","phantom","slimer","blackberry","touchpad","bada","qupzilla","googlebot","blink","webkit","gecko","osVersion","osversion","osMajorVersion","getVersionPrecision","arr","compareVersions","versions","precision","max","chunks","delta","chunk","reverse","isUnsupportedBrowser","minVersions","strictMode","_bowser","bowser","check","browserList","browserItem","vars_1","OneSignalApi_1","objectAssign","swivel","Cookie","HttpModal_1","Bell_1","InvalidStateError_1","MainHelper","fixWordpressManifestIfMisplaced","manifests","manifest","insertBefore","children","getNotificationTypeFromOptIn","isOptedIn","safariWebId","REMOTE_NOTIFICATION_PERMISSION","remoteNotificationPermission","pushNotification","BEGIN_BROWSING_SESSION","isUsingHttpPermissionRequest","httpPermissionRequest","enable","isUsingCustomHttpPermissionRequestPostModal","useCustomModal","wasHttpsNativePromptDismissed","markHttpPopoverShown","isHttpPromptAlreadyShown","getItem","isContinuingBrowserSession","deviceType","getUserId","requestUrl","requestData","app_id","device_type","timezone","Date","getTimezoneOffset","device_model","platform","device_os","sdk","notification_types","identifier","web_auth","web_p256","post","response","REGISTERED","checkAndTriggerSubscriptionChanged","checkAndTriggerNotificationPermissionChanged","previousPermission","currentPermission","requestPermission","showNotifyButton","notifyButton","bell","displayPredicate","predicateValue","getPrefixedServiceWorkerNameForEnv","checkAndDoHttpPermissionRequest","showHttpPermissionRequest","_sdkCall","showHttpPermissionRequestPostModal","TEST_INIT_OPTION_DISABLED","getNotificationIcons","InvalidStateError","InvalidStateReason","MissingAppId","_API_URL","fetch","json","errors","_channel","off","at","context","NOTIFICATION_DISPLAYED","getListeners","NOTIFICATION_CLICKED","now","SERVICEWORKER_COMMAND_REDIRECT","NOTIFICATION_DISMISSED","getNormalizedSubdomain","getPromptOptionsQueryString","promptOptions","promptOptionsStr","hash","getPromptOptionsPostHash","dynamicResourceLoader","loadSdkStylesheet","sdkStylesLoadResult","httpPermissionRequestPostModal","legacyParams","exampleNotificationTitleDesktop","exampleNotificationMessageDesktop","exampleNotificationTitleMobile","exampleNotificationMessageMobile","legacyParamKey","legacyParamValue","allowedPromptOptions","encoded_value","triggerCustomPromptClicked","clickResult","CUSTOM_PROMPT_CLICKED","autoCorrectSubdomain","inputSubdomain","normalizedSubdomain","createHiddenDomIFrame","node","display","src","appendChild","createHiddenSubscriptionDomModal","iframeContainer","setAttribute","iframeContainerStyle","getElementsByTagName","iframe","className","width","_windowWidth","height","_windowHeight","getElementById","showSubscriptionDomModal","openWindowViaPost","overrides","form","action","dualScreenLeft","screenLeft","screen","left","dualScreenTop","screenTop","thisWidth","innerWidth","documentElement","clientWidth","thisHeight","innerHeight","clientHeight","childWidth","childHeight","windowRef","open","input","submit","openSubdomainPopup","ExtendableError","OneSignalError","_super","OneSignalError_1","PermissionPromptType_1","reason","extra","RedundantPermissionMessage","extraInfo","permissionPromptType","PermissionPromptType","PushPermissionAlreadyGranted","UnsupportedEnvironment","description","LimitStore_1","EventHelper","onNotificationPermissionChange","onInternalSubscriptionSet","pushEnabled","didStateChange","isPushNotificationsEnabled","triggerSubscriptionChanged","_onSubscriptionChanged","newSubscriptionState","__doNotShowWelcomeNotification","welcome_notification_opts","welcome_notification_disabled","title","unopenableWelcomeNotificationUrl","sendNotification","en","__isOneSignalWelcomeNotification","WELCOME_NOTIFICATION_SENT","updateIfIdentical","newPermission","isUpdating","NATIVE_PROMPT_PERMISSIONCHANGED","SUBSCRIPTION_CHANGED","fireStoredNotificationClicks","fireEventWithNotification","clickedNotificationInfo","notification","minutesSinceNotificationClicked","notificationClickHandlerMatch","clickedNotificationUrl","clickedNotification","pageClickedNotifications","urlWithoutTrailingSlash","LimitStore","store","LIMIT","getFirst","getLast","isEmpty","values","OneSignalApi","headers","delete","callHeaders","Headers","append","contents","cache","status","identifyError","getUserIdFromSubscriptionIdentifier","getPlayer","playerId","updatePlayer","playerIds","titles","icon","buttons","params","include_player_ids","isAnyWeb","web_buttons","headings","chrome_web_icon","firefox_icon","Launcher_1","Badge_1","Button_1","Dialog_1","Message_1","Bell","size","position","_f","theme","_g","showLauncherAfter","_h","showBadgeAfter","_j","_k","prenotify","_l","showCredit","_m","colors","_o","offset","_p","launcher","_launcher","substituteText","STATES","UNINITIALIZED","_ignoreSubscriptionState","SUBSCRIBE_CLICK","dialog","subscribeButton","disabled","hide","TYPES","MESSAGE","TIMEOUT","clearIfWasInactive","inactivate","updateState","UNSUBSCRIBE_CLICK","unsubscribeButton","activate","HOVERING","hovering","activateIfInactive","shown","contentType","queued","dequeue","msg","content","QUEUED","getTipForState","TIP","show","HOVERED","hidden","waitUntilShown","wasInactive","isSubscribed","badge","notificationIcons","icons","setState","SUBSCRIBED","BLOCKED","UNSUBSCRIBED","STATE_CHANGED","LAUNCHER_CLICK","BELL_CLICK","prompt.native.grant","browserName","tKey","TEXT_SUBS","tValue","zValue","showDialogProcedure","inactivateIfWasInactive","isPushEnabled","notOptedOut","doNotPrompt","resizeTo","container","button","resize","applyOffsetIfSpecified","setCustomColorsIfSpecified","patchSafariSvgFilterBug","isNotOptedOut","_isNewVisitor","enqueue","bellShadow","badgeShadow","dialogShadow","graphic","cssText","bottom","right","dialogButton","pulseRing","foregroundElements","foregroundElements_1","addCssToHead","css","styleDom","createTextNode","head","isEnabled","newState","silent","lastState","_button","_badge","_message","_dialog","ServiceWorkerHelper","applyServiceWorkerEnvPrefixes","closeNotifications","updateServiceWorker","updateCheckAlreadyRan","register","SERVICE_WORKER_PARAM","full_sw_and_path","registerError","err","isServiceWorkerActive","isServiceWorkerRegistrationActive","isServiceWorkerActive_1","getRegistrations","serviceWorkerRegistrations","serviceWorkerRegistrations_1","eval","AnimatedElement_1","ActiveAnimatedElement","showClass","hideClass","activeClass","inactiveClass","activeState","targetTransitionEvents","nestedContentSelector","inactive","ACTIVATING","ACTIVE","timerId","transitionCheckTimeout","destroyListenerFn","propertyName","clearTimeout","INACTIVATING","INACTIVE","waitUntilActive","waitUntilInactive","AnimatedElement","SHOWING","SHOWN","HIDING","HIDDEN","waitUntilHidden","set","TestHelper","unmarkHttpsNativePromptDismissed","dismissCount","dismissDays","MARK_PROMPT_DISMISSED","expires","normalizeName","normalizeValue","iteratorFor","items","support","iterable","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","ArrayBuffer","decode","parse","normalizeMethod","upcased","methods","Request","credentials","mode","referrer","bytes","xhr","getAllResponseHeaders","header","Response","bodyInit","ok","statusText","list","getAll","has","entries","clone","redirectStatuses","redirect","RangeError","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","ontimeout","withCredentials","responseType","setRequestHeader","send","polyfill","registeredInModuleLoader","OldCookies","Cookies","api","extend","attributes","converter","defaults","setMilliseconds","getMilliseconds","write","escape","toUTCString","domain","secure","cookies","parts","read","getJSON","withConverter","complain","page","worker","broadcast","EventEmitter","heir","Postmam","windowReference","sendToOrigin","receiveFromOrigin","postMessage","merge","channel","MessageChannel","messagePort","isListening","isConnected","replies","listen","trace","onWindowMessagePostmanConnectReceived","startPostMessageReceive","onWindowPostMessageReceived","stopPostMessageReceive","destroy","removeEvent","isSafeOrigin","messageId","messageCommand","command","messageData","messageSource","CONNECTED_MESSAGE","messageBundle","messageBundleWithReply","handshake","HANDSHAKE_MESSAGE","ports","onMessageReceived","start","connect","port1","port2","originalMessageBundle","onReply","isReply","generateSafeOrigins","otherAllowedOrigins","host","ex","messageOrigin","Message","duration","notify","increment","dequeuedMessage","decrement","numMessagesLeft","AlreadySubscribedError","PermissionMessageDismissedError","PushPermissionNotGrantedError","Postmam_1","AlreadySubscribedError_1","PermissionMessageDismissedError_1","InitHelper","storeInitialValues","isOptedOut","notificationPermission","onSdkInitialized","installNativePromptPermissionChangedHook","code","enabled","sessionInit","__sdkCall","permissions","query","permissionStatus","onchange","saveInitOptions","opPromises","persistNotification","webhookOptions","webhooks","cors","notificationClickHandlerAction","serviceWorkerRefetchRequests","internalInit","visibilityState","initSaveState","initialPageTitle","safari_web_id","pushResponse","deviceToken","modalPrompt","modalUrl","modal","modalPostmam","MODAL_LOADED","MODAL_PROMPT_ACCEPTED","iframeModalDom","MODAL_PROMPT_REJECTED","POPUP_CLOSING","showHttpPrompt","Emitter","_events","listener","fn","that","listeners","splice","removeAllListeners","vargs","len","IndexedDb","indexedDB","onDatabaseOpenError","onblocked","onDatabaseOpenBlocked","onupgradeneeded","onDatabaseUpgradeNeeded","onsuccess","onDatabaseError","onversionchange","onDatabaseVersionChange","ensureDatabaseOpen","openLock","preventDefault","errorCode","db","createObjectStore","keyPath","transaction","objectStore","jsonResult","cursor","openCursor","cursorResult","cursorResultKey","continue","atoa","debounce","thing","opts","evt","_once","et","emitterSnapshot","ctx","throws","async","inherit","destination","addSuper","createObject","Host","mixin","hasOwn","serializeError","deserializeError","parsePayload","payload","emission","indexOfListener","alias","isValidListener","proto","originalGlobalValue","events","_getEvents","flattenListeners","flatListeners","getListenersAsObject","addListener","listenerIsWrapped","addOnceListener","defineEvent","defineEvents","evts","removeListener","index","addListeners","manipulateListeners","removeListeners","single","multiple","emitEvent","listenersMap","_getOnceReturnValue","setOnceReturnValue","_onceReturnValue","ValidatorUtils_1","Popover_1","InvalidArgumentError_1","InitHelper_1","HttpHelper_1","NotificationPermission_1","NotSubscribedError_1","Context_1","setDefaultNotificationUrl","ValidatorUtils","isValidUrl","allowNull","InvalidArgumentError","InvalidArgumentReason","Malformed","setDefaultTitle","syncHashedEmail","sanitizedEmail","Empty","NotSubscribedError","NotSubscribedReason","NoDeviceId","em_m","em_s","success","__init","__initAlreadyCalled","iframeUrl","popupUrl","subdomainPromise","loadSubdomainIFrame","_initCalled","readyState","onreadystatechange","__isPopoverShowing","SlidedownPermissionMessage","httpHelper","isShowingHttpPermissionRequest","force","NotificationPermission","Denied","OptedOut","__useHttpPermissionRequestStyle","HttpPermissionRequest","popover","CLOSED","ALLOW_CLICK","registerForPushNotifications","autoAccept","CANCEL_CLICK","__registerForPushNotifications","loadPopup","_showingHttpPermissionRequest","SHOW_HTTP_PERMISSION_REQUEST","Default","REMOTE_NOTIFICATION_PERMISSION_CHANGED","forceUpdatePermission","Granted","HTTP_PERMISSION_REQUEST_RESUBSCRIBE","onComplete","getTags","tags","sendTag","tag","sendTags","newDeviceId","deleteTag","deleteTags","tagsToSend","tags_1","deletedTags","deletedTagKeys","isValidArray","addListenerForNotificationOpened","pageUrl","getIdsAvailable","bundle","serviceWorkerActive","actualSubscription","newSubscription","isValidBoolean","optOut","doOptOut","getRegistrationId","subscriptionStatus","sendSelfNotification","allowEmpty","requireHttps","item","VERSION","_notificationOpenedCallbacks","_idsAvailable_callback","_defaultLaunchURL","_isNotificationEnabledCallback","_subscriptionSet","_sessionIframeAdded","environment","indexedDb","mainHelper","subscriptionHelper","workerHelper","eventHelper","initHelper","testHelper","_LOGGING","LOGGING","checkAndWipeUserSubscription","_initHttp","initHttp","_initPopup","initPopup","CONNECTED","POPUP_LOADED","POPUP_ACCEPTED","POPUP_REJECTED","IFRAME_POPUP_INITIALIZE","REQUEST_HOST_URL","IS_SHOWING_HTTP_PERMISSION_REQUEST","WINDOW_TIMEOUT","FINISH_REMOTE_REGISTRATION_IN_PROGRESS","POPUP_BEGIN_MESSAGEPORT_COMMS","TEST_WOULD_DISPLAY","POPUP_WINDOW_TIMEOUT","NOTIFICATION_TYPES","logLevel","OneSignalStub","promiseStub","functionName","untypedOneSignalStub","subscriptionBell","ServiceWorker","run","onPushReceived","onNotificationClosed","waitUntil","onNotificationClicked","onServiceWorkerInstalled","onServiceWorkerActivated","onPushSubscriptionChange","refetchRequests","REFETCH_REQUESTS","onFetch","SKIP_REFETCH_REQUESTS","getNotifications","notifications","notifications_1","processQuery","queryType","queries","promiseResolve","queryClient","serviceWorkerClient","promiseReject","parseOrFetchNotifications","displayBackupNotification","notificationEventPromiseFns","notifications_2","rawNotification","buildStructuredNotificationObject","notif","displayNotification","updateBackupNotification","executeWebhooks","reduce","UNSUBSCRIBED_FROM_NOTIFICATIONS","isServerCorsEnabled","webhookTargetUrl","postData","fetchOptions","heading","X-OneSignal-Event","Content-Type","getActiveClients","windowClients","activeClients","windowClients_1","client","clients","matchAll","includeUncontrolled","frameType","isSubdomainIframe","custom","alert","u","image","rawButton","ensureImageResourceHttps","imageUrl","parsedImageUrl","ensureNotificationResourcesHttps","_getTitle","defaultTitle","defaultIcon","notificationOptions","actions","requireInteraction","renotify","showNotification","isWelcomeNotification","__isOneSignalBackupNotification","shouldOpenNotificationUrl","getNotificationUrlToOpen","launchUrl","dbDefaultNotificationUrl","matchPreference","actionPreference","notificationOpensLink","doNotOpenLink","activeClients_1","clientUrl","lastKnownHostUrl","clientOrigin","launchOrigin","e_1","e_2","e_3","e_4","focus","navigate","openUrl","player_id","opened","openWindow","e_5","serviceWorkerVersionType","skipWaiting","activationPromise","claim","_subscribeForPush","respondWith","simulateEvent","ExtendableEvent","retrievedAppId","oldSubscription","pageTitle","isValidPushPayload","retrieveNotifications","rawData","recoveredUserId","unsubscriptionResult","OneSignalWorker","ActiveAnimatedElement_1","Badge","isNaN","badgeNumber","Button","mouse","onHovering","onTap","onHovered","onEndTap","onClick","pulse","unsubscribed","subscribed","blocked","Dialog","subscribeButtonId","unsubscribeButtonId","getPlatformNotificationIcon","updateBellLauncherDialogBody","subscribeButtonSelectorId","unsubscribeButtonSelectorId","currentSetSubscription","footer","notificationIconHtml","buttonHtml","instructionsHtml","Launcher","MissingDomElement","predefinedOneSignalPushes","argName","argument","Unknown","HttpHelper","preinitializePromise","_thisIsTheModal","isModal","retrievals","retrievalOpPromises","retrievals_1","retrieval","insertions","insertionOpPromises","insertions_1","insertion","removals","removalOpPromises","removals_1","removal","hostInitOptions","defaultUrl","continuePressed","isShowingHttpPermReq","subdomainLoadPromise","contentWindow","defaultUrlResult","defaultTitleResult","promptType","parentHostname","subdomainPopup","HttpModal","FINISH_CLICK","dialogHtml","onHttpModalFinished","DynamicResourceLoader_1","Context","DynamicResourceLoader","Popover","allowButton","onPopoverAllowed","cancelButton","onPopoverCanceled","animationName","getCache","loadIfNew","load","domElement","parsedUrl","bool","array","ticky","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","writable","_extendableBuiltin2","getPrototypeOf","captureStackTrace","stack","cls","ExtendableBuiltin","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","Item","process","nextTick","argv","binding","cwd","chdir","dir","umask","setImmediate","tasksByHandle","nextHandle","registerImmediate","clearImmediate","handle","runIfPresent","currentlyRunningATask","doc","attachTo","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","onGlobalMessage","attachEvent","html","script","createChannel","selfed","internalEmitter","postToWorker","serialization","messageChannel","postFromWorker","broadcastHandler","__broadcast","postFromPage","replyToPage","broadcastToPages","gotClients","emitToClient","replyTo","replyToClient","clientId","wasClientFound","tick","si","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout"],"mappings":"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"}